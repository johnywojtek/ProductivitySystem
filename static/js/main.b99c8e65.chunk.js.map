{"version":3,"sources":["store/actions.js","config.js","App/layout/Loader/index.js","hoc/_Aux/index.js","App/layout/ScrollToTop/index.js","route.js","App/index.js","fb/config.js","serviceWorker.js","store/reducer.js","index.js"],"names":["COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","LOGIN_SUCCESS","LOGIN_ERROR","SIGNOUT_SUCCCESS","SIGNUP_SUCCESS","SIGNUP_ERROR","addZg","payload","dispatch","getState","_ref","getFirebase","getFirestore","collection","doc","localStorage","getItem","update","then","type","catch","err","console","log","dayStart","uid","workBlocksCount","_ref2","add","created_at","moment","format","workBlocks","daySummary","planned_work_blocks","good_things_note","learned_note","mistakes_note","e","setItem","id","updateSummary","_ref3","Object","_Users_admin_Desktop_EWS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","addTask","tasks","taskId","_ref4","toggleTask","currentTaskId","taskState","_ref5","firestore","data","map","task","done","addWeeklyTasks","_ref6","secondaryTasks","res","reorderTasks","updatedTasks","_ref7","signIn","credentials","getstate","_ref8","firebase","auth","signInWithEmailAndPassword","email","password","changeLevel","level","userId","_ref9","currentLevel","signOut","_ref10","signUp","_ref11","createUserWithEmailAndPassword","user","set","userName","isDayEnd","i","dayId","__webpack_exports__","defaultPath","layout","preLayout","collapseMenu","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","loader","a","createElement","className","Aux","props","children","ScrollToTop","prevProps","this","location","window","scrollTo","React","Component","withRouter","route","path","exact","name","component","lazy","Promise","all","bind","AdminLayout","Loadable","loading","Loader","App","history","useHistory","useEffect","current_date","listen","action","pathname","push","removeItem","menu","routes","index","react_default","react_router","key","render","_Aux","layout_ScrollToTop","react","fallback","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","Boolean","hostname","match","initialState","objectSpread","isOpen","isTrigger","config","isFullScreen","initAuth","authError","combineReducers","appState","state","arguments","length","undefined","trigger","open","actionTypes","triggerIndex","indexOf","filter","item","concat","toConsumableArray","message","firestoreReducer","firebaseReducer","createStoreWithMiddleware","createStore","reducer","compose","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","useFirestoreForProfile","userProfile","createFirestoreInstance","app","es","store","react_redux_firebase_es","react_router_dom","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"q1BACaA,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAc,cACdC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAoB,oBACpBC,EAAqB,qBAIrBC,EAAgB,gBAChBC,EAAc,cACdC,EAAmB,mBAEnBC,EAAiB,iBACjBC,EAAe,eAIfC,EAAQ,SAACC,GAAD,OAAa,SAC9BC,EACAC,EAF8BC,GAI7BA,EADCC,aAEgBC,EADjBF,EADcE,gBAIVC,WAAW,QACXC,IAAIC,aAAaC,QAAQ,WACzBC,OAAOV,GACPW,KAAK,kBAAMV,EAAS,CAAEW,KAtBT,SAsBuBZ,cACpCa,MAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAGvBG,EAAW,SAACC,EAAKC,GAAN,OAA0B,SAC9ClB,EACAC,EAF8CkB,GAI7CA,EADChB,aAEgBC,EADjBe,EADcf,gBAKVC,WAAW,QACXe,IAAI,CACDH,MACAI,WAAYC,MAASC,SACrBC,WAAY,GACZC,WAAY,CACRC,oBAAqBR,EACrBS,iBAAkB,GAClBC,aAAc,GACdC,cAAe,MAGtBnB,KAAK,SAACoB,GACHvB,aAAawB,QAAQ,SAAUD,EAAEE,IACjCzB,aAAawB,QACT,mBACAT,MAASC,OAAO,eAEpBvB,EAAS,CAAEW,KA1CE,gBA4ChBC,MAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAGvBoB,EAAgB,SAAClC,GAAD,OAAa,SACtCC,EACAC,EAFsCiC,GAIrCA,EADC/B,aAEgBC,EADjB8B,EADc9B,gBAKVC,WAAW,QACXC,IAAIC,aAAaC,QAAQ,WACzBC,OAAO,CAAEgB,WAAWU,OAAAC,EAAA,EAAAD,CAAA,GAAMpC,KAC1BW,KAAK,kBAAMV,EAAS,CAAEW,KAlED,iBAkEuBZ,cAC5Ca,MAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAGvBwB,EAAU,SAACC,EAAOC,GAAR,OAAmB,SACtCvC,EACAC,EAFsCuC,GAIrCA,EADCrC,aAEgBC,EADjBoC,EADcpC,gBAIVC,WAAW,SACXC,IAAIiC,GACJ9B,OAAO,CACJ6B,YAICG,EAAa,SAACF,EAAQG,EAAeC,GAAxB,OAAsC,SAC5D3C,EACAC,EAF4D2C,GAI3DA,EADCzC,aAEgBC,EADjBwC,EADcxC,gBAKVC,WAAW,SACXC,IAAIiC,GACJ9B,OAAO,CACJ6B,MAAOrC,IAAW4C,UAAUC,KAAKR,MAAMC,GAAQD,MAAMS,IAAI,SAACC,GAAD,OACrDA,EAAKhB,IAAMU,EAAXP,OAAAC,EAAA,EAAAD,CAAA,GAAgCa,EAAhC,CAAsCC,KAAMN,IAAcK,QAK7DE,EAAiB,SAACZ,EAAO3B,EAAM4B,GAAd,OAAyB,SACnDvC,EACAC,EAFmDkD,GAIlDA,EADChD,aAEgBC,EADjB+C,EADc/C,gBAKVC,WAAW,eACXC,IAAIiC,GACJ9B,OAAO,CACJ2C,eAAgBd,IAEnB5B,KAAK,SAAC2C,GAAD,OAASvC,QAAQC,IAAIsC,KAC1BzC,MAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAEvByC,EAAe,SAACC,EAAchB,GAAf,OAA0B,SAClDvC,EACAC,EAFkDuD,GAIjDA,EADCrD,aAEgBC,EADjBoD,EADcpD,gBAKVC,WAAW,SACXC,IAAIiC,GACJ9B,OAAO,CAAE6B,MAAOiB,IAChB7C,KAAK,kBAAMV,EAAS,CAAEW,KAlIT,aAmIbC,MAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAEvB4C,EAAS,SAACC,GAAD,OAAiB,SACnC1D,EACA2D,EAFmCC,GAIlC,IACKC,GAAW1D,EADhByD,EADCzD,eAGFW,QAAQC,IAAI2C,GAEZG,EACKC,OACAC,2BAA2BL,EAAYM,MAAON,EAAYO,UAC1DvD,KAAK,WACFV,EAAS,CAAEW,KAAMlB,MAEpBmB,MAAM,SAACC,GACJb,EAAS,CAAEW,KAAMjB,EAAamB,YAI7BqD,EAAc,SAACC,EAAOC,GAAR,OAAmB,SAC1CpE,EACAC,EAF0CoE,GAIzCA,EADClE,aAEgBC,EADjBiE,EADcjE,gBAKVC,WAAW,SACXC,IAAI8D,GACJ3D,OAAO,CAAE6D,aAAcH,IACvBzD,KAAK,kBAAMV,EAAS,CAAEW,KAnKT,aAoKbC,MAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAEvB0D,EAAU,kBAAM,SAACvE,EAAU2D,EAAXa,IACRrE,EADiDqE,EAAlBrE,eAI3C2D,OACAS,UACA7D,KAAK,WACFV,EAAS,CAAEW,KAAMhB,QAIhB8E,EAAS,SAACf,GAAD,OAAiB,SACnC1D,EACA2D,EAFmCe,GAIlC,IADCvE,EACDuE,EADCvE,YAAaC,EACdsE,EADctE,aAETyD,EAAW1D,IACX0C,EAAYzC,IAQlByD,EACKC,OACAa,+BAA+BjB,EAAYM,MAAON,EAAYO,UAC9DvD,KAAK,SAAC2C,GACHR,EACKxC,WAAW,SACXC,IAAI+C,EAAIuB,KAAK3D,KACb4D,IAAI,CACDC,SAAUpB,EAAYoB,SACtBR,cAAc,EACdS,UAAU,IAElB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAnBdZ,EAoBGf,EAAIuB,KAAK3D,IApBJgE,EAoBSD,EAnBvBnC,EAAUxC,WAAW,SAASe,IAAI,CACrCH,IAAKmD,EACLa,QACA3C,MAAO,KAJC,IAAC8B,EAAQa,IAuBpBvE,KAAK,WACFV,EAAS,CAAEW,KAAMf,MAEpBgB,MAAM,SAACC,GACJb,EAAS,CAAEW,KAAMd,EAAcgB,8CC3N5BqE,EAAA,GACXC,YAAa,qBAEbC,OAAQ,WACRC,UAAW,KACXC,cAAc,EACdC,WAAY,aACZC,cAAc,EACdC,gBAAiB,iBACjBC,aAAc,iBACdC,cAAe,gBACfC,cAAc,EACdC,WAAW,EACXC,gBAAgB,EAChBC,mBAAmB,EACnBC,WAAW,EACXC,gBAAiB,SACjBC,YAAa,SACbC,mBAAoB,iBACpBC,kBAAmB,gBACnBC,kBAAkB,EAClBC,aAAa,EACbC,kBACI,mEACJC,gBAAiB,sCCxBrB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAYeI,IAVA,WACX,OACIF,EAAAG,EAAAC,cAAA,OAAKC,UAAU,aACXL,EAAAG,EAAAC,cAAA,OAAKC,UAAU,gBACXL,EAAAG,EAAAC,cAAA,OAAKC,UAAU,qDCJhBC,IAFH,SAACC,GAAD,OAAWA,EAAMC,oSCGvBC,6LACiBC,GACXC,KAAKJ,MAAMK,WAAaF,EAAUE,UAClCC,OAAOC,SAAS,EAAG,oCAKvB,OAAOH,KAAKJ,MAAMC,gBARAO,IAAMC,WAYjBC,cAAWR,GCKXS,EAfD,CACV,CACIC,KAAM,iBACNC,OAAO,EACPC,KAAM,WACNC,UARQP,IAAMQ,KAAK,kBAAMC,QAAAC,IAAA,CAAA1B,EAAA5E,EAAA,GAAA4E,EAAA5E,EAAA,MAAApB,KAAAgG,EAAA2B,KAAA,cAU7B,CACIP,KAAM,iBACNC,OAAO,EACPC,KAAM,WACNC,UAbQP,IAAMQ,KAAK,kBAAMC,QAAAC,IAAA,CAAA1B,EAAA5E,EAAA,GAAA4E,EAAA5E,EAAA,MAAApB,KAAAgG,EAAA2B,KAAA,eCQ3BC,EAAcC,IAAS,CACzB1B,OAAQ,kBAAMsB,QAAAC,IAAA,CAAA1B,EAAA5E,EAAA,IAAA4E,EAAA5E,EAAA,MAAApB,KAAAgG,EAAA2B,KAAA,YACdG,QAASC,MAuDEC,EArDH,WACR,IAAMC,EAAUC,cAEhBC,oBAAU,WACN,IAAMC,EAAexH,MAASC,OAAO,cACrCoH,EAAQI,OAAO,SAACxB,EAAUyB,GAYI,eAAtBzB,EAAS0B,UACTH,IAAiBvI,aAAaC,QAAQ,qBAEtCmI,EAAQO,KAAK,gBAGjBJ,IAAiBvI,aAAaC,QAAQ,sBACtCD,aAAa4I,WAAW,oBACxBR,EAAQO,KAAK,gBAElB,IACH,IAAME,EAAOC,EAAOtG,IAAI,SAAC8E,EAAOyB,GAC5B,OAAOzB,EAAMI,UACTsB,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,CACIC,IAAKH,EACLxB,KAAMD,EAAMC,KACZC,MAAOF,EAAME,MACbC,KAAMH,EAAMG,KACZ0B,OAAQ,SAACxC,GAAD,OAAWqC,EAAAzC,EAAAC,cAACc,EAAMI,UAAcf,MAE5C,OAER,OACIqC,EAAAzC,EAAAC,cAAC4C,EAAA,EAAD,KACIJ,EAAAzC,EAAAC,cAAC6C,EAAD,KACIL,EAAAzC,EAAAC,cAAC8C,EAAA,SAAD,CAAUC,SAAUP,EAAAzC,EAAAC,cAAC0B,EAAA,EAAD,OAChBc,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,KACKJ,EACDG,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,CAAO1B,KAAK,IAAIG,UAAWK,wCC9CnDzE,IAASkG,cAVY,CACjBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,gBACnBC,MAAO,+CAIXzG,IAAShB,YAAY0H,SAAS,CAAEC,uBAAuB,IACxC3G,QAAf,ECJoB4G,QACW,cAA7BjD,OAAOD,SAASmD,UAEe,UAA7BlD,OAAOD,SAASmD,UAEhBlD,OAAOD,SAASmD,SAASC,MACvB,gGCZAC,EAAYzI,OAAA0I,EAAA,EAAA1I,CAAA,CACd2I,OAAQ,GACRC,UAAW,IACRC,IAHW,CAIdC,cAAc,IAkFZC,EAAW,CAAEC,UAAW,MA6BfC,cAAgB,CAC3BC,SA7GY,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAc5B,EAAWuC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1CC,EAAU,GACVC,EAAO,GAEX,OAAQ3C,EAAOrI,MACX,KAAKiL,IACD,OAAOzJ,OAAA0I,EAAA,EAAA1I,CAAA,GACAmJ,EADP,CAEIhG,cAAegG,EAAMhG,eAE7B,KAAKsG,IACD,GAAyB,QAArB5C,EAAOI,KAAKzI,KAAgB,CAC5BgL,EAAOL,EAAMR,OAGb,IAAMe,GAFNH,EAAUJ,EAAMP,WAEae,QAAQ9C,EAAOI,KAAKpH,IAC7C6J,GAAgB,IAChBF,EAAOA,EAAKI,OAAO,SAACC,GAAD,OAAUA,IAAShD,EAAOI,KAAKpH,KAClD0J,EAAUA,EAAQK,OAAO,SAACC,GAAD,OAAUA,IAAShD,EAAOI,KAAKpH,OAGtC,IAAlB6J,IACAF,EAAI,GAAAM,OAAA9J,OAAA+J,EAAA,EAAA/J,CAAOwJ,GAAP,CAAa3C,EAAOI,KAAKpH,KAC7B0J,EAAO,GAAAO,OAAA9J,OAAA+J,EAAA,EAAA/J,CAAOuJ,GAAP,CAAgB1C,EAAOI,KAAKpH,UAEpC,CACH2J,EAAOL,EAAMR,OACb,IAAMe,EAAeP,EAAMP,UAAUe,QAAQ9C,EAAOI,KAAKpH,IACzD0J,GAA4B,IAAlBG,EAAsB,CAAC7C,EAAOI,KAAKpH,IAAM,GACnD2J,GAAyB,IAAlBE,EAAsB,CAAC7C,EAAOI,KAAKpH,IAAM,GAGpD,OAAOG,OAAA0I,EAAA,EAAA1I,CAAA,GACAmJ,EADP,CAEIR,OAAQa,EACRZ,UAAWW,IAEnB,KAAKE,IACD,OAAOzJ,OAAA0I,EAAA,EAAA1I,CAAA,GACAmJ,EADP,CAEIR,OAAQa,EACRZ,UAAWW,IAEnB,KAAKE,IACD,MAAyB,QAArB5C,EAAOI,KAAKzI,MACZgL,EAAOL,EAAMR,QACbY,EAAUJ,EAAMP,WAEae,QAAQ9C,EAAOI,KAAKpH,KAC7B,IAChB2J,EAAOA,EAAKI,OAAO,SAACC,GAAD,OAAUA,IAAShD,EAAOI,KAAKpH,KAClD0J,EAAUA,EAAQK,OAAO,SAACC,GAAD,OAAUA,IAAShD,EAAOI,KAAKpH,MAErDG,OAAA0I,EAAA,EAAA1I,CAAA,GACAmJ,EADP,CAEIR,OAAQa,EACRZ,UAAWW,KAGZvJ,OAAA0I,EAAA,EAAA1I,CAAA,GAAKmJ,GAChB,KAAKM,IACD,OAAOzJ,OAAA0I,EAAA,EAAA1I,CAAA,GACAmJ,EADP,CAEIL,cAAeK,EAAML,eAE7B,KAAKW,IACD,OAAOzJ,OAAA0I,EAAA,EAAA1I,CAAA,GACAmJ,EADP,CAEIL,cAAc,IAEtB,KAAKW,IACD,OAAOzJ,OAAA0I,EAAA,EAAA1I,CAAA,GACAmJ,EADP,CAEIlG,OAAQ4D,EAAO5D,SAEvB,QACI,OAAOkG,IAkCfxH,KA9BgB,WAA8B,IAA7BwH,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBL,EAAUlC,EAAWuC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQzC,EAAOrI,MACX,KAAKiL,IACD,OAAOzJ,OAAA0I,EAAA,EAAA1I,CAAA,GACAmJ,EADP,CAEIH,UAAW,iBAEnB,KAAKS,IAKL,KAAKA,IACD,OAAOzJ,OAAA0I,EAAA,EAAA1I,CAAA,GACAmJ,EADP,CAEIH,UAAW,OAEnB,KAAKS,IACD,OAAOzJ,OAAA0I,EAAA,EAAA1I,CAAA,GACAmJ,EADP,CAEIH,UAAWnC,EAAOnI,IAAIsL,UAE9B,KAAKP,IAEL,QACI,OAAON,IAMfzI,UAAWuJ,mBACXvI,SAAUwI,oBC1GRC,EAA4BC,YAC9BC,EACAC,YACIC,YAAgBC,IAAMC,kBAAkB,CAAExM,4BAAcD,6BACxD0M,yBAAehJ,IAAUiJ,KAO3BC,EAAW,CACblJ,aACAmH,OANc,CACdgC,wBAAwB,EACxBC,YAAa,SAKbjN,SAAUsM,EAA0BtM,SACpCkN,mDAGEC,EACF5D,EAAAzC,EAAAC,cAACqG,EAAA,EAAD,CAAUC,MAAOf,GACb/C,EAAAzC,EAAAC,cAACuG,EAAA,2BAA+BP,EAC5BxD,EAAAzC,EAAAC,cAACwG,EAAA,EAAD,KAEIhE,EAAAzC,EAAAC,cAACyG,EAAD,SAMhBC,IAAS/D,OAAOyD,EAAKO,SAASC,eAAe,SFiFvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpN,KAAK,SAAAqN,GACjCA,EAAaC","file":"static/js/main.b99c8e65.chunk.js","sourcesContent":["import moment from 'moment';\r\nexport const COLLAPSE_MENU = 'COLLAPSE_MENU';\r\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\r\nexport const FULL_SCREEN = 'FULL_SCREEN';\r\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\r\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';\r\nexport const ADD_ZG = 'ADD_ZG';\r\nexport const CREATE_SUMMARY = 'CREATE_SUMMARY';\r\nexport const UPDATE_SUMMARY = 'UPDATE_SUMMARY';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const SIGNOUT_SUCCCESS = 'SIGNOUT_SUCCCESS';\r\nexport const ADD_WEEKPLAN = 'ADD_WEEKPLAN';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\r\n\r\nexport const DAY_START = 'DAY_START';\r\n\r\nexport const addZg = (payload) => (\r\n    dispatch,\r\n    getState,\r\n    { getFirebase, getFirestore }\r\n) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n        .collection('days')\r\n        .doc(localStorage.getItem('day_id'))\r\n        .update(payload)\r\n        .then(() => dispatch({ type: ADD_ZG, payload }))\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const dayStart = (uid, workBlocksCount) => (\r\n    dispatch,\r\n    getState,\r\n    { getFirebase, getFirestore }\r\n) => {\r\n    const firestore = getFirestore();\r\n\r\n    firestore\r\n        .collection('days')\r\n        .add({\r\n            uid,\r\n            created_at: moment().format(),\r\n            workBlocks: [],\r\n            daySummary: {\r\n                planned_work_blocks: workBlocksCount,\r\n                good_things_note: '',\r\n                learned_note: '',\r\n                mistakes_note: '',\r\n            },\r\n        })\r\n        .then((e) => {\r\n            localStorage.setItem('day_id', e.id);\r\n            localStorage.setItem(\r\n                'day_created_date',\r\n                moment().format('DD/MM/YYYY')\r\n            );\r\n            dispatch({ type: DAY_START });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateSummary = (payload) => (\r\n    dispatch,\r\n    getState,\r\n    { getFirebase, getFirestore }\r\n) => {\r\n    const firestore = getFirestore();\r\n\r\n    firestore\r\n        .collection('days')\r\n        .doc(localStorage.getItem('day_id'))\r\n        .update({ daySummary: { ...payload } })\r\n        .then(() => dispatch({ type: UPDATE_SUMMARY, payload }))\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const addTask = (tasks, taskId) => (\r\n    dispatch,\r\n    getState,\r\n    { getFirebase, getFirestore }\r\n) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n        .collection('tasks')\r\n        .doc(taskId)\r\n        .update({\r\n            tasks,\r\n        });\r\n};\r\n\r\nexport const toggleTask = (taskId, currentTaskId, taskState) => (\r\n    dispatch,\r\n    getState,\r\n    { getFirebase, getFirestore }\r\n) => {\r\n    const firestore = getFirestore();\r\n\r\n    firestore\r\n        .collection('tasks')\r\n        .doc(taskId)\r\n        .update({\r\n            tasks: getState().firestore.data.tasks[taskId].tasks.map((task) =>\r\n                task.id == currentTaskId ? { ...task, done: taskState } : task\r\n            ),\r\n        });\r\n};\r\n\r\nexport const addWeeklyTasks = (tasks, type, taskId) => (\r\n    dispatch,\r\n    getState,\r\n    { getFirebase, getFirestore }\r\n) => {\r\n    const firestore = getFirestore();\r\n\r\n    firestore\r\n        .collection('weeklyTasks')\r\n        .doc(taskId)\r\n        .update({\r\n            secondaryTasks: tasks,\r\n        })\r\n        .then((res) => console.log(res))\r\n        .catch((err) => console.log(err));\r\n};\r\nexport const reorderTasks = (updatedTasks, taskId) => (\r\n    dispatch,\r\n    getState,\r\n    { getFirebase, getFirestore }\r\n) => {\r\n    const firestore = getFirestore();\r\n\r\n    firestore\r\n        .collection('tasks')\r\n        .doc(taskId)\r\n        .update({ tasks: updatedTasks })\r\n        .then(() => dispatch({ type: ADD_ZG }))\r\n        .catch((err) => console.log(err));\r\n};\r\nexport const signIn = (credentials) => (\r\n    dispatch,\r\n    getstate,\r\n    { getFirebase }\r\n) => {\r\n    const firebase = getFirebase();\r\n    console.log(credentials);\r\n\r\n    firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n        .then(() => {\r\n            dispatch({ type: LOGIN_SUCCESS });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: LOGIN_ERROR, err });\r\n        });\r\n};\r\n\r\nexport const changeLevel = (level, userId) => (\r\n    dispatch,\r\n    getState,\r\n    { getFirebase, getFirestore }\r\n) => {\r\n    const firestore = getFirestore();\r\n\r\n    firestore\r\n        .collection('users')\r\n        .doc(userId)\r\n        .update({ currentLevel: level })\r\n        .then(() => dispatch({ type: ADD_ZG }))\r\n        .catch((err) => console.log(err));\r\n};\r\nexport const signOut = () => (dispatch, getstate, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n            dispatch({ type: SIGNOUT_SUCCCESS });\r\n        });\r\n};\r\n\r\nexport const signUp = (credentials) => (\r\n    dispatch,\r\n    getstate,\r\n    { getFirebase, getFirestore }\r\n) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    const addTask = (userId, dayId) => {\r\n        return firestore.collection('tasks').add({\r\n            uid: userId,\r\n            dayId,\r\n            tasks: [],\r\n        });\r\n    };\r\n    firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(credentials.email, credentials.password)\r\n        .then((res) => {\r\n            firestore\r\n                .collection('users')\r\n                .doc(res.user.uid)\r\n                .set({\r\n                    userName: credentials.userName,\r\n                    currentLevel: false,\r\n                    isDayEnd: false,\r\n                });\r\n            for (let i = 0; i < 7; i++) {\r\n                addTask(res.user.uid, i);\r\n            }\r\n        })\r\n        .then(() => {\r\n            dispatch({ type: SIGNUP_SUCCESS });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: SIGNUP_ERROR, err });\r\n        });\r\n};\r\n","export default {\r\n    defaultPath: '/dashboard/default',\r\n\r\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\r\n    preLayout: null, // (not available in lite version)\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'menu-light', // menu-dark, (menu-light, dark are not available in lite version)\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\r\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\r\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\r\n    navBackImage: false, // not available in lite version\r\n    rtlLayout: false, // not available in lite version\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false, // not available in lite version\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\r\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\r\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\r\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\r\n    navListTitleHide: false, // not available in lite version\r\n    configBlock: false, // not available in lite version\r\n    layout6Background:\r\n        'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize: '', // used only for pre-layout = layout-6\r\n};\r\n","import React from 'react';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader-bg\">\r\n            <div className=\"loader-track\">\r\n                <div className=\"loader-fill\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default loader;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\r\n\r\nconst SignUp1 = React.lazy(() => import('./Pages/Main/SignUp1'));\r\nconst Signin1 = React.lazy(() => import('./Pages/Main/SignIn1'));\r\n\r\nconst route = [\r\n    {\r\n        path: '/auth/signup-1',\r\n        exact: true,\r\n        name: 'Signup 1',\r\n        component: SignUp1,\r\n    },\r\n    {\r\n        path: '/auth/signin-1',\r\n        exact: true,\r\n        name: 'Signin 1',\r\n        component: Signin1,\r\n    },\r\n];\r\n\r\nexport default route;\r\n","import React, { useEffect, Suspense } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport Loadable from 'react-loadable';\nimport moment from 'moment';\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\n\nimport Loader from './layout/Loader';\nimport Aux from '../hoc/_Aux';\nimport ScrollToTop from './layout/ScrollToTop';\nimport routes from '../route';\n\nconst AdminLayout = Loadable({\n    loader: () => import('./layout/AdminLayout'),\n    loading: Loader,\n});\nconst App = () => {\n    const history = useHistory();\n\n    useEffect(() => {\n        const current_date = moment().format('DD/MM/YYYY');\n        history.listen((location, action) => {\n            // console.log(\n            //     `The current URL is ${location.pathname}${location.search}${\n            //         location.hash\n            //     }`\n            // );\n            // console.log(`The last navigation action was ${action}`);\n            // console.log(location.pathname); // check which is current pathname\n            // localStorage.removeItem('day_created_date');\n\n            if (\n                //Dodać ifa czy jest zalogowany poniewaz powoduje blad gdy user sie wyloguje zawsze przenosi do /day-start\n                location.pathname !== '/day-start' &&\n                current_date !== localStorage.getItem('day_created_date')\n            ) {\n                history.push('/day-start');\n            }\n        });\n        if (current_date !== localStorage.getItem('day_created_date')) {\n            localStorage.removeItem('day_created_date');\n            history.push('/day-start');\n        }\n    }, []);\n    const menu = routes.map((route, index) => {\n        return route.component ? (\n            <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                name={route.name}\n                render={(props) => <route.component {...props} />}\n            />\n        ) : null;\n    });\n    return (\n        <Aux>\n            <ScrollToTop>\n                <Suspense fallback={<Loader />}>\n                    <Switch>\n                        {menu}\n                        <Route path=\"/\" component={AdminLayout} />\n                    </Switch>\n                </Suspense>\n            </ScrollToTop>\n        </Aux>\n    );\n};\n\nexport default App;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar firebaseConfig = {\n    apiKey: 'AIzaSyDtsvd4CTFj2xlBlpmV0RoWmldZ8eDO9ns',\n    authDomain: 'ewsproject-2c7fe.firebaseapp.com',\n    databaseURL: 'https://ewsproject-2c7fe.firebaseio.com',\n    projectId: 'ewsproject-2c7fe',\n    storageBucket: 'ewsproject-2c7fe.appspot.com',\n    messagingSenderId: '1082461674219',\n    appId: '1:1082461674219:web:b1580d6c438c7f47fa3cae',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\nexport default firebase;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\r\nimport config from './../config';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst initialState = {\r\n    isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false, // static can't change\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n\r\n    switch (action.type) {\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu,\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter((item) => item !== action.menu.id);\r\n                    trigger = trigger.filter((item) => item !== action.menu.id);\r\n                }\r\n\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            } else {\r\n                open = state.isOpen;\r\n                const triggerIndex = state.isTrigger.indexOf(action.menu.id);\r\n                trigger = triggerIndex === -1 ? [action.menu.id] : [];\r\n                open = triggerIndex === -1 ? [action.menu.id] : [];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter((item) => item !== action.menu.id);\r\n                    trigger = trigger.filter((item) => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger,\r\n                };\r\n            }\r\n            return { ...state };\r\n        case actionTypes.FULL_SCREEN:\r\n            return {\r\n                ...state,\r\n                isFullScreen: !state.isFullScreen,\r\n            };\r\n        case actionTypes.FULL_SCREEN_EXIT:\r\n            return {\r\n                ...state,\r\n                isFullScreen: false,\r\n            };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst initAuth = { authError: null };\r\nconst authReducer = (state = initAuth, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed',\r\n            };\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.SIGNUP_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n            };\r\n        case actionTypes.SIGNOUT_SUCCCESS:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default combineReducers({\r\n    appState: reducer,\r\n    auth: authReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport {\n    createFirestoreInstance,\n    getFirestore,\n    reduxFirestore,\n} from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport thunk from 'redux-thunk';\nimport App from './App/index';\nimport fbConfig from './fb/config';\nimport firebase from 'firebase/app';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport config from './config';\n\nconst createStoreWithMiddleware = createStore(\n    reducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\nconst rffConfig = {\n    useFirestoreForProfile: true,\n    userProfile: 'users',\n};\nconst rrfProps = {\n    firebase,\n    config: rffConfig,\n    dispatch: createStoreWithMiddleware.dispatch,\n    createFirestoreInstance,\n};\n\nconst app = (\n    <Provider store={createStoreWithMiddleware}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <BrowserRouter>\n                {/* basename=\"/datta-able\" */}\n                <App />\n            </BrowserRouter>\n        </ReactReduxFirebaseProvider>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}