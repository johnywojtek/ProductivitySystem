{"version":3,"sources":["../node_modules/react-bootstrap/es/Col.js","App/components/Range.js","Pages/Main/DaySummary.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","n","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__","DEVICE_SIZES","Col","_React$Component","apply","this","arguments","Object","prototype","render","_this$props","props","bsPrefix","className","Component","as","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","a","createElement","concat","defaultProps","__webpack_exports__","Container","styled","div","_templateObject","_ref","first","_ref2","color","InfoContainer","_templateObject2","Label","h5","_templateObject3","Value","h6","_templateObject4","InfoDesc","_templateObject5","_ref3","alignRight","Range","_ref4","id","title","minDesc","maxDesc","currentValue","_useState","useState","_useState2","_Users_admin_Desktop_EWS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","values","setValues","currColor","react__WEBPACK_IMPORTED_MODULE_3___default","react_range__WEBPACK_IMPORTED_MODULE_5__","step","min","max","onChange","renderTrack","_ref5","children","onMouseDown","onTouchStart","style","_Users_admin_Desktop_EWS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","height","display","width","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","_ref6","isDragged","assign","ItemContainer","CardsContainer","Span","StyledButton","Button","_templateObject6","StyledGold","GiGoldBar","_templateObject7","compose","connect","state","day","firestore","ordered","days","monitoring","updateSummary","firestoreConnect","collection","doc","localStorage","getItem","_Users_admin_Desktop_EWS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","mistakesNote","setMistakesNote","_useState3","_useState4","goodThingsNote","setGoodThingsNote","_useState5","_useState6","learnedNote","setLearnedNote","removeItem","currentDay","useEffect","daySummary","mistakes_note","good_things_note","learned_note","dateToFormat","Date","react__WEBPACK_IMPORTED_MODULE_2___default","_hoc_Aux__WEBPACK_IMPORTED_MODULE_5__","react_moment__WEBPACK_IMPORTED_MODULE_4___default","format","moment","created_at","planned_work_blocks","workBlocks","border","borderImageSlice","borderImageSource","role","Math","round","map","zg","index","key","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","Body","isGold","createdAt","subtract","note","keys","rangeData","item","current","find","currentMonitoring","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","Group","controlId","Control","rows","value","e","target","variant","onClick","data"],"mappings":"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","file":"static/js/30.801ff612.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\n\nvar Col =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Col, _React$Component);\n\n  function Col() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Col.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\"]);\n\n    var spans = [];\n    var classes = [];\n    DEVICE_SIZES.forEach(function (brkPoint) {\n      var propValue = props[brkPoint];\n      delete props[brkPoint];\n      var span, offset, order;\n\n      if (propValue != null && typeof propValue === 'object') {\n        var _propValue$span = propValue.span;\n        span = _propValue$span === void 0 ? true : _propValue$span;\n        offset = propValue.offset;\n        order = propValue.order;\n      } else {\n        span = propValue;\n      }\n\n      var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n      if (span != null) spans.push(span === true ? \"\" + bsPrefix + infix : \"\" + bsPrefix + infix + \"-\" + span);\n      if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n      if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n    });\n\n    if (!spans.length) {\n      spans.push(bsPrefix); // plain 'col'\n    }\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames.apply(void 0, [className].concat(spans, classes))\n    }));\n  };\n\n  return Col;\n}(React.Component);\n\nCol.defaultProps = {\n  as: 'div'\n};\nexport default createBootstrapComponent(Col, 'col');","import React, { useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\n\nconst Container = styled.div`\n    margin: ${({ first }) => (first ? '0px 10px 10px 10px' : '10px')};\n    border: 1.5px solid ${({ color }) => `hsl(${color} 60%)`};\n    padding: 20px;\n    border-radius: 7px;\n`;\n\nconst InfoContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst Label = styled.h5`\n    display: flex;\n`;\nconst Value = styled.h6`\n    font-size: 17px;\n    font-weight: 400;\n    margin: 0 auto;\n`;\nconst InfoDesc = styled.h5`\n    font-size: 13px;\n    width: 300px;\n    text-align: ${({ alignRight }) => alignRight && 'right'};\n`;\n\nconst Range = ({ id, title, color, minDesc, maxDesc, first, currentValue }) => {\n    const [values, setValues] = useState([0]);\n\n    let currColor = values;\n\n    if (values[0] <= 20) {\n        currColor = [20];\n    } else if (values[0] >= 70) {\n        currColor = [70];\n    } else {\n        currColor = values;\n    }\n\n    currentValue(values[0], id);\n    return (\n        <Container color={color} first={first}>\n            <Label>{title}</Label>\n            <InfoContainer>\n                <InfoDesc>0% – {minDesc}</InfoDesc>\n                <Value>{values[0]}%</Value>\n                <InfoDesc alignRight>{maxDesc} – 100%</InfoDesc>\n            </InfoContainer>\n\n            <ReactRange\n                values={values}\n                step={10}\n                min={0}\n                max={100}\n                onChange={(values) => setValues(values)}\n                renderTrack={({ props, children }) => (\n                    <div\n                        onMouseDown={props.onMouseDown}\n                        onTouchStart={props.onTouchStart}\n                        style={{\n                            ...props.style,\n                            height: '36px',\n                            display: 'flex',\n                            width: '100%',\n                        }}>\n                        <div\n                            ref={props.ref}\n                            style={{\n                                height: '20px',\n                                width: '100%',\n                                borderRadius: '4px',\n                                background: getTrackBackground({\n                                    values: values,\n                                    colors: [\n                                        `hsl(${color} ${currColor[0]}%)`,\n                                        '#ccc',\n                                    ],\n                                    min: 0,\n                                    max: 100,\n                                }),\n                                alignSelf: 'center',\n                            }}>\n                            {children}\n                        </div>\n                    </div>\n                )}\n                renderThumb={({ props, isDragged }) => (\n                    <div\n                        {...props}\n                        style={{\n                            ...props.style,\n                        }}\n                    />\n                )}\n            />\n        </Container>\n    );\n};\n\nexport default Range;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Moment from 'react-moment';\nimport Aux from '../../hoc/_Aux';\nimport { Form, Button, Dropdown, Card } from 'react-bootstrap';\nimport Range from '../../App/components/Range';\nimport { connect } from 'react-redux';\nimport { updateSummary } from '../../store/actions';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport moment from 'moment';\nimport { GiGoldBar } from 'react-icons/gi';\nimport _ from 'lodash';\n\nconst Container = styled.div`\n    /* display: flex; */\n`;\nconst ItemContainer = styled.div`\n    /* display: flex; */\n    /* align-items: center; */\n    /* justify-content: center; */\n`;\n\nconst CardsContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n`;\n\nconst Label = styled.h6`\n    font-size: 17px;\n    font-weight: 400;\n    margin: 0 20px;\n    margin-bottom: 10px;\n`;\nconst Span = styled.span`\n    margin-left: 10px;\n`;\nconst StyledButton = styled(Button)`\n    width: 100%;\n    margin-top: 10px;\n`;\n\nconst StyledGold = styled(GiGoldBar)`\n    font-size: 50px;\n    filter: drop-shadow(5px 5px 10px #ffd700);\n    color: #ffd700;\n`;\nconst DaySummary = (props) => {\n    const [mistakesNote, setMistakesNote] = useState('');\n    const [goodThingsNote, setGoodThingsNote] = useState('');\n    const [learnedNote, setLearnedNote] = useState('');\n    localStorage.removeItem('summaryId');\n    if (props.day) {\n        var [currentDay] = props.day;\n    }\n\n    useEffect(\n        () => {\n            if (currentDay) {\n                setMistakesNote(currentDay.daySummary.mistakes_note);\n                setGoodThingsNote(currentDay.daySummary.good_things_note);\n                setLearnedNote(currentDay.daySummary.learned_note);\n            }\n        },\n        [currentDay]\n    );\n\n    const handleSubmit = () => {\n        const data = {\n            planned_work_blocks: currentDay.daySummary.planned_work_blocks,\n            mistakes_note: mistakesNote,\n            good_things_note: goodThingsNote,\n            learned_note: learnedNote,\n        };\n\n        props.updateSummary(data);\n    };\n\n    const dateToFormat = new Date();\n\n    return (\n        <Aux>\n            <Container>\n                <Label>\n                    Podsumowanie dnia:\n                    <Span>\n                        <Moment format=\"dddd DD/MM YYYY\">{dateToFormat}</Moment>\n                    </Span>\n                </Label>\n                <ItemContainer>\n                    <h1>\n                        Start Dnia:\n                        {currentDay &&\n                            moment(currentDay.created_at).format('HH:mm')}\n                    </h1>\n                    <h1>\n                        Ilość Godzin zaplanowanych:\n                        {currentDay &&\n                            currentDay.daySummary.planned_work_blocks}\n                    </h1>\n                    <h1>\n                        Ilość Godzin zrobionych:\n                        {currentDay && currentDay.workBlocks.length}\n                    </h1>\n\n                    <div\n                        className=\"progress\"\n                        style={{\n                            border: '1px solid ',\n                            borderImageSlice: 1,\n                            borderImageSource:\n                                'linear-gradient(-135deg, #1de9b6 0%, #1dc4e9 100%)',\n                        }}>\n                        <div\n                            className=\"progress-bar progress-c-theme\"\n                            role=\"progressbar\"\n                            style={{\n                                width: `${currentDay &&\n                                    (currentDay.workBlocks.length * 100) /\n                                        currentDay.daySummary\n                                            .planned_work_blocks}%`,\n                            }}>\n                            {currentDay &&\n                                Math.round(\n                                    (currentDay.workBlocks.length * 100) /\n                                        currentDay.daySummary\n                                            .planned_work_blocks\n                                )}\n                            %\n                        </div>\n                    </div>\n                </ItemContainer>\n                <CardsContainer>\n                    {currentDay &&\n                        currentDay.workBlocks.map((zg, index) => {\n                            return (\n                                <div className=\"border p-1 m-1\" key={zg.id}>\n                                    <Card.Body className=\"border-bottom\">\n                                        <div className=\"row align-items-center justify-content-center\">\n                                            <div className=\"col-auto\">\n                                                <h4>{index + 1}</h4>\n                                            </div>\n                                            <div className=\"col-auto\">\n                                                {zg.isGold && <StyledGold />}\n                                            </div>\n                                            <div className=\"col text-right\">\n                                                <h4>\n                                                    od{' '}\n                                                    {moment(zg.createdAt)\n                                                        .subtract(50, 'minutes')\n                                                        .format('HH:mm')}\n                                                </h4>\n                                                <h4>\n                                                    do{' '}\n                                                    {moment(\n                                                        zg.createdAt\n                                                    ).format('HH:mm')}\n                                                </h4>\n                                            </div>\n                                            <p className=\" mb-0\">\n                                                <span className=\"text-muted\">\n                                                    {zg.note}\n                                                </span>\n                                            </p>\n                                        </div>\n                                    </Card.Body>\n\n                                    <Card.Body>\n                                        <div className=\"row align-items-center justify-content-center card-active\">\n                                            {props.monitoring &&\n                                                Object.keys(zg.rangeData).map(\n                                                    (item) => {\n                                                        const current = props.monitoring.find(\n                                                            (\n                                                                currentMonitoring\n                                                            ) =>\n                                                                currentMonitoring.id ===\n                                                                item\n                                                        );\n                                                        return (\n                                                            <div\n                                                                className=\"col-6\"\n                                                                key={item}>\n                                                                <h6 className=\"text-center  m-b-5 m-t-10\">\n                                                                    <span className=\"text-muted \">\n                                                                        {\n                                                                            current.title\n                                                                        }\n                                                                    </span>\n                                                                </h6>\n                                                                <div\n                                                                    className=\"progress\"\n                                                                    style={{\n                                                                        border:\n                                                                            '1px solid ',\n                                                                        borderImageSlice: 1,\n                                                                        borderImageSource:\n                                                                            'linear-gradient(-135deg, #1de9b6 0%, #1dc4e9 100%)',\n                                                                    }}>\n                                                                    <div\n                                                                        className=\"progress-bar progress-c-theme\"\n                                                                        role=\"progressbar\"\n                                                                        style={{\n                                                                            width: `${\n                                                                                zg\n                                                                                    .rangeData[\n                                                                                    item\n                                                                                ]\n                                                                            }%`,\n                                                                        }}>\n                                                                        {\n                                                                            zg\n                                                                                .rangeData[\n                                                                                item\n                                                                            ]\n                                                                        }\n                                                                        %\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        );\n                                                    }\n                                                )}\n                                        </div>\n                                    </Card.Body>\n                                </div>\n                            );\n                        })}\n                </CardsContainer>\n                <Form.Group controlId=\"1\">\n                    <Form.Label>Czego się dzisiaj nauczyłem ?</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows=\"3\"\n                        value={learnedNote}\n                        onChange={(e) => setLearnedNote(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"1\">\n                    <Form.Label>\n                        Jakie były błedy ktore popełniłem danego dnia ?\n                    </Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows=\"3\"\n                        value={mistakesNote}\n                        onChange={(e) => setMistakesNote(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"1\">\n                    <Form.Label>\n                        Co zrobiłem dobrze i mogę zrobić aby być bardziej\n                        skutecznym ?\n                    </Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows=\"3\"\n                        value={goodThingsNote}\n                        onChange={(e) => setGoodThingsNote(e.target.value)}\n                    />\n                </Form.Group>\n\n                <StyledButton variant=\"primary\" onClick={handleSubmit}>\n                    Zapisz\n                </StyledButton>\n            </Container>\n        </Aux>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        day: state.firestore.ordered.days,\n        monitoring: state.firestore.ordered.monitoring,\n    };\n};\nexport default compose(\n    connect(\n        mapStateToProps,\n        { updateSummary }\n    ),\n    firestoreConnect([\n        {\n            collection: 'days',\n            doc: localStorage.getItem('day_id'),\n        },\n        {\n            collection: 'monitoring',\n        },\n    ])\n)(DaySummary);\n"],"sourceRoot":""}