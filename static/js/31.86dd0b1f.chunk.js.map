{"version":3,"sources":["App/components/Range.js","Pages/Main/DaySummary.js"],"names":["Container","styled","div","_templateObject","_ref","first","_ref2","color","concat","InfoContainer","_templateObject2","Label","h5","_templateObject3","Value","h6","_templateObject4","InfoDesc","_templateObject5","_ref3","alignRight","Range","_ref4","id","title","minDesc","maxDesc","currentValue","_useState","useState","_useState2","Object","_Users_admin_Desktop_EWS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","values","setValues","currColor","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","react_range__WEBPACK_IMPORTED_MODULE_5__","step","min","max","onChange","renderTrack","_ref5","props","children","onMouseDown","onTouchStart","style","_Users_admin_Desktop_EWS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","height","display","width","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","_ref6","isDragged","assign","ItemContainer","CardsContainer","Span","span","StyledButton","Button","_templateObject6","StyledGold","GiGoldBar","_templateObject7","compose","connect","state","day","firestore","ordered","days","monitoring","updateSummary","firestoreConnect","collection","doc","localStorage","getItem","_Users_admin_Desktop_EWS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","mistakesNote","setMistakesNote","_useState3","_useState4","goodThingsNote","setGoodThingsNote","_useState5","_useState6","learnedNote","setLearnedNote","removeItem","currentDay","useEffect","daySummary","mistakes_note","good_things_note","learned_note","dateToFormat","Date","react__WEBPACK_IMPORTED_MODULE_2___default","_hoc_Aux__WEBPACK_IMPORTED_MODULE_5__","react_moment__WEBPACK_IMPORTED_MODULE_4___default","format","moment","created_at","planned_work_blocks","workBlocks","length","className","border","borderImageSlice","borderImageSource","role","Math","round","map","zg","index","key","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","Body","isGold","createdAt","subtract","note","keys","rangeData","item","current","find","currentMonitoring","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","Group","controlId","Control","as","rows","value","e","target","variant","onClick","data"],"mappings":"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","file":"static/js/31.86dd0b1f.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\n\nconst Container = styled.div`\n    margin: ${({ first }) => (first ? '0px 10px 10px 10px' : '10px')};\n    border: 1.5px solid ${({ color }) => `hsl(${color} 60%)`};\n    padding: 20px;\n    border-radius: 7px;\n`;\n\nconst InfoContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst Label = styled.h5`\n    display: flex;\n`;\nconst Value = styled.h6`\n    font-size: 17px;\n    font-weight: 400;\n    margin: 0 auto;\n`;\nconst InfoDesc = styled.h5`\n    font-size: 13px;\n    width: 300px;\n    text-align: ${({ alignRight }) => alignRight && 'right'};\n`;\n\nconst Range = ({ id, title, color, minDesc, maxDesc, first, currentValue }) => {\n    const [values, setValues] = useState([0]);\n\n    let currColor = values;\n\n    if (values[0] <= 20) {\n        currColor = [20];\n    } else if (values[0] >= 70) {\n        currColor = [70];\n    } else {\n        currColor = values;\n    }\n\n    currentValue(values[0], id);\n    return (\n        <Container color={color} first={first}>\n            <Label>{title}</Label>\n            <InfoContainer>\n                <InfoDesc>0% – {minDesc}</InfoDesc>\n                <Value>{values[0]}%</Value>\n                <InfoDesc alignRight>{maxDesc} – 100%</InfoDesc>\n            </InfoContainer>\n\n            <ReactRange\n                values={values}\n                step={10}\n                min={0}\n                max={100}\n                onChange={(values) => setValues(values)}\n                renderTrack={({ props, children }) => (\n                    <div\n                        onMouseDown={props.onMouseDown}\n                        onTouchStart={props.onTouchStart}\n                        style={{\n                            ...props.style,\n                            height: '36px',\n                            display: 'flex',\n                            width: '100%',\n                        }}>\n                        <div\n                            ref={props.ref}\n                            style={{\n                                height: '20px',\n                                width: '100%',\n                                borderRadius: '4px',\n                                background: getTrackBackground({\n                                    values: values,\n                                    colors: [\n                                        `hsl(${color} ${currColor[0]}%)`,\n                                        '#ccc',\n                                    ],\n                                    min: 0,\n                                    max: 100,\n                                }),\n                                alignSelf: 'center',\n                            }}>\n                            {children}\n                        </div>\n                    </div>\n                )}\n                renderThumb={({ props, isDragged }) => (\n                    <div\n                        {...props}\n                        style={{\n                            ...props.style,\n                        }}\n                    />\n                )}\n            />\n        </Container>\n    );\n};\n\nexport default Range;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Moment from 'react-moment';\nimport Aux from '../../hoc/_Aux';\nimport { Form, Button, Dropdown, Card } from 'react-bootstrap';\nimport Range from '../../App/components/Range';\nimport { connect } from 'react-redux';\nimport { updateSummary } from '../../store/actions';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport moment from 'moment';\nimport { GiGoldBar } from 'react-icons/gi';\nimport _ from 'lodash';\n\nconst Container = styled.div`\n    /* display: flex; */\n`;\nconst ItemContainer = styled.div`\n    /* display: flex; */\n    /* align-items: center; */\n    /* justify-content: center; */\n`;\n\nconst CardsContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n`;\n\nconst Label = styled.h6`\n    font-size: 17px;\n    font-weight: 400;\n    margin: 0 20px;\n    margin-bottom: 10px;\n`;\nconst Span = styled.span`\n    margin-left: 10px;\n`;\nconst StyledButton = styled(Button)`\n    width: 100%;\n    margin-top: 10px;\n`;\n\nconst StyledGold = styled(GiGoldBar)`\n    font-size: 50px;\n    filter: drop-shadow(5px 5px 10px #ffd700);\n    color: #ffd700;\n`;\nconst DaySummary = (props) => {\n    const [mistakesNote, setMistakesNote] = useState('');\n    const [goodThingsNote, setGoodThingsNote] = useState('');\n    const [learnedNote, setLearnedNote] = useState('');\n    localStorage.removeItem('summaryId');\n    if (props.day) {\n        var [currentDay] = props.day;\n    }\n\n    useEffect(\n        () => {\n            if (currentDay) {\n                setMistakesNote(currentDay.daySummary.mistakes_note);\n                setGoodThingsNote(currentDay.daySummary.good_things_note);\n                setLearnedNote(currentDay.daySummary.learned_note);\n            }\n        },\n        [currentDay]\n    );\n\n    const handleSubmit = () => {\n        const data = {\n            planned_work_blocks: currentDay.daySummary.planned_work_blocks,\n            mistakes_note: mistakesNote,\n            good_things_note: goodThingsNote,\n            learned_note: learnedNote,\n        };\n\n        props.updateSummary(data);\n    };\n\n    const dateToFormat = new Date();\n\n    return (\n        <Aux>\n            <Container>\n                <Label>\n                    Podsumowanie dnia:\n                    <Span>\n                        <Moment format=\"dddd DD/MM YYYY\">{dateToFormat}</Moment>\n                    </Span>\n                </Label>\n                <ItemContainer>\n                    <h1>\n                        Start Dnia:\n                        {currentDay &&\n                            moment(currentDay.created_at).format('HH:mm')}\n                    </h1>\n                    <h1>\n                        Ilość Godzin zaplanowanych:\n                        {currentDay &&\n                            currentDay.daySummary.planned_work_blocks}\n                    </h1>\n                    <h1>\n                        Ilość Godzin zrobionych:\n                        {currentDay && currentDay.workBlocks.length}\n                    </h1>\n\n                    <div\n                        className=\"progress\"\n                        style={{\n                            border: '1px solid ',\n                            borderImageSlice: 1,\n                            borderImageSource:\n                                'linear-gradient(-135deg, #1de9b6 0%, #1dc4e9 100%)',\n                        }}>\n                        <div\n                            className=\"progress-bar progress-c-theme\"\n                            role=\"progressbar\"\n                            style={{\n                                width: `${currentDay &&\n                                    (currentDay.workBlocks.length * 100) /\n                                        currentDay.daySummary\n                                            .planned_work_blocks}%`,\n                            }}>\n                            {currentDay &&\n                                Math.round(\n                                    (currentDay.workBlocks.length * 100) /\n                                        currentDay.daySummary\n                                            .planned_work_blocks\n                                )}\n                            %\n                        </div>\n                    </div>\n                </ItemContainer>\n                <CardsContainer>\n                    {currentDay &&\n                        currentDay.workBlocks.map((zg, index) => {\n                            return (\n                                <div className=\"border p-1 m-1\" key={zg.id}>\n                                    <Card.Body className=\"border-bottom\">\n                                        <div className=\"row align-items-center justify-content-center\">\n                                            <div className=\"col-auto\">\n                                                <h4>{index + 1}</h4>\n                                            </div>\n                                            <div className=\"col-auto\">\n                                                {zg.isGold && <StyledGold />}\n                                            </div>\n                                            <div className=\"col text-right\">\n                                                <h4>\n                                                    od{' '}\n                                                    {moment(zg.createdAt)\n                                                        .subtract(50, 'minutes')\n                                                        .format('HH:mm')}\n                                                </h4>\n                                                <h4>\n                                                    do{' '}\n                                                    {moment(\n                                                        zg.createdAt\n                                                    ).format('HH:mm')}\n                                                </h4>\n                                            </div>\n                                            <p className=\" mb-0\">\n                                                <span className=\"text-muted\">\n                                                    {zg.note}\n                                                </span>\n                                            </p>\n                                        </div>\n                                    </Card.Body>\n\n                                    <Card.Body>\n                                        <div className=\"row align-items-center justify-content-center card-active\">\n                                            {props.monitoring &&\n                                                Object.keys(zg.rangeData).map(\n                                                    (item) => {\n                                                        const current = props.monitoring.find(\n                                                            (\n                                                                currentMonitoring\n                                                            ) =>\n                                                                currentMonitoring.id ===\n                                                                item\n                                                        );\n                                                        return (\n                                                            <div\n                                                                className=\"col-6\"\n                                                                key={item}>\n                                                                <h6 className=\"text-center  m-b-5 m-t-10\">\n                                                                    <span className=\"text-muted \">\n                                                                        {\n                                                                            current.title\n                                                                        }\n                                                                    </span>\n                                                                </h6>\n                                                                <div\n                                                                    className=\"progress\"\n                                                                    style={{\n                                                                        border:\n                                                                            '1px solid ',\n                                                                        borderImageSlice: 1,\n                                                                        borderImageSource:\n                                                                            'linear-gradient(-135deg, #1de9b6 0%, #1dc4e9 100%)',\n                                                                    }}>\n                                                                    <div\n                                                                        className=\"progress-bar progress-c-theme\"\n                                                                        role=\"progressbar\"\n                                                                        style={{\n                                                                            width: `${\n                                                                                zg\n                                                                                    .rangeData[\n                                                                                    item\n                                                                                ]\n                                                                            }%`,\n                                                                        }}>\n                                                                        {\n                                                                            zg\n                                                                                .rangeData[\n                                                                                item\n                                                                            ]\n                                                                        }\n                                                                        %\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        );\n                                                    }\n                                                )}\n                                        </div>\n                                    </Card.Body>\n                                </div>\n                            );\n                        })}\n                </CardsContainer>\n                <Form.Group controlId=\"1\">\n                    <Form.Label>Czego się dzisiaj nauczyłem ?</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows=\"3\"\n                        value={learnedNote}\n                        onChange={(e) => setLearnedNote(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"1\">\n                    <Form.Label>\n                        Jakie były błedy ktore popełniłem danego dnia ?\n                    </Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows=\"3\"\n                        value={mistakesNote}\n                        onChange={(e) => setMistakesNote(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"1\">\n                    <Form.Label>\n                        Co zrobiłem dobrze i mogę zrobić aby być bardziej\n                        skutecznym ?\n                    </Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows=\"3\"\n                        value={goodThingsNote}\n                        onChange={(e) => setGoodThingsNote(e.target.value)}\n                    />\n                </Form.Group>\n\n                <StyledButton variant=\"primary\" onClick={handleSubmit}>\n                    Zapisz\n                </StyledButton>\n            </Container>\n        </Aux>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        day: state.firestore.ordered.days,\n        monitoring: state.firestore.ordered.monitoring,\n    };\n};\nexport default compose(\n    connect(\n        mapStateToProps,\n        { updateSummary }\n    ),\n    firestoreConnect([\n        {\n            collection: 'days',\n            doc: localStorage.getItem('day_id'),\n        },\n        {\n            collection: 'monitoring',\n        },\n    ])\n)(DaySummary);\n"],"sourceRoot":""}