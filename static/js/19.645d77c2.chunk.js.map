{"version":3,"sources":["../node_modules/react-bootstrap/es/CardContext.js","../node_modules/react-bootstrap/es/utils/divWithClassName.js","../node_modules/react-bootstrap/es/Col.js","../node_modules/react-bootstrap/es/Row.js","../node_modules/react-bootstrap/es/CardImg.js","../node_modules/react-bootstrap/es/Card.js","../node_modules/react-nvd3/dist/react-nvd3.min.js","../node_modules/d3/d3.js","../node_modules/nvd3/build/nv.d3.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","a","createContext","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","className","forwardRef","p","ref","createElement","Object","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__","DEVICE_SIZES","Col","_React$Component","apply","this","arguments","prototype","render","_this$props","props","bsPrefix","Component","as","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","concat","defaultProps","Row","noGutters","CardImg_CardImg","CardImg","inheritsLoose","variant","objectWithoutPropertiesLoose","baseClass","react_default","esm_extends","classnames_default","es_CardImg","ThemeProvider","CardBody","createWithBsPrefix","Card_Card","Card","_this","_len","args","Array","_key","call","state","getDerivedStateFromProps","_ref","cardContext","cardHeaderBsPrefix","bg","text","border","body","children","CardContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","DecoratedCard","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","t","e","module","exports","r","o","id","loaded","m","c","__esModule","default","defineProperty","i","u","s","f","l","d","h","y","v","b","g","_","x","O","j","w","S","P","F","key","addGraph","renderChart","bind","isCallable","ready","resizeHandler","clear","chart","rendering","models","type","renderStart","parsedProps","bindFunctions","context","getValueFunction","margin","options","pick","propsByPrefix","configureComponents","without","configure","selection","select","refs","svg","datum","utils","windowResize","update","pie","dispatch","lines","renderEnd","on","isPlainObject","chartOptions","containerStyle","style","hasOwnProperty","assign","G","B","W","_e","Function","window","Math","self","__g","version","__e","TypeError","Symbol","split","keys","join","getKeys","getSymbols","isEnum","create","getProto","getPrototypeOf","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","defineProperties","getNames","getOwnPropertyNames","getOwnPropertySymbols","each","toString","slice","enumerable","configurable","writable","ReferenceError","constructor","get","JSON","E","stringify","M","k","C","D","N","T","q","z","_k","set","A","V","H","I","J","R","U","for","keyFor","useSetter","useSimple","_e2","random","isArray","__proto__","setPrototypeOf","check","indexOf","includes","negate","filterObject","name","console","warn","reduce","substr","replace","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","d3_arraySlice","d3_array","list","d3_document","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","array","Date","now","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","ascending","descending","min","max","extent","sum","mean","quantile","values","floor","median","numbers","sort","variance","deviation","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","map","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","range","start","stop","step","Infinity","Error","d3_range_integerScale","object","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","listeners","listenerByName","event","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","_d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","enter","exit","filter","next","nextSibling","comparator","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","position","top","padding","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","parseRows","eol","EOL","EOF","rows","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","String","fromCharCode","_x","X","toPrecision","toExponential","toFixed","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","dt","times","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","L","Z","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","_d","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","interval","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","names","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","rejoin","d3_geo_clipAntimeridian","_clean","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","ρ0","forward","ρ0_y","clipExtent","_stream","output","valid","conicEqualArea","raw","albers","albersUsa","_point","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","_pointRadius","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","_clean2","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","d3_geo_pathProjectStream","transform","methods","_stream2","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","d3_geo_mercator","d3_geo_conicEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","createContextualFragment","json","responseXML","undefined","nv","dev","tooltip","charts","logs","dom","oThis","aArgs","fToBind","fNOP","fBound","startTime","endTime","totalTime","deprecated","info","render_start","renderLoop","graph","generate","render_end","obj","write","fastdom","mutate","read","measure","interactiveGuideline","height","xScale","showGuideLine","svgContainer","isMSIE","ActiveXObject","layer","availableWidth","availableHeight","mouseHandler","mouseX","mouseY","subtractMargin","mouseOutAnyReason","offsetX","offsetY","tagName","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","pointXValue","elementIndex","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","guideLine","NaNtoZero","hideDelay","interactiveBisect","searchVal","xAccessor","_xAccessor","currentValue","nextIndex","nextValue","nearestValueIndex","yDistMax","indexToHighlight","delta","snapDistance","lastPosition","enabled","headerEnabled","valueFormatter","headerFormatter","keyFormatter","contentGenerator","elem","table","trowEnter","highlight","total","percent","opacityScale","outerHTML","footer","pos","client","dataSeriesExists","isObject","positionTooltip","gravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","clientHeight","calcGravityOffset","old_translate","new_translate","translateInterpolator","is_hidden","nvtooltip","newContent","optionsFunc","_options","chartContainer","fixedTop","initOptions","windowSize","innerWidth","innerHeight","compatMode","isFunction","isDate","isNumber","handler","getColor","defaultColor","color_scale","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","content","href","fragment","replaceChild","history","pushState","calcApproxTextWidth","svgTextElem","fontSize","textLength","watchTransition","renderWatch","_duration","renderStack","model","__rendered","arg","every","deepExtend","dst","srcObj","_setState","_getState","init","getter","fn","settings","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","calls","inheritOptionsD3","oplist","_d3options","item","arrayUnique","symbolMap","inheritOptions","inherited","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","noData","opt","noDataText","wrapTicks","word","words","lineNumber","tspan","getComputedTextLength","arrayEquals","array1","array2","pointIsInArc","pt","ptData","d3Arc","r2","theta1","dist","tickFormatMaxMin","axisLabelText","showMaxMin","rotateLabels","rotateYLabel","staggerLabels","isOrdinal","axisLabelDistance","fmt","xLabelMargin","axisMaxMin","axisLabel","maxTextWidth","textHeight","xTicks","rotateLabelsRule","box","maxMinRange","boxPlot","xDomain","xRange","yDomain","yRange","xScale0","yScale0","yScale","getX","label","getQ1","Q1","getQ2","Q2","getQ3","Q3","getWl","whisker_low","getWh","whisker_high","getOlItems","outliers","getOlValue","getOlLabel","getOlColor","maxBoxWidth","yData","q3","wl","wh","olItems","boxplots","boxEnter","hover","box_width","box_left","box_right","endpoint","elementMouseover","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","xAxis","yAxis","showXAxis","showYAxis","rightAlignYAxis","beforeUpdate","gEnter","defsEnter","disabled","evt","tooltipContent","bullet","markers","markerLines","measures","rangeLabels","markerLabels","markerLineLabels","measureLabels","forceX","defaultRangeLabels","legacyRangeClassNames","sortLabels","labels","lz","iA","iB","rangez","markerz","markerLinez","measurez","rangeLabelz","markerLabelz","markerLineLabelz","measureLabelz","il","rangeClassNames","xp1","h3","markerData","marker","markerLinesData","bulletChart","title","subtitle","bulletWrap","candlestickBar","getY","getOpen","getClose","close","getHigh","high","getLow","low","forceY","padData","clipEdge","interactive","barWidth","wrapEnter","chartClick","tickGroups","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","legend","controls","interactiveLayer","marginTop","showLegend","showControls","useInteractiveGuideline","rescaleY","defaultState","average","noErrorCheck","updateState","currentYDomain","stateGetter","stateSetter","indexDrag","updateZero","stateChange","idx","indexifyYGetter","indexValue","tempDisabled","display","indexify","getCurrentYDomain","interactivePointerEvents","controlsData","rightAlign","linesWrap","seriesIndex","avgLineData","avgLines","getAvgLineY","yVal","indexLine","oldDuration","_ticks","newState","singlePoint","pointXLocation","allData","yValue","xValue","seriesDomains","useVoronoi","discreteBar","showValues","valueFormat","rectClass","seriesData","bars","barsEnter","element","stopPropagation","elementDblClick","discreteBarChart","discretebar","wrapLabels","distribution","getData","naxis","distWrap","focus","brushExtent","syncBrushing","pointActive","contentWrap","onBrush","brushBG","brushBGenter","gBrush","shouldDispatch","leftWidth","rightWidth","xTickFormat","yTickFormat","forceDirectedGraph","linkDist","nodeExtras","linkExtras","nodeFieldSet","Set","nodeColor","furiousLegend","maxKeyLength","radioButtonMode","expanded","vers","setTextColor","disengaged","setBGColor","seriesShape","seriesEnter","versPadding","seriesText","legendMouseover","legendMouseout","legendClick","userDisabled","legendDblclick","seriesWidths","legendText","nodeTextLength","trimmedKey","seriesPerRow","legendWidth","columnWidths","prev","cur","xPositions","curX","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","enableDoubleClick","setBGOpacity","scatter","strokeWidth","isArea","pointSize","pointDomain","scatterWrap","fillOpacity","areaPaths","linePaths","lineChart","legendPosition","focusEnable","focusEnter","updateXAxis","updateYAxis","disableTooltip","currentValues","pointYValue","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","y4","lines2","bars2","y1Axis","y3Axis","y4Axis","margin2","legendLeftAxisHint","legendRightAxisHint","switchYAxisOrder","allDisabled","availableHeight1","availableHeight2","dataBars","bar","dataLines","series1","series2","contextEnter","legendXPosition","originalKey","bars2Wrap","lines2Wrap","dataLine","focusBarsWrap","focusLinesWrap","barsOpacity","linesOpacity","y1Opacity","y2Opacity","main","getLinesAxis","getBarsAxis","multiBar","stacked","stackOffset","hideable","barColor","groupSpacing","last_datalength","nonStackableCount","parsed","nonStackable","nonStackableSeries","posBase","negBase","exitTransition","barSelection","multiBarChart","multibar","controlLabels","reduceXTicks","controlWidth","grouped","getTranslate","totalInBetweenTicks","multiBarHorizontal","getYerr","yErr","showBarLabels","valuePadding","xerr","yerr","multiBarHorizontalChart","controlsPosition","multiChart","yDomain1","yDomain2","yScale1","yScale2","lines1","scatters1","scatters2","bars1","stack1","stackedArea","stack2","yAxis1","yAxis2","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1BarStacked","aVal","extraValue2BarStacked","mouseover_line","yaxis","mouseover_scatter","mouseover_stack","mouseover_bar","serieIndex","parallelCoordinates","foreground","dimensions","undefinedValuesLabel","dimensionData","enabledDimensions","dimensionNames","displayBrush","filters","axisWithUndefinedValues","lineTension","newData","val","dataValues","currentPosition","oldDomainMaxValue","displayMissingValuesline","currentTicks","onlyUndefinedValues","hasOnlyNaN","hasNaN","missingValuesline","missingValueslineText","axisDrag","__origin__","dimensionPosition","dimensionsOrder","lineData","dimensionsEnter","restoreBrush","actives","extents","formerActive","newscale","brushDomain","updateTicks","isActive","hasActiveBrush","brushEnd","activeChanged","dimensionFormats","parallelCoordinatesChart","nanValue","originalPosition","isSorted","str","tp","dim","dd","showLabels","labelsOutside","labelType","labelThreshold","hideOverlapLabels","donut","growOnHover","titleOffset","labelSunbeamLayout","donutRatio","arcsRadius","arcsOver","arcsRadiusOuter","arcsRadiusInner","outer","inner","g_pie","arcOver","slices","pieLabels","ae","_current","labelsArc","rotateAngle","labelLocationHash","createHashKey","getSlicePercentage","hashKey","getBBox","topLeft","topRight","bottomLeft","bottomRight","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","showTooltipPercent","pieWrap","sankey","nodeWidth","nodePadding","sinksRight","iterations","sourceLinks","targetLinks","nextNodes","remainingNodes","moveSinksRight","computeNodeBreadths","nodesByBreadth","initializeNodeDepth","resolveCollisions","computeLinkDepths","relaxRightToLeft","relaxLeftToRight","weightedSource","breadth","weightedTarget","ty","ascendingDepth","computeNodeDepths","curvature","ascendingSourceDepth","ascendingTargetDepth","sankeyChart","units","formatNumber","linkTitle","nodeFillColor","nodeStrokeColor","nodeTitle","showError","message","testData","isDataValid","dataAvailable","nodeStyle","fillColor","strokeColor","xDom","yDom","width0","height0","timeoutID","pointBorderColor","getSize","getShape","shape","forceSize","notActive","padDataOuter","clipVoronoi","showVoronoi","clipRadius","sizeDomain","sizeRange","interactiveUpdateDelay","needsUpdate","_sizeRange_def","_cache","delCache","getDiffs","cache","getCache","diffs","logScale","scaleDiff","sizeDiff","domainDiff","updateInteractiveLayer","pX","pY","pointArray","pointPaths","vPointPaths","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","titles","pointScale","pointRange","forcePoint","pointShape","scatterChart","distX","distY","showDistX","showDistY","regWrap","regLine","intercept","slope","sparkline","animate","showMinMaxPoints","showCurrentPoint","yValues","maxPoint","minPoint","currentPoint","sparklinePlus","paused","showLastValue","alignValue","rightAlignValue","sparklineWrap","updateValueLine","hoverValue","hoverEnter","closestIndex","getClosestIndex","dataRaw","aseries","dataFiltered","zeroArea","areaMouseover","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","stackedAreaChart","showTotalInTooltip","totalLabel","controlOptions","oldYTickFormat","oldValueFormatter","percentFormatter","xAxisHeight","legendTop","metaKey","stack_percent","requiredTop","stackedWrap","currentFormat","valueSum","allNullValues","atleastOnePoint","tooltipValue","stackedY0","stackedY","stackedAreaWithFocusChart","sunburst","modes","groupColorByParent","prevPositions","rotationToAvoidUpsideDown","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","storeRetrievePrevPositions","pP","updatePrevPosition","zoomClick","centerAngle","cG","sunburstChart"],"mappings":"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","file":"static/js/19.645d77c2.chunk.js","sourcesContent":["import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\n\nvar Col =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Col, _React$Component);\n\n  function Col() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Col.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\"]);\n\n    var spans = [];\n    var classes = [];\n    DEVICE_SIZES.forEach(function (brkPoint) {\n      var propValue = props[brkPoint];\n      delete props[brkPoint];\n      var span, offset, order;\n\n      if (propValue != null && typeof propValue === 'object') {\n        var _propValue$span = propValue.span;\n        span = _propValue$span === void 0 ? true : _propValue$span;\n        offset = propValue.offset;\n        order = propValue.order;\n      } else {\n        span = propValue;\n      }\n\n      var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n      if (span != null) spans.push(span === true ? \"\" + bsPrefix + infix : \"\" + bsPrefix + infix + \"-\" + span);\n      if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n      if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n    });\n\n    if (!spans.length) {\n      spans.push(bsPrefix); // plain 'col'\n    }\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames.apply(void 0, [className].concat(spans, classes))\n    }));\n  };\n\n  return Col;\n}(React.Component);\n\nCol.defaultProps = {\n  as: 'div'\n};\nexport default createBootstrapComponent(Col, 'col');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Row, _React$Component);\n\n  function Row() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Row.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        noGutters = _this$props.noGutters,\n        Component = _this$props.as,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix, noGutters && 'no-gutters')\n    }));\n  };\n\n  return Row;\n}(React.Component);\n\nRow.defaultProps = {\n  as: 'div',\n  noGutters: false\n};\nexport default createBootstrapComponent(Row, 'row');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar CardImg =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CardImg, _React$Component);\n\n  function CardImg() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = CardImg.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        variant = _this$props.variant,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n    var baseClass = variant ? bsPrefix + \"-\" + variant : bsPrefix;\n    return React.createElement(Component, _extends({\n      className: classNames(baseClass, className)\n    }, props));\n  };\n\n  return CardImg;\n}(React.Component);\n\nCardImg.defaultProps = {\n  as: 'img',\n  variant: null\n};\nexport default createBootstrapComponent(CardImg, 'card-img');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport divWithClassName from './utils/divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar CardBody = createWithBsPrefix('card-body');\n\nvar Card =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Card, _React$Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {};\n    return _this;\n  }\n\n  Card.getDerivedStateFromProps = function getDerivedStateFromProps(_ref) {\n    var bsPrefix = _ref.bsPrefix;\n    return {\n      cardContext: {\n        cardHeaderBsPrefix: bsPrefix + \"-header\"\n      }\n    };\n  };\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        bg = _this$props.bg,\n        text = _this$props.text,\n        border = _this$props.border,\n        body = _this$props.body,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\", \"bg\", \"text\", \"border\", \"body\", \"children\"]);\n\n    var classes = classNames(className, bsPrefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border);\n    return React.createElement(CardContext.Provider, {\n      value: this.state.cardContext\n    }, React.createElement(Component, _extends({\n      className: classes\n    }, props), body ? React.createElement(CardBody, null, children) : children));\n  };\n\n  return Card;\n}(React.Component);\n\nCard.defaultProps = {\n  as: 'div',\n  body: false\n};\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar DecoratedCard = createBootstrapComponent(Card, 'card');\nDecoratedCard.Img = CardImg;\nDecoratedCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nDecoratedCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nDecoratedCard.Body = CardBody;\nDecoratedCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nDecoratedCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nDecoratedCard.Header = createWithBsPrefix('card-header');\nDecoratedCard.Footer = createWithBsPrefix('card-footer');\nDecoratedCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default DecoratedCard;","!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : \"function\" == typeof define && define.amd ? define([\"react\", \"d3\", \"nvd3\"], e) : \"object\" == typeof exports ? exports.NVD3Chart = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : t.NVD3Chart = e(t.React, t.d3, t.nv);\n}(this, function (t, e, n) {\n  return function (t) {\n    function e(r) {\n      if (n[r]) return n[r].exports;\n      var o = n[r] = {\n        exports: {},\n        id: r,\n        loaded: !1\n      };\n      return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;\n    }\n\n    var n = {};\n    return e.m = t, e.c = n, e.p = \"\", e(0);\n  }([function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var o = n(1),\n        i = r(o),\n        u = n(2),\n        c = r(u),\n        s = n(17),\n        a = r(s),\n        f = n(21),\n        p = r(f),\n        l = n(22),\n        d = r(l),\n        h = n(25),\n        y = r(h),\n        v = n(48),\n        b = r(v),\n        g = n(55),\n        m = r(g),\n        _ = n(56),\n        x = r(_),\n        O = n(57),\n        j = r(O),\n        w = n(58),\n        S = [\"x\", \"y\", \"type\", \"datum\", \"configure\"],\n        P = [\"width\", \"height\"],\n        E = \"margin\",\n        M = \"containerStyle\",\n        k = \"renderStart\",\n        C = \"renderEnd\",\n        D = \"ready\",\n        F = function (t) {\n      function e() {\n        return (0, p[\"default\"])(this, e), (0, y[\"default\"])(this, (0, a[\"default\"])(e).apply(this, arguments));\n      }\n\n      return (0, b[\"default\"])(e, t), (0, d[\"default\"])(e, [{\n        key: \"componentDidMount\",\n        value: function value() {\n          var t = this;\n          j[\"default\"].addGraph(this.renderChart.bind(this), function (e) {\n            (0, w.isCallable)(t.props.ready) && t.props.ready(e, D);\n          });\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function value() {\n          this.renderChart();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          this.resizeHandler && this.resizeHandler.clear();\n        }\n      }, {\n        key: \"renderChart\",\n        value: function value() {\n          var t = void 0;\n\n          switch (this.chart = this.chart && !this.rendering ? this.chart : j[\"default\"].models[this.props.type](), (0, w.isCallable)(this.props.renderStart) && this.props.renderStart(this.chart, k), this.parsedProps = (0, w.bindFunctions)(this.props, this.props.context), this.chart.x && this.chart.x((0, w.getValueFunction)(this.parsedProps.x, \"x\")), this.chart.y && this.chart.y((0, w.getValueFunction)(this.parsedProps.y, \"y\")), this.props.margin && this.chart.margin(this.options(E, w.pick).margin || (0, w.propsByPrefix)(\"margin\", this.props) || {}), this.configureComponents(this.chart, this.options(S.concat(M), w.without)), !this.props.configure || this.props.configure(this.chart), this.selection = x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart), this.resizeHandler || (this.resizeHandler = j[\"default\"].utils.windowResize(this.chart.update)), this.props.type) {\n            case \"pieChart\":\n              t = this.chart.pie.dispatch;\n              break;\n\n            case \"lineChart\":\n              t = this.chart.lines.dispatch;\n              break;\n\n            default:\n              t = this.chart.dispatch;\n          }\n\n          return t.renderEnd && t.on(\"renderEnd\", this.renderEnd.bind(this)), this.rendering = !0, this.chart;\n        }\n      }, {\n        key: \"renderEnd\",\n        value: function value(t) {\n          (0, w.isCallable)(this.props.renderEnd) && this.props.renderEnd(this.chart, C), this.rendering = !1;\n        }\n      }, {\n        key: \"configureComponents\",\n        value: function value(t, e) {\n          for (var n in e) {\n            var r = e[n];\n            t && ((0, w.isPlainObject)(r) ? this.configureComponents(t[n], r) : \"function\" == typeof t[n] && t[n](r));\n          }\n        }\n      }, {\n        key: \"options\",\n        value: function value(t, e) {\n          var n = this.parsedProps.options || this.parsedProps || this.props.chartOptions;\n          return (e = e || w.pick)(n, t);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = (0, w.pick)(this.props, P),\n              e = (0, c[\"default\"])({}, t, this.props.containerStyle);\n          return m[\"default\"].createElement(\"div\", {\n            ref: \"root\",\n            className: \"nv-chart\",\n            style: e\n          }, m[\"default\"].createElement(\"svg\", (0, i[\"default\"])({\n            ref: \"svg\"\n          }, t)));\n        }\n      }]), e;\n    }(m[\"default\"].Component);\n\n    e[\"default\"] = F, t.exports = F;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(2)[\"default\"];\n    e[\"default\"] = r || function (t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var n = arguments[e];\n\n        for (var r in n) {\n          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n        }\n      }\n\n      return t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(3),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(4), t.exports = n(7).Object.assign;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S + r.F, \"Object\", {\n      assign: n(10)\n    });\n  }, function (t, e, n) {\n    var r = n(6),\n        o = n(7),\n        i = n(8),\n        u = \"prototype\",\n        c = function c(t, e, n) {\n      var s,\n          a,\n          f,\n          p = t & c.F,\n          l = t & c.G,\n          d = t & c.S,\n          h = t & c.P,\n          y = t & c.B,\n          v = t & c.W,\n          b = l ? o : o[e] || (o[e] = {}),\n          g = l ? r : d ? r[e] : (r[e] || {})[u];\n      l && (n = e);\n\n      for (s in n) {\n        a = !p && g && s in g, a && s in b || (f = a ? g[s] : n[s], b[s] = l && \"function\" != typeof g[s] ? n[s] : y && a ? i(f, r) : v && g[s] == f ? function (t) {\n          var e = function e(_e) {\n            return this instanceof t ? new t(_e) : t(_e);\n          };\n\n          return e[u] = t[u], e;\n        }(f) : h && \"function\" == typeof f ? i(Function.call, f) : f, h && ((b[u] || (b[u] = {}))[s] = f));\n      }\n    };\n\n    c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, t.exports = c;\n  }, function (t, e) {\n    var n = t.exports = \"undefined\" != typeof window && window.Math == Math ? window : \"undefined\" != typeof self && self.Math == Math ? self : Function(\"return this\")();\n    \"number\" == typeof __g && (__g = n);\n  }, function (t, e) {\n    var n = t.exports = {\n      version: \"1.2.6\"\n    };\n    \"number\" == typeof __e && (__e = n);\n  }, function (t, e, n) {\n    var r = n(9);\n\n    t.exports = function (t, e, n) {\n      if (r(t), void 0 === e) return t;\n\n      switch (n) {\n        case 1:\n          return function (n) {\n            return t.call(e, n);\n          };\n\n        case 2:\n          return function (n, r) {\n            return t.call(e, n, r);\n          };\n\n        case 3:\n          return function (n, r, o) {\n            return t.call(e, n, r, o);\n          };\n      }\n\n      return function () {\n        return t.apply(e, arguments);\n      };\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (\"function\" != typeof t) throw TypeError(t + \" is not a function!\");\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(12),\n        i = n(14);\n    t.exports = n(16)(function () {\n      var t = Object.assign,\n          e = {},\n          n = {},\n          r = Symbol(),\n          o = \"abcdefghijklmnopqrst\";\n      return e[r] = 7, o.split(\"\").forEach(function (t) {\n        n[t] = t;\n      }), 7 != t({}, e)[r] || Object.keys(t({}, n)).join(\"\") != o;\n    }) ? function (t, e) {\n      for (var n = o(t), u = arguments, c = u.length, s = 1, a = r.getKeys, f = r.getSymbols, p = r.isEnum; c > s;) {\n        for (var l, d = i(u[s++]), h = f ? a(d).concat(f(d)) : a(d), y = h.length, v = 0; y > v;) {\n          p.call(d, l = h[v++]) && (n[l] = d[l]);\n        }\n      }\n\n      return n;\n    } : Object.assign;\n  }, function (t, e) {\n    var n = Object;\n    t.exports = {\n      create: n.create,\n      getProto: n.getPrototypeOf,\n      isEnum: {}.propertyIsEnumerable,\n      getDesc: n.getOwnPropertyDescriptor,\n      setDesc: n.defineProperty,\n      setDescs: n.defineProperties,\n      getKeys: n.keys,\n      getNames: n.getOwnPropertyNames,\n      getSymbols: n.getOwnPropertySymbols,\n      each: [].forEach\n    };\n  }, function (t, e, n) {\n    var r = n(13);\n\n    t.exports = function (t) {\n      return Object(r(t));\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (void 0 == t) throw TypeError(\"Can't call method on  \" + t);\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n    t.exports = Object(\"z\").propertyIsEnumerable(0) ? Object : function (t) {\n      return \"String\" == r(t) ? t.split(\"\") : Object(t);\n    };\n  }, function (t, e) {\n    var n = {}.toString;\n\n    t.exports = function (t) {\n      return n.call(t).slice(8, -1);\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      try {\n        return !!t();\n      } catch (e) {\n        return !0;\n      }\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(18),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(19), t.exports = n(7).Object.getPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"getPrototypeOf\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }, function (t, e, n) {\n    var r = n(5),\n        o = n(7),\n        i = n(16);\n\n    t.exports = function (t, e) {\n      var n = (o.Object || {})[t] || Object[t],\n          u = {};\n      u[t] = e(n), r(r.S + r.F * i(function () {\n        n(1);\n      }), \"Object\", u);\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    e[\"default\"] = function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(23),\n        i = r(o);\n    e[\"default\"] = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var r = e[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), (0, i[\"default\"])(t, r.key, r);\n        }\n      }\n\n      return function (e, n, r) {\n        return n && t(e.prototype, n), r && t(e, r), e;\n      };\n    }(), e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(24),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e, n) {\n      return r.setDesc(t, e, n);\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(26),\n        i = r(o);\n    e[\"default\"] = function (t, e) {\n      if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" !== (\"undefined\" == typeof e ? \"undefined\" : (0, i[\"default\"])(e)) && \"function\" != typeof e ? t : e;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(27)[\"default\"];\n    e[\"default\"] = function (t) {\n      return t && t.constructor === r ? \"symbol\" : typeof t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(28),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(29), n(47), t.exports = n(7).Symbol;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(11),\n        o = n(6),\n        i = n(30),\n        u = n(31),\n        c = n(5),\n        s = n(32),\n        a = n(16),\n        f = n(35),\n        p = n(36),\n        l = n(38),\n        d = n(37),\n        h = n(39),\n        y = n(41),\n        v = n(42),\n        b = n(43),\n        g = n(44),\n        m = n(40),\n        _ = n(34),\n        x = r.getDesc,\n        O = r.setDesc,\n        j = r.create,\n        w = y.get,\n        S = o.Symbol,\n        P = o.JSON,\n        E = P && P.stringify,\n        M = !1,\n        k = d(\"_hidden\"),\n        C = r.isEnum,\n        D = f(\"symbol-registry\"),\n        F = f(\"symbols\"),\n        N = \"function\" == typeof S,\n        T = Object.prototype,\n        q = u && a(function () {\n      return 7 != j(O({}, \"a\", {\n        get: function get() {\n          return O(this, \"a\", {\n            value: 7\n          }).a;\n        }\n      })).a;\n    }) ? function (t, e, n) {\n      var r = x(T, e);\n      r && delete T[e], O(t, e, n), r && t !== T && O(T, e, r);\n    } : O,\n        z = function z(t) {\n      var e = F[t] = j(S.prototype);\n      return e._k = t, u && M && q(T, t, {\n        configurable: !0,\n        set: function set(e) {\n          i(this, k) && i(this[k], t) && (this[k][t] = !1), q(this, t, _(1, e));\n        }\n      }), e;\n    },\n        A = function A(t) {\n      return \"symbol\" == typeof t;\n    },\n        V = function V(t, e, n) {\n      return n && i(F, e) ? (n.enumerable ? (i(t, k) && t[k][e] && (t[k][e] = !1), n = j(n, {\n        enumerable: _(0, !1)\n      })) : (i(t, k) || O(t, k, _(1, {})), t[k][e] = !0), q(t, e, n)) : O(t, e, n);\n    },\n        W = function W(t, e) {\n      g(t);\n\n      for (var n, r = v(e = m(e)), o = 0, i = r.length; i > o;) {\n        V(t, n = r[o++], e[n]);\n      }\n\n      return t;\n    },\n        B = function B(t, e) {\n      return void 0 === e ? j(t) : W(j(t), e);\n    },\n        G = function G(t) {\n      var e = C.call(this, t);\n      return e || !i(this, t) || !i(F, t) || i(this, k) && this[k][t] ? e : !0;\n    },\n        H = function H(t, e) {\n      var n = x(t = m(t), e);\n      return !n || !i(F, e) || i(t, k) && t[k][e] || (n.enumerable = !0), n;\n    },\n        I = function I(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) || e == k || r.push(e);\n      }\n\n      return r;\n    },\n        J = function J(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) && r.push(F[e]);\n      }\n\n      return r;\n    },\n        K = function K(t) {\n      if (void 0 !== t && !A(t)) {\n        for (var e, n, r = [t], o = 1, i = arguments; i.length > o;) {\n          r.push(i[o++]);\n        }\n\n        return e = r[1], \"function\" == typeof e && (n = e), (n || !b(e)) && (e = function e(t, _e2) {\n          return n && (_e2 = n.call(this, t, _e2)), A(_e2) ? void 0 : _e2;\n        }), r[1] = e, E.apply(P, r);\n      }\n    },\n        R = a(function () {\n      var t = S();\n      return \"[null]\" != E([t]) || \"{}\" != E({\n        a: t\n      }) || \"{}\" != E(Object(t));\n    });\n\n    N || (S = function S() {\n      if (A(this)) throw TypeError(\"Symbol is not a constructor\");\n      return z(l(arguments.length > 0 ? arguments[0] : void 0));\n    }, s(S.prototype, \"toString\", function () {\n      return this._k;\n    }), A = function A(t) {\n      return t instanceof S;\n    }, r.create = B, r.isEnum = G, r.getDesc = H, r.setDesc = V, r.setDescs = W, r.getNames = y.get = I, r.getSymbols = J, u && !n(46) && s(T, \"propertyIsEnumerable\", G, !0));\n    var U = {\n      \"for\": function _for(t) {\n        return i(D, t += \"\") ? D[t] : D[t] = S(t);\n      },\n      keyFor: function keyFor(t) {\n        return h(D, t);\n      },\n      useSetter: function useSetter() {\n        M = !0;\n      },\n      useSimple: function useSimple() {\n        M = !1;\n      }\n    };\n    r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"), function (t) {\n      var e = d(t);\n      U[t] = N ? e : z(e);\n    }), M = !0, c(c.G + c.W, {\n      Symbol: S\n    }), c(c.S, \"Symbol\", U), c(c.S + c.F * !N, \"Object\", {\n      create: B,\n      defineProperty: V,\n      defineProperties: W,\n      getOwnPropertyDescriptor: H,\n      getOwnPropertyNames: I,\n      getOwnPropertySymbols: J\n    }), P && c(c.S + c.F * (!N || R), \"JSON\", {\n      stringify: K\n    }), p(S, \"Symbol\"), p(Math, \"Math\", !0), p(o.JSON, \"JSON\", !0);\n  }, function (t, e) {\n    var n = {}.hasOwnProperty;\n\n    t.exports = function (t, e) {\n      return n.call(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = !n(16)(function () {\n      return 7 != Object.defineProperty({}, \"a\", {\n        get: function get() {\n          return 7;\n        }\n      }).a;\n    });\n  }, function (t, e, n) {\n    t.exports = n(33);\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(34);\n    t.exports = n(31) ? function (t, e, n) {\n      return r.setDesc(t, e, o(1, n));\n    } : function (t, e, n) {\n      return t[e] = n, t;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      return {\n        enumerable: !(1 & t),\n        configurable: !(2 & t),\n        writable: !(4 & t),\n        value: e\n      };\n    };\n  }, function (t, e, n) {\n    var r = n(6),\n        o = \"__core-js_shared__\",\n        i = r[o] || (r[o] = {});\n\n    t.exports = function (t) {\n      return i[t] || (i[t] = {});\n    };\n  }, function (t, e, n) {\n    var r = n(11).setDesc,\n        o = n(30),\n        i = n(37)(\"toStringTag\");\n\n    t.exports = function (t, e, n) {\n      t && !o(t = n ? t : t.prototype, i) && r(t, i, {\n        configurable: !0,\n        value: e\n      });\n    };\n  }, function (t, e, n) {\n    var r = n(35)(\"wks\"),\n        o = n(38),\n        i = n(6).Symbol;\n\n    t.exports = function (t) {\n      return r[t] || (r[t] = i && i[t] || (i || o)(\"Symbol.\" + t));\n    };\n  }, function (t, e) {\n    var n = 0,\n        r = Math.random();\n\n    t.exports = function (t) {\n      return \"Symbol(\".concat(void 0 === t ? \"\" : t, \")_\", (++n + r).toString(36));\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(40);\n\n    t.exports = function (t, e) {\n      for (var n, i = o(t), u = r.getKeys(i), c = u.length, s = 0; c > s;) {\n        if (i[n = u[s++]] === e) return n;\n      }\n    };\n  }, function (t, e, n) {\n    var r = n(14),\n        o = n(13);\n\n    t.exports = function (t) {\n      return r(o(t));\n    };\n  }, function (t, e, n) {\n    var r = n(40),\n        o = n(11).getNames,\n        i = {}.toString,\n        u = \"object\" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],\n        c = function c(t) {\n      try {\n        return o(t);\n      } catch (e) {\n        return u.slice();\n      }\n    };\n\n    t.exports.get = function (t) {\n      return u && \"[object Window]\" == i.call(t) ? c(t) : o(r(t));\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t) {\n      var e = r.getKeys(t),\n          n = r.getSymbols;\n      if (n) for (var o, i = n(t), u = r.isEnum, c = 0; i.length > c;) {\n        u.call(t, o = i[c++]) && e.push(o);\n      }\n      return e;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n\n    t.exports = Array.isArray || function (t) {\n      return \"Array\" == r(t);\n    };\n  }, function (t, e, n) {\n    var r = n(45);\n\n    t.exports = function (t) {\n      if (!r(t)) throw TypeError(t + \" is not an object!\");\n      return t;\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      return \"object\" == typeof t ? null !== t : \"function\" == typeof t;\n    };\n  }, function (t, e) {\n    t.exports = !0;\n  }, function (t, e) {}, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(49)[\"default\"],\n        o = n(51)[\"default\"];\n    e[\"default\"] = function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n      t.prototype = r(e && e.prototype, {\n        constructor: {\n          value: t,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (o ? o(t, e) : t.__proto__ = e);\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(50),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e) {\n      return r.create(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(52),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(53), t.exports = n(7).Object.setPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S, \"Object\", {\n      setPrototypeOf: n(54).set\n    });\n  }, function (t, e, n) {\n    var r = n(11).getDesc,\n        o = n(45),\n        i = n(44),\n        u = function u(t, e) {\n      if (i(t), !o(e) && null !== e) throw TypeError(e + \": can't set as prototype!\");\n    };\n\n    t.exports = {\n      set: Object.setPrototypeOf || (\"__proto__\" in {} ? function (t, e, o) {\n        try {\n          o = n(8)(Function.call, r(Object.prototype, \"__proto__\").set, 2), o(t, []), e = !(t instanceof Array);\n        } catch (i) {\n          e = !0;\n        }\n\n        return function (t, n) {\n          return u(t, n), e ? t.__proto__ = n : o(t, n), t;\n        };\n      }({}, !1) : void 0),\n      check: u\n    };\n  }, function (e, n) {\n    e.exports = t;\n  }, function (t, n) {\n    t.exports = e;\n  }, function (t, e) {\n    t.exports = n;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    function o(t, e) {\n      return t.indexOf(e) >= 0;\n    }\n\n    function i(t) {\n      return function () {\n        return !t.apply(this, arguments);\n      };\n    }\n\n    function u(t, e, n) {\n      for (var r = {}, o = (0, m[\"default\"])(t), i = 0, u = o.length; u > i; i++) {\n        var c = o[i],\n            s = t[c];\n        n(e, c) && (r[c] = s);\n      }\n\n      return r;\n    }\n\n    function c(t, e) {\n      return u(t, e, o);\n    }\n\n    function s(t, e) {\n      return u(t, e, i(o));\n    }\n\n    function a(t) {\n      if (\"object\" == (\"undefined\" == typeof t ? \"undefined\" : (0, b[\"default\"])(t)) && null !== t) {\n        if (\"function\" == typeof y[\"default\"]) {\n          var e = (0, y[\"default\"])(t);\n          return e === Object.prototype || null === e;\n        }\n\n        return \"[object Object]\" == Object.prototype.toString.call(t);\n      }\n\n      return !1;\n    }\n\n    function f(t, e) {\n      var n, r, o;\n      n = Array.isArray(t) ? [] : {};\n\n      for (o in t) {\n        r = t[o], null != r && (\"object\" === (\"undefined\" == typeof r ? \"undefined\" : (0, b[\"default\"])(r)) && null !== r && \"function\" !== r.type ? n[o] = f(r, e) : \"function\" === r.type ? n[o] = e[r.name] : n[o] = r);\n      }\n\n      return n;\n    }\n\n    function p(t, e) {\n      return \"function\" == typeof t ? t : function (n) {\n        return \"undefined\" != typeof n[t] ? n[t] : n[e];\n      };\n    }\n\n    function l(t, e) {\n      return console.warn(\"Set margin with prefixes is deprecated use an object instead\"), t += \"-\", (0, m[\"default\"])(e).reduce(function (n, r) {\n        return r.substr(0, t.length) === t && (n[r.replace(t, \"\")] = e[r]), n;\n      }, {});\n    }\n\n    function d(t) {\n      return t && \"function\" == typeof t;\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.includes = o, e.negate = i, e.filterObject = u, e.pick = c, e.without = s, e.isPlainObject = a, e.bindFunctions = f, e.getValueFunction = p, e.propsByPrefix = l, e.isCallable = d;\n    var h = n(17),\n        y = r(h),\n        v = n(26),\n        b = r(v),\n        g = n(59),\n        m = r(g);\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(60),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(61), t.exports = n(7).Object.keys;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"keys\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }]);\n});","!function () {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n\n  var d3_arraySlice = [].slice,\n      d3_array = function d3_array(list) {\n    return d3_arraySlice.call(list);\n  };\n\n  var d3_document = this.document;\n\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function d3_array(list) {\n        var i = list.length,\n            array = new Array(i);\n\n        while (i--) {\n          array[i] = list[i];\n        }\n\n        return array;\n      };\n    }\n  }\n\n  if (!Date.now) Date.now = function () {\n    return +new Date();\n  };\n\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype,\n          d3_element_setAttribute = d3_element_prototype.setAttribute,\n          d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,\n          d3_style_prototype = this.CSSStyleDeclaration.prototype,\n          d3_style_setProperty = d3_style_prototype.setProperty;\n\n      d3_element_prototype.setAttribute = function (name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n\n      d3_element_prototype.setAttributeNS = function (space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n\n      d3_style_prototype.setProperty = function (name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n\n  d3.ascending = d3_ascending;\n\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  d3.descending = function (a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n\n  d3.min = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && a > b) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.max = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && b > a) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.extent = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    }\n\n    return [a, c];\n  };\n\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n\n  d3.sum = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = +array[i])) s += a;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n      }\n    }\n\n    return s;\n  };\n\n  d3.mean = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;\n      }\n    }\n\n    if (j) return s / j;\n  };\n\n  d3.quantile = function (values, p) {\n    var H = (values.length - 1) * p + 1,\n        h = Math.floor(H),\n        v = +values[h - 1],\n        e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n\n  d3.median = function (array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n      }\n    }\n\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n\n  d3.variance = function (array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  };\n\n  d3.deviation = function () {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n\n  function d3_bisector(compare) {\n    return {\n      left: function left(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n\n  d3.bisector = function (f) {\n    return d3_bisector(f.length === 1 ? function (d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n\n  d3.shuffle = function (array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n\n    var m = i1 - i0,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n\n    return array;\n  };\n\n  d3.permute = function (array, indexes) {\n    var i = indexes.length,\n        permutes = new Array(i);\n\n    while (i--) {\n      permutes[i] = array[indexes[i]];\n    }\n\n    return permutes;\n  };\n\n  d3.pairs = function (array) {\n    var i = 0,\n        n = array.length - 1,\n        p0,\n        p1 = array[0],\n        pairs = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      pairs[i] = [p0 = p1, p1 = array[++i]];\n    }\n\n    return pairs;\n  };\n\n  d3.transpose = function (matrix) {\n    if (!(n = matrix.length)) return [];\n\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n\n    return transpose;\n  };\n\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n\n  d3.zip = function () {\n    return d3.transpose(arguments);\n  };\n\n  d3.keys = function (map) {\n    var keys = [];\n\n    for (var key in map) {\n      keys.push(key);\n    }\n\n    return keys;\n  };\n\n  d3.values = function (map) {\n    var values = [];\n\n    for (var key in map) {\n      values.push(map[key]);\n    }\n\n    return values;\n  };\n\n  d3.entries = function (map) {\n    var entries = [];\n\n    for (var key in map) {\n      entries.push({\n        key: key,\n        value: map[key]\n      });\n    }\n\n    return entries;\n  };\n\n  d3.merge = function (arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) {\n      j += arrays[i].length;\n    }\n\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  };\n\n  var abs = Math.abs;\n\n  d3.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [],\n        k = d3_range_integerScale(abs(step)),\n        i = -1,\n        j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) {\n      range.push(j / k);\n    } else while ((j = start + step * ++i) < stop) {\n      range.push(j / k);\n    }\n    return range;\n  };\n\n  function d3_range_integerScale(x) {\n    var k = 1;\n\n    while (x * k % 1) {\n      k *= 10;\n    }\n\n    return k;\n  }\n\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n\n  d3.map = function (object, f) {\n    var map = new d3_Map();\n\n    if (object instanceof d3_Map) {\n      object.forEach(function (key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (arguments.length === 1) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f.call(object, o = object[i], i), o);\n      }\n    } else {\n      for (var key in object) {\n        map.set(key, object[key]);\n      }\n    }\n\n    return map;\n  };\n\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n\n  var d3_map_proto = \"__proto__\",\n      d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function get(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function set(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function values() {\n      var values = [];\n\n      for (var key in this._) {\n        values.push(this._[key]);\n      }\n\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n\n      for (var key in this._) {\n        entries.push({\n          key: d3_map_unescape(key),\n          value: this._[key]\n        });\n      }\n\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key), this._[key]);\n      }\n    }\n  });\n\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n\n  function d3_map_keys() {\n    var keys = [];\n\n    for (var key in this._) {\n      keys.push(d3_map_unescape(key));\n    }\n\n    return keys;\n  }\n\n  function d3_map_size() {\n    var size = 0;\n\n    for (var key in this._) {\n      ++size;\n    }\n\n    return size;\n  }\n\n  function d3_map_empty() {\n    for (var key in this._) {\n      return false;\n    }\n\n    return true;\n  }\n\n  d3.nest = function () {\n    var nest = {},\n        keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup;\n\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          object,\n          setter,\n          valuesByKey = new d3_Map(),\n          values;\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [object]);\n        }\n      }\n\n      if (mapType) {\n        object = mapType();\n\n        setter = function setter(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n\n        setter = function setter(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n\n      valuesByKey.forEach(setter);\n      return object;\n    }\n\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [],\n          sortKey = sortKeys[depth++];\n      map.forEach(function (key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function (a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n\n    nest.map = function (array, mapType) {\n      return map(mapType, array, 0);\n    };\n\n    nest.entries = function (array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n\n    nest.key = function (d) {\n      keys.push(d);\n      return nest;\n    };\n\n    nest.sortKeys = function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n\n    nest.sortValues = function (order) {\n      sortValues = order;\n      return nest;\n    };\n\n    nest.rollup = function (f) {\n      rollup = f;\n      return nest;\n    };\n\n    return nest;\n  };\n\n  d3.set = function (array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) {\n      set.add(array[i]);\n    }\n    return set;\n  };\n\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function add(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key));\n      }\n    }\n  });\n  d3.behavior = {};\n\n  function d3_identity(d) {\n    return d;\n  }\n\n  d3.rebind = function (target, source) {\n    var i = 1,\n        n = arguments.length,\n        method;\n\n    while (++i < n) {\n      target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    }\n\n    return target;\n  };\n\n  function d3_rebind(target, source, method) {\n    return function () {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n\n  var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n  function d3_noop() {}\n\n  d3.dispatch = function () {\n    var dispatch = new d3_dispatch(),\n        i = -1,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    return dispatch;\n  };\n\n  function d3_dispatch() {}\n\n  d3_dispatch.prototype.on = function (type, listener) {\n    var i = type.indexOf(\".\"),\n        name = \"\";\n\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n\n  function d3_dispatch_event(dispatch) {\n    var listeners = [],\n        listenerByName = new d3_Map();\n\n    function event() {\n      var z = listeners,\n          i = -1,\n          n = z.length,\n          l;\n\n      while (++i < n) {\n        if (l = z[i].on) l.apply(this, arguments);\n      }\n\n      return dispatch;\n    }\n\n    event.on = function (name, listener) {\n      var l = listenerByName.get(name),\n          i;\n      if (arguments.length < 2) return l && l.on;\n\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n\n    return event;\n  }\n\n  d3.event = null;\n\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n\n  function d3_eventSource() {\n    var e = d3.event,\n        s;\n\n    while (s = e.sourceEvent) {\n      e = s;\n    }\n\n    return e;\n  }\n\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(),\n        i = 0,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    dispatch.of = function (thiz, argumentz) {\n      return function (e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    return dispatch;\n  }\n\n  d3.requote = function (s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    for (var property in prototype) {\n      object[property] = prototype[property];\n    }\n  };\n\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n\n  var d3_select = function d3_select(s, n) {\n    return n.querySelector(s);\n  },\n      d3_selectAll = function d3_selectAll(s, n) {\n    return n.querySelectorAll(s);\n  },\n      _d3_selectMatches = function d3_selectMatches(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\n    _d3_selectMatches = function d3_selectMatches(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n\n    return _d3_selectMatches(n, s);\n  };\n\n  if (typeof Sizzle === \"function\") {\n    d3_select = function d3_select(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n\n    d3_selectAll = Sizzle;\n    _d3_selectMatches = Sizzle.matchesSelector;\n  }\n\n  d3.selection = function () {\n    return d3.select(d3_document.documentElement);\n  };\n\n  var d3_selectionPrototype = d3.selection.prototype = [];\n\n  d3_selectionPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        group,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_select(selector, this);\n    };\n  }\n\n  d3_selectionPrototype.selectAll = function (selector) {\n    var subgroups = [],\n        subgroup,\n        node;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_selectAll(selector, this);\n    };\n  }\n\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function qualify(name) {\n      var i = name.indexOf(\":\"),\n          prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n\n  d3_selectionPrototype.attr = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n\n      for (value in name) {\n        this.each(d3_selection_attr(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_attr(name, value));\n  };\n\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);\n    }\n\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);\n    }\n\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n\n  d3_selectionPrototype.classed = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(),\n            n = (name = d3_selection_classes(name)).length,\n            i = -1;\n\n        if (value = node.classList) {\n          while (++i < n) {\n            if (!value.contains(name[i])) return false;\n          }\n        } else {\n          value = node.getAttribute(\"class\");\n\n          while (++i < n) {\n            if (!d3_selection_classedRe(name[i]).test(value)) return false;\n          }\n        }\n\n        return true;\n      }\n\n      for (value in name) {\n        this.each(d3_selection_classed(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_classed(name, value));\n  };\n\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n\n    function classedConstant() {\n      var i = -1;\n\n      while (++i < n) {\n        name[i](this, value);\n      }\n    }\n\n    function classedFunction() {\n      var i = -1,\n          x = value.apply(this, arguments);\n\n      while (++i < n) {\n        name[i](this, x);\n      }\n    }\n\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function (node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n\n  d3_selectionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.each(d3_selection_style(priority, name[priority], value));\n        }\n\n        return this;\n      }\n\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n\n      priority = \"\";\n    }\n\n    return this.each(d3_selection_style(name, value, priority));\n  };\n\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);\n    }\n\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n\n  d3_selectionPrototype.property = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n\n      for (value in name) {\n        this.each(d3_selection_property(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_property(name, value));\n  };\n\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n\n    function propertyConstant() {\n      this[name] = value;\n    }\n\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name];else this[name] = x;\n    }\n\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n\n  d3_selectionPrototype.text = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.textContent = \"\";\n    } : function () {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n\n  d3_selectionPrototype.html = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.innerHTML = \"\";\n    } : function () {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n\n  d3_selectionPrototype.append = function (name) {\n    name = d3_selection_creator(name);\n    return this.select(function () {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument,\n          namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n\n  d3_selectionPrototype.insert = function (name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function () {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n\n  d3_selectionPrototype.remove = function () {\n    return this.each(d3_selectionRemove);\n  };\n\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  d3_selectionPrototype.data = function (value, key) {\n    var i = -1,\n        n = this.length,\n        group,\n        node;\n\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n\n      return value;\n    }\n\n    function bind(group, groupData) {\n      var i,\n          n = group.length,\n          m = groupData.length,\n          n0 = Math.min(n, m),\n          updateNodes = new Array(m),\n          enterNodes = new Array(m),\n          exitNodes = new Array(n),\n          node,\n          nodeData;\n\n      if (key) {\n        var nodeByKeyValue = new d3_Map(),\n            keyValues = new Array(n),\n            keyValue;\n\n        for (i = -1; ++i < n;) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n\n            keyValues[i] = keyValue;\n          }\n        }\n\n        for (i = -1; ++i < m;) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n\n          nodeByKeyValue.set(keyValue, true);\n        }\n\n        for (i = -1; ++i < n;) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0;) {\n          node = group[i];\n          nodeData = groupData[i];\n\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n\n        for (; i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n\n    var enter = d3_selection_enter([]),\n        update = d3_selection([]),\n        exit = d3_selection([]);\n\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n\n    update.enter = function () {\n      return enter;\n    };\n\n    update.exit = function () {\n      return exit;\n    };\n\n    return update;\n  };\n\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n\n  d3_selectionPrototype.datum = function (value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n\n  d3_selectionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_filter(selector) {\n    return function () {\n      return _d3_selectMatches(this, selector);\n    };\n  }\n\n  d3_selectionPrototype.order = function () {\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  d3_selectionPrototype.sort = function (comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      this[j].sort(comparator);\n    }\n\n    return this.order();\n  };\n\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function (a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n\n  d3_selectionPrototype.each = function (callback) {\n    return d3_selection_each(this, function (node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n\n    return groups;\n  }\n\n  d3_selectionPrototype.call = function (callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n\n  d3_selectionPrototype.empty = function () {\n    return !this.node();\n  };\n\n  d3_selectionPrototype.node = function () {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  };\n\n  d3_selectionPrototype.size = function () {\n    var n = 0;\n    d3_selection_each(this, function () {\n      ++n;\n    });\n    return n;\n  };\n\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\n  d3_selection_enterPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        upgroup,\n        group,\n        node;\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  d3_selection_enterPrototype.insert = function (name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function (d, i, j) {\n      var group = enter[j].update,\n          n = group.length,\n          node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n\n      while (!(node = group[i0]) && ++i0 < n) {\n        ;\n      }\n\n      return node;\n    };\n  }\n\n  d3.select = function (node) {\n    var group;\n\n    if (typeof node === \"string\") {\n      group = [d3_select(node, d3_document)];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [node];\n      group.parentNode = d3_documentElement(node);\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3.selectAll = function (nodes) {\n    var group;\n\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3_selectionPrototype.on = function (type, listener, capture) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n\n        for (capture in type) {\n          this.each(d3_selection_on(capture, type[capture], listener));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type,\n        i = type.indexOf(\".\"),\n        wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n\n    function onRemove() {\n      var l = this[name];\n\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\n          match;\n\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function (k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n\n  function d3_selection_onListener(listener, argumentz) {\n    return function (e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function (e) {\n      var target = this,\n          related = e.relatedTarget;\n\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n\n  var d3_event_dragSelect,\n      d3_event_dragId = 0;\n\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId,\n        click = \"click\" + name,\n        w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style,\n          select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n\n    return function (suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\n      if (suppressClick) {\n        var off = function off() {\n          w.on(click, null);\n        };\n\n        w.on(click, function () {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n\n  d3.mouse = function (container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = container.getBoundingClientRect();\n    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n  }\n\n  d3.touch = function (container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n\n  d3.behavior.drag = function () {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\n        origin = null,\n        mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"),\n        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n\n    function dragstart(id, position, subject, move, end) {\n      return function () {\n        var that = this,\n            target = d3.event.target.correspondingElement || d3.event.target,\n            parent = that.parentNode,\n            dispatch = event.of(that, arguments),\n            dragged = 0,\n            dragId = id(),\n            dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\n            dragOffset,\n            dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended),\n            dragRestore = d3_event_dragSuppress(target),\n            position0 = position(parent, dragId);\n\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\n        } else {\n          dragOffset = [0, 0];\n        }\n\n        dispatch({\n          type: \"dragstart\"\n        });\n\n        function moved() {\n          var position1 = position(parent, dragId),\n              dx,\n              dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n\n    drag.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n\n    return d3.rebind(drag, event, \"on\");\n  };\n\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n\n  d3.touches = function (container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function (touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n\n  var ε = 1e-6,\n      ε2 = ε * ε,\n      π = Math.PI,\n      τ = 2 * π,\n      τε = τ - ε,\n      halfπ = π / 2,\n      d3_radians = π / 180,\n      d3_degrees = 180 / π;\n\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n\n  var ρ = Math.SQRT2,\n      ρ2 = 2,\n      ρ4 = 4;\n\n  d3.interpolateZoom = function (p0, p1) {\n    var ux0 = p0[0],\n        uy0 = p0[1],\n        w0 = p0[2],\n        ux1 = p1[0],\n        uy1 = p1[1],\n        w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n\n      i = function i(t) {\n        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];\n      };\n    } else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = d3_cosh(r0),\n            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n      };\n    }\n\n    i.duration = S * 1e3;\n    return i;\n  };\n\n  d3.behavior.zoom = function () {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    },\n        translate0,\n        center0,\n        center,\n        size = [960, 500],\n        scaleExtent = d3_behavior_zoomInfinity,\n        duration = 250,\n        zooming = 0,\n        mousedown = \"mousedown.zoom\",\n        mousemove = \"mousemove.zoom\",\n        mouseup = \"mouseup.zoom\",\n        mousewheelTimer,\n        touchstart = \"touchstart.zoom\",\n        touchtime,\n        event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\n        x0,\n        x1,\n        y0,\n        y1;\n\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n\n    zoom.event = function (g) {\n      g.each(function () {\n        var dispatch = event.of(this, arguments),\n            view1 = view;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function () {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function () {\n            var dx = size[0],\n                dy = size[1],\n                cx = center0 ? center0[0] : dx / 2,\n                cy = center0 ? center0[1] : dy / 2,\n                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n            return function (t) {\n              var l = i(t),\n                  k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function () {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function () {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n\n    zoom.translate = function (_) {\n      if (!arguments.length) return [view.x, view.y];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scale = function (_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n\n    zoom.scaleExtent = function (_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.center = function (_) {\n      if (!arguments.length) return center;\n      center = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.size = function (_) {\n      if (!arguments.length) return size;\n      size = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n\n    zoom.x = function (z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    zoom.y = function (z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    function location(p) {\n      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n    }\n\n    function point(l) {\n      return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n    }\n\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function (x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function (y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [view.x, view.y]\n      });\n    }\n\n    function zoomended(dispatch) {\n      if (! --zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n\n    function mousedowned() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          dragged = 0,\n          subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended),\n          location0 = location(d3.mouse(that)),\n          dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n\n    function touchstarted() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          locations0 = {},\n          distance0 = 0,\n          scale0,\n          zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier,\n          touchmove = \"touchmove\" + zoomName,\n          touchend = \"touchend\" + zoomName,\n          targets = [],\n          subject = d3.select(that),\n          dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function (t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n\n        var touches = relocate(),\n            now = Date.now();\n\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0],\n              q = touches[1],\n              dx = p[0] - q[0],\n              dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n\n      function moved() {\n        var touches = d3.touches(that),\n            p0,\n            l0,\n            p1,\n            l1;\n        d3_selection_interrupt.call(that);\n\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,\n              scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n          scaleTo(scale1 * scale0);\n        }\n\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function () {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n\n    function dblclicked() {\n      var p = d3.mouse(this),\n          k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n\n    return d3.rebind(zoom, event, \"on\");\n  };\n\n  var d3_behavior_zoomInfinity = [0, Infinity],\n      d3_behavior_zoomDelta,\n      d3_behavior_zoomWheel;\n  d3.color = d3_color;\n\n  function d3_color() {}\n\n  d3_color.prototype.toString = function () {\n    return this.rgb() + \"\";\n  };\n\n  d3.hsl = d3_hsl;\n\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\n  d3_hslPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n\n  d3_hslPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n\n  d3_hslPrototype.rgb = function () {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n\n    function v(h) {\n      if (h > 360) h -= 360;else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n\n  d3.hcl = d3_hcl;\n\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\n  d3_hclPrototype.brighter = function (k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.darker = function (k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.rgb = function () {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n\n  d3.lab = d3_lab;\n\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047,\n      d3_lab_Y = 1,\n      d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\n  d3_labPrototype.brighter = function (k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.darker = function (k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.rgb = function () {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116,\n        x = y + a / 500,\n        z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n\n  d3.rgb = d3_rgb;\n\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\n  d3_rgbPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r,\n        g = this.g,\n        b = this.b,\n        i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n\n  d3_rgbPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n\n  d3_rgbPrototype.hsl = function () {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n\n  d3_rgbPrototype.toString = function () {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0,\n        g = 0,\n        b = 0,\n        m1,\n        m2,\n        color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\n    if (m1) {\n      m2 = m1[2].split(\",\");\n\n      switch (m1[1]) {\n        case \"hsl\":\n          {\n            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n          }\n\n        case \"rgb\":\n          {\n            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n          }\n      }\n    }\n\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n\n    return rgb(r, g, b);\n  }\n\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255),\n        max = Math.max(r, g, b),\n        d = max - min,\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new d3_hsl(h, s, l);\n  }\n\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function (key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n\n  function d3_xhrType(response) {\n    return function (url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {},\n        dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        headers = {},\n        request = new XMLHttpRequest(),\n        responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n      request.readyState > 3 && respond();\n    };\n\n    function respond() {\n      var status = request.status,\n          result;\n\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n\n    request.onprogress = function (event) {\n      var o = d3.event;\n      d3.event = event;\n\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n\n    xhr.header = function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name];else headers[name] = value + \"\";\n      return xhr;\n    };\n\n    xhr.mimeType = function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n\n    xhr.responseType = function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n\n    xhr.response = function (value) {\n      response = value;\n      return xhr;\n    };\n\n    [\"get\", \"post\"].forEach(function (method) {\n      xhr[method] = function () {\n        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n      };\n    });\n\n    xhr.send = function (method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) {\n        request.setRequestHeader(name, headers[name]);\n      }\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n\n    xhr.abort = function () {\n      request.abort();\n      return xhr;\n    };\n\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function (error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n\n  d3.dsv = function (delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\n      xhr.row = function (_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n\n      return xhr;\n    }\n\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n\n    function typedResponse(f) {\n      return function (request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n\n    dsv.parse = function (text, f) {\n      var o;\n      return dsv.parseRows(text, function (row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function (row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n\n    dsv.parseRows = function (text, f) {\n      var EOL = {},\n          EOF = {},\n          rows = [],\n          N = text.length,\n          I = 0,\n          n = 0,\n          t,\n          eol;\n\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n\n        while (I < N) {\n          var c = text.charCodeAt(I++),\n              k = 1;\n          if (c === 10) eol = true;else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    };\n\n    dsv.format = function (rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(),\n          fields = [];\n      rows.forEach(function (row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n        return fields.map(function (field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    dsv.formatRows = function (rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n\n    return dsv;\n  };\n\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\n  var d3_timer_queueHead,\n      d3_timer_queueTail,\n      d3_timer_interval,\n      d3_timer_timeout,\n      d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function (callback) {\n    setTimeout(callback, 17);\n  };\n\n  d3.timer = function () {\n    d3_timer.apply(this, arguments);\n  };\n\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay,\n        timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n\n    return timer;\n  }\n\n  function d3_timer_step() {\n    var now = d3_timer_mark(),\n        delay = d3_timer_sweep() - now;\n\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n\n  d3.timer.flush = function () {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n\n  function d3_timer_mark() {\n    var now = Date.now(),\n        timer = d3_timer_queueHead;\n\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n\n    return now;\n  }\n\n  function d3_timer_sweep() {\n    var t0,\n        t1 = d3_timer_queueHead,\n        time = Infinity;\n\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n\n    d3_timer_queueTail = t0;\n    return time;\n  }\n\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n\n  d3.round = function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n\n  var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n\n  d3.formatPrefix = function (value, precision) {\n    var i = 0;\n\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n\n    return d3_formatPrefixes[8 + i / 3];\n  };\n\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function (d) {\n        return d / k;\n      } : function (d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal,\n        locale_thousands = locale.thousands,\n        locale_grouping = locale.grouping,\n        locale_currency = locale.currency,\n        formatGroup = locale_grouping && locale_thousands ? function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = locale_grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function (specifier) {\n      var match = d3_format_re.exec(specifier),\n          fill = match[1] || \" \",\n          align = match[2] || \">\",\n          sign = match[3] || \"-\",\n          symbol = match[4] || \"\",\n          zfill = match[5],\n          width = +match[6],\n          comma = match[7],\n          precision = match[8],\n          type = match[9],\n          scale = 1,\n          prefix = \"\",\n          suffix = \"\",\n          integer = false,\n          exponent = true;\n      if (precision) precision = +precision.substring(1);\n\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n\n      switch (type) {\n        case \"n\":\n          comma = true;\n          type = \"g\";\n          break;\n\n        case \"%\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"f\";\n          break;\n\n        case \"p\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"r\";\n          break;\n\n        case \"b\":\n        case \"o\":\n        case \"x\":\n        case \"X\":\n          if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n        case \"c\":\n          exponent = false;\n\n        case \"d\":\n          integer = true;\n          precision = 0;\n          break;\n\n        case \"s\":\n          scale = -1;\n          type = \"r\";\n          break;\n      }\n\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision));else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function (value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"),\n            before,\n            after;\n\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\";else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\n            padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function b(x) {\n      return x.toString(2);\n    },\n    c: function c(x) {\n      return String.fromCharCode(x);\n    },\n    o: function o(x) {\n      return x.toString(8);\n    },\n    x: function x(_x) {\n      return _x.toString(16);\n    },\n    X: function X(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function g(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function e(x, p) {\n      return x.toExponential(p);\n    },\n    f: function f(x, p) {\n      return x.toFixed(p);\n    },\n    r: function r(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n\n  var d3_time = d3.time = {},\n      d3_date = Date;\n\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n\n  d3_date_utc.prototype = {\n    getDate: function getDate() {\n      return this._.getUTCDate();\n    },\n    getDay: function getDay() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function getFullYear() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function getHours() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function getMilliseconds() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function getMinutes() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function getMonth() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function getSeconds() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function getTime() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function getTimezoneOffset() {\n      return 0;\n    },\n    valueOf: function valueOf() {\n      return this._.valueOf();\n    },\n    setDate: function setDate() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function setDay() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function setFullYear() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function setHours() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function setMilliseconds() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function setMinutes() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function setMonth() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function setSeconds() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function setTime() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date),\n          d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n\n    function range(t0, t1, dt) {\n      var time = ceil(t0),\n          times = [];\n\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) {\n          times.push(new Date(+time)), step(time, 1);\n        }\n      }\n\n      return times;\n    }\n\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n\n  function d3_time_interval_utc(method) {\n    return function (date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n\n  d3_time.year = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function (date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function (date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function (date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function (date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n\n  d3_time.dayOfYear = function (date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n\n  [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function (date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function (date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n\n    d3_time[day + \"OfYear\"] = function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_days = locale.days,\n        locale_shortDays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    function d3_time_format(template) {\n      var n = template.length;\n\n      function format(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            c,\n            p,\n            f;\n\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n\n      format.parse = function (string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        },\n            i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc,\n            date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j);else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n\n      format.toString = function () {\n        return template;\n      };\n\n      return format;\n    }\n\n    function d3_time_parse(date, template, string, j) {\n      var c,\n          p,\n          t,\n          i = 0,\n          n = template.length,\n          m = string.length;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    d3_time_format.utc = function (template) {\n      var local = d3_time_format(template);\n\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n\n      format.parse = function (string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n\n      format.toString = local.toString;\n      return format;\n    };\n\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(),\n        d3_time_dayRe = d3_time_formatRe(locale_days),\n        d3_time_dayLookup = d3_time_formatLookup(locale_days),\n        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\n        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\n        d3_time_monthRe = d3_time_formatRe(locale_months),\n        d3_time_monthLookup = d3_time_formatLookup(locale_months),\n        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\n        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function (p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function a(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function A(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function b(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function B(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function d(_d, p) {\n        return d3_time_formatPad(_d.getDate(), p, 2);\n      },\n      e: function e(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function H(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function I(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function j(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function L(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function m(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function M(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function p(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function S(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function U(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function w(d) {\n        return d.getDay();\n      },\n      W: function W(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function Y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function _() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n\n    return d3_time_format;\n  }\n\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  },\n      d3_time_numberRe = /^\\s*\\d+/,\n      d3_time_percentRe = /^%/;\n\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map.set(names[i].toLowerCase(), i);\n    }\n\n    return map;\n  }\n\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;\n  }\n\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(),\n        zs = z > 0 ? \"-\" : \"+\",\n        zh = abs(z) / 60 | 0,\n        zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function d3_time_formatMulti(formats) {\n    var n = formats.length,\n        i = -1;\n\n    while (++i < n) {\n      formats[i][0] = this(formats[i][0]);\n    }\n\n    return function (date) {\n      var i = 0,\n          f = formats[i];\n\n      while (!f[1](date)) {\n        f = formats[++i];\n      }\n\n      return f[0](date);\n    };\n  }\n\n  d3.locale = function (locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n\n  function d3_adder() {}\n\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function add(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;\n    },\n    reset: function reset() {\n      this.s = this.t = 0;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n\n  d3.geo.stream = function (object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n\n  var d3_geo_streamObjectType = {\n    Feature: function Feature(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function FeatureCollection(object, listener) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(features[i].geometry, listener);\n      }\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function Sphere(object, listener) {\n      listener.sphere();\n    },\n    Point: function Point(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], listener.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function MultiLineString(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamLine(coordinates[i], listener, 0);\n      }\n    },\n    Polygon: function Polygon(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function MultiPolygon(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamPolygon(coordinates[i], listener);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, listener) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(geometries[i], listener);\n      }\n    }\n  };\n\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    listener.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    listener.lineEnd();\n  }\n\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1,\n        n = coordinates.length;\n    listener.polygonStart();\n\n    while (++i < n) {\n      d3_geo_streamLine(coordinates[i], listener, 1);\n    }\n\n    listener.polygonEnd();\n  }\n\n  d3.geo.area = function (object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n\n  var d3_geo_areaSum,\n      d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function sphere() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n\n    d3_geo_area.point = function (λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0,\n          sdλ = dλ >= 0 ? 1 : -1,\n          adλ = sdλ * dλ,\n          cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          k = sinφ0 * sinφ,\n          u = cosφ0 * cosφ + k * Math.cos(adλ),\n          v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n\n    d3_geo_area.lineEnd = function () {\n      nextPoint(λ00, φ00);\n    };\n  }\n\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0],\n        φ = spherical[1],\n        cosφ = Math.cos(φ);\n    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n  }\n\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function d3_geo_cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n\n  function d3_geo_cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n\n  function d3_geo_spherical(cartesian) {\n    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n  }\n\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n\n  d3.geo.bounds = function () {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n\n    function point(λ, φ) {\n      ranges.push(range = [λ0 = λ, λ1 = λ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p),\n            equatorial = [normal[1], -normal[0], 0],\n            inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_,\n            s = dλ > 0 ? 1 : -1,\n            λi = inflection[0] * d3_degrees * s,\n            antimeridian = abs(dλ) > 180;\n\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n\n      p0 = p, λ_ = λ;\n    }\n\n    function lineStart() {\n      bound.point = linePoint;\n    }\n\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n\n    return function (feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n\n      if (n) {\n        ranges.sort(compareRanges);\n\n        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n          b = ranges[i];\n\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n\n        var best = -Infinity,\n            dλ;\n\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n    };\n  }();\n\n  d3.geo.centroid = function (object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2,\n        y = d3_geo_centroidY2,\n        z = d3_geo_centroidZ2,\n        m = x * x + y * y + z * z;\n\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [NaN, NaN];\n    }\n\n    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n  };\n\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    d3_geo_centroid.lineEnd = function () {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          cx = y0 * z - z0 * y,\n          cy = z0 * x - x0 * z,\n          cz = x0 * y - y0 * x,\n          m = Math.sqrt(cx * cx + cy * cy + cz * cz),\n          u = x0 * x + y0 * y + z0 * z,\n          v = m && -d3_acos(u) / m,\n          w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function d3_true() {\n    return true;\n  }\n\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [],\n        clip = [];\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n];\n\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n\n        for (var i = 0; i < n; ++i) {\n          listener.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        listener.lineEnd();\n        return;\n      }\n\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\n          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      listener.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (var i = points.length - 1; i >= 0; --i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      listener.lineEnd();\n    }\n  }\n\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function (rotate, listener) {\n      var line = clipLine(listener),\n          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      var segments;\n      var buffer = d3_geo_clipBufferListener(),\n          ringListener = clipLine(buffer),\n          polygonStarted = false,\n          polygon,\n          ring;\n\n      function pointRing(λ, φ) {\n        ring.push([λ, φ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(),\n            ringSegments = buffer.buffer(),\n            segment,\n            n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1,\n              i = -1,\n              point;\n\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n\n            while (++i < n) {\n              listener.point((point = segment[i])[0], point[1]);\n            }\n\n            listener.lineEnd();\n          }\n\n          return;\n        }\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n\n      return clip;\n    };\n  }\n\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n\n  function d3_geo_clipBufferListener() {\n    var lines = [],\n        line;\n    return {\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      point: function point(λ, φ) {\n        line.push([λ, φ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function buffer() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN,\n        φ0 = NaN,\n        sλ0 = NaN,\n        _clean;\n\n    return {\n      lineStart: function lineStart() {\n        listener.lineStart();\n        _clean = 1;\n      },\n      point: function point(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π,\n            dλ = abs(λ1 - λ0);\n\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          _clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          _clean = 0;\n        }\n\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function lineEnd() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean;\n      }\n    };\n  }\n\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0,\n        cosφ1,\n        sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0],\n        parallel = point[1],\n        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\n        polarAngle = 0,\n        winding = 0;\n    d3_geo_areaRingSum.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i],\n          m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0],\n          λ0 = point0[0],\n          φ0 = point0[1] / 2 + π / 4,\n          sinφ0 = Math.sin(φ0),\n          cosφ0 = Math.cos(φ0),\n          j = 1;\n\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0],\n            φ = point[1] / 2 + π / 4,\n            sinφ = Math.sin(φ),\n            cosφ = Math.cos(φ),\n            dλ = λ - λ0,\n            sdλ = dλ >= 0 ? 1 : -1,\n            adλ = sdλ * dλ,\n            antimeridian = adλ > π,\n            k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > ε,\n        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n\n    function clipLine(listener) {\n      var point0, c0, v0, v00, _clean2;\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(λ, φ) {\n          var point1 = [λ, φ],\n              point2,\n              v = visible(λ, φ),\n              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a),\n          pb = d3_geo_cartesian(b);\n      var n1 = [1, 0, 0],\n          n2 = d3_geo_cartesianCross(pa, pb),\n          n2n2 = d3_geo_cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = d3_geo_cartesianCross(n1, n2),\n          A = d3_geo_cartesianScale(n1, c1),\n          B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2,\n          w = d3_geo_cartesianDot(A, u),\n          uu = d3_geo_cartesianDot(u, u),\n          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2),\n          q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0],\n          λ1 = b[0],\n          φ0 = a[1],\n          φ1 = b[1],\n          z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0,\n          polar = abs(δλ - π) < ε,\n          meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [q, d3_geo_spherical(q1)];\n      }\n    }\n\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius,\n          code = 0;\n      if (λ < -r) code |= 1;else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4;else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function (line) {\n      var a = line.a,\n          b = line.b,\n          ax = a.x,\n          ay = a.y,\n          bx = b.x,\n          by = b.y,\n          t0 = 0,\n          t1 = 1,\n          dx = bx - ax,\n          dy = by - ay,\n          r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n\n  var d3_geo_clipExtentMAX = 1e9;\n\n  d3.geo.clipExtent = function () {\n    var x0,\n        y0,\n        x1,\n        y1,\n        _stream,\n        clip,\n        clipExtent = {\n      stream: function stream(output) {\n        if (_stream) _stream.valid = false;\n        _stream = clip(output);\n        _stream.valid = true;\n        return _stream;\n      },\n      extent: function extent(_) {\n        if (!arguments.length) return [[x0, y0], [x1, y1]];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (_stream) _stream.valid = false, _stream = null;\n        return clipExtent;\n      }\n    };\n\n    return clipExtent.extent([[0, 0], [960, 500]]);\n  };\n\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function (listener) {\n      var listener_ = listener,\n          bufferListener = d3_geo_clipBufferListener(),\n          clipLine = d3_geom_clipLine(x0, y0, x1, y1),\n          segments,\n          polygon,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function polygonEnd() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([x0, y1]),\n              inside = clean && clipStartInside,\n              visible = segments.length;\n\n          if (inside || visible) {\n            listener.polygonStart();\n\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n\n            listener.polygonEnd();\n          }\n\n          segments = polygon = ring = null;\n        }\n      };\n\n      function insidePolygon(p) {\n        var wn = 0,\n            n = polygon.length,\n            y = p[1];\n\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n\n            a = b;\n          }\n        }\n\n        return wn !== 0;\n      }\n\n      function interpolate(from, to, direction, listener) {\n        var a = 0,\n            a1 = 0;\n\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n\n      var x__, y__, v__, x_, y_, v_, first, clean;\n\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y);else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clip;\n    };\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n\n    function comparePoints(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0,\n        φ1 = π / 3,\n        m = d3_geo_projectionMutator(projectAt),\n        p = m(φ0, φ1);\n\n    p.parallels = function (_) {\n      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n\n    return p;\n  }\n\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0),\n        n = (sinφ0 + Math.sin(φ1)) / 2,\n        C = 1 + sinφ0 * (2 * n - sinφ0),\n        ρ0 = Math.sqrt(C) / n;\n\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = ρ0 - y;\n      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEqualArea = function () {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n\n  d3.geo.albers = function () {\n    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n  };\n\n  d3.geo.albersUsa = function () {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n\n    var _point,\n        pointStream = {\n      point: function point(x, y) {\n        _point = [x, y];\n      }\n    },\n        lower48Point,\n        alaskaPoint,\n        hawaiiPoint;\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      _point = null;\n      (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);\n      return _point;\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      var lower48Stream = lower48.stream(stream),\n          alaskaStream = alaska.stream(stream),\n          hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function point(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function sphere() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function lineStart() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function lineEnd() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function polygonStart() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function polygonEnd() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  };\n\n  var d3_geo_pathAreaSum,\n      d3_geo_pathAreaPolygon,\n      d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathArea.point = function (x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n\n    d3_geo_pathArea.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5),\n        buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function result() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n\n    d3_geo_pathCentroid.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  function d3_geo_pathContext(context) {\n    var _pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        _pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n\n    function point(x, y) {\n      context.moveTo(x + _pointRadius, y);\n      context.arc(x, y, _pointRadius, 0, τ);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function d3_geo_resample(project) {\n    var δ2 = .5,\n        cosMinDistance = Math.cos(30 * d3_radians),\n        maxDepth = 16;\n\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function (x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([λ, φ]),\n            p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resample;\n    }\n\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = Math.sqrt(a * a + b * b + c * c),\n            φ2 = Math.asin(c /= m),\n            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\n            p = project(λ2, φ2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    resample.precision = function (_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n\n    return resample;\n  }\n\n  d3.geo.path = function () {\n    var pointRadius = 4.5,\n        projection,\n        context,\n        projectStream,\n        contextStream,\n        cacheStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n\n    path.centroid = function (object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n    };\n\n    path.bounds = function (object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n    };\n\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function (x, y) {\n      return project([x * d3_degrees, y * d3_degrees]);\n    });\n    return function (stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n\n  d3.geo.transform = function (methods) {\n    return {\n      stream: function stream(_stream2) {\n        var transform = new d3_geo_transform(_stream2);\n\n        for (var k in methods) {\n          transform[k] = methods[k];\n        }\n\n        return transform;\n      }\n    };\n  };\n\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n\n  d3_geo_transform.prototype = {\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function sphere() {\n        stream.sphere();\n      },\n      lineStart: function lineStart() {\n        stream.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n      }\n    };\n  }\n\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function d3_geo_projectionMutator(projectAt) {\n    var project,\n        rotate,\n        projectRotate,\n        projectResample = d3_geo_resample(function (x, y) {\n      x = project(x, y);\n      return [x[0] * k + δx, δy - x[1] * k];\n    }),\n        k = 150,\n        x = 480,\n        y = 250,\n        λ = 0,\n        φ = 0,\n        δλ = 0,\n        δφ = 0,\n        δγ = 0,\n        δx,\n        δy,\n        preclip = d3_geo_clipAntimeridian,\n        postclip = d3_identity,\n        clipAngle = null,\n        clipExtent = null,\n        stream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [point[0] * k + δx, δy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n    }\n\n    projection.stream = function (output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n\n    projection.clipAngle = function (_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n\n    projection.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n\n    projection.scale = function (_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n\n    projection.translate = function (_) {\n      if (!arguments.length) return [x, y];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n\n    projection.center = function (_) {\n      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n\n    projection.rotate = function (_) {\n      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n\n    d3.rebind(projection, projectResample, \"precision\");\n\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function (x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n\n  function d3_geo_equirectangular(λ, φ) {\n    return [λ, φ];\n  }\n\n  (d3.geo.equirectangular = function () {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\n  d3.geo.rotation = function (rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n\n    return forward;\n  };\n\n  function d3_geo_identityRotation(λ, φ) {\n    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n  }\n\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n\n  function d3_geo_forwardRotationλ(δλ) {\n    return function (λ, φ) {\n      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    };\n  }\n\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ),\n        sinδφ = Math.sin(δφ),\n        cosδγ = Math.cos(δγ),\n        sinδγ = Math.sin(δγ);\n\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδφ + x * sinδφ;\n      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n    }\n\n    rotation.invert = function (λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδγ - y * sinδγ;\n      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n    };\n\n    return rotation;\n  }\n\n  d3.geo.circle = function () {\n    var origin = [0, 0],\n        angle,\n        precision = 6,\n        interpolate;\n\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\n          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\n          ring = [];\n      interpolate(null, null, 1, {\n        point: function point(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n    }\n\n    circle.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n\n    circle.angle = function (x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n\n    circle.precision = function (_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n\n    return circle.angle(90);\n  };\n\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius),\n        sr = Math.sin(radius);\n    return function (from, to, direction, listener) {\n      var step = direction * precision;\n\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n      }\n    };\n  }\n\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n\n  d3.geo.distance = function (a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians,\n        φ0 = a[1] * d3_radians,\n        φ1 = b[1] * d3_radians,\n        sinΔλ = Math.sin(Δλ),\n        cosΔλ = Math.cos(Δλ),\n        sinφ0 = Math.sin(φ0),\n        cosφ0 = Math.cos(φ0),\n        sinφ1 = Math.sin(φ1),\n        cosφ1 = Math.cos(φ1),\n        t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n\n  d3.geo.graticule = function () {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n\n    graticule.majorExtent = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.minorExtent = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n\n    graticule.majorStep = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.minorStep = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n  };\n\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_source(d) {\n    return d.source;\n  }\n\n  function d3_target(d) {\n    return d.target;\n  }\n\n  d3.geo.greatArc = function () {\n    var source = d3_source,\n        source_,\n        target = d3_target,\n        target_;\n\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n      };\n    }\n\n    greatArc.distance = function () {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n\n    greatArc.source = function (_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.target = function (_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.precision = function () {\n      return arguments.length ? greatArc : 0;\n    };\n\n    return greatArc;\n  };\n\n  d3.geo.interpolate = function (source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0),\n        sy0 = Math.sin(y0),\n        cy1 = Math.cos(y1),\n        sy1 = Math.sin(y1),\n        kx0 = cy0 * Math.cos(x0),\n        ky0 = cy0 * Math.sin(x0),\n        kx1 = cy1 * Math.cos(x1),\n        ky1 = cy1 * Math.sin(x1),\n        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),\n        k = 1 / Math.sin(d);\n    var interpolate = d ? function (t) {\n      var B = Math.sin(t *= d) * k,\n          A = Math.sin(d - t) * k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n    } : function () {\n      return [x0 * d3_degrees, y0 * d3_degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  d3.geo.length = function (object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n\n    d3_geo_length.point = function (λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n\n    d3_geo_length.lineEnd = function () {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians),\n          cosφ = Math.cos(φ),\n          t = abs((λ *= d3_radians) - λ0),\n          cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ),\n          cosφ = Math.cos(φ),\n          k = scale(cosλ * cosφ);\n      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n    }\n\n    azimuthal.invert = function (x, y) {\n      var ρ = Math.sqrt(x * x + y * y),\n          c = angle(ρ),\n          sinc = Math.sin(c),\n          cosc = Math.cos(c);\n      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n    };\n\n    return azimuthal;\n  }\n\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function (ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function () {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function () {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        t = function t(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    },\n        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),\n        F = cosφ0 * Math.pow(t(φ0), n) / n;\n\n    if (!n) return d3_geo_mercator;\n\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n\n      var ρ = F / Math.pow(t(φ), n);\n      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = F - y,\n          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicConformal = function () {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),\n        G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = G - y;\n      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEquidistant = function () {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function () {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n\n  function d3_geo_mercator(λ, φ) {\n    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n  }\n\n  d3_geo_mercator.invert = function (x, y) {\n    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n  };\n\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function () {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.translate = function () {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.clipExtent = function (_) {\n      var v = clipExtent.apply(m, arguments);\n\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(),\n              t = translate();\n          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n\n      return v;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  (d3.geo.mercator = function () {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function () {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function () {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function (ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function () {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n\n  function d3_geo_transverseMercator(λ, φ) {\n    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n  }\n\n  d3_geo_transverseMercator.invert = function (x, y) {\n    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n  };\n\n  (d3.geo.transverseMercator = function () {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),\n        center = projection.center,\n        rotate = projection.rotate;\n\n    projection.center = function (_) {\n      return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    projection.rotate = function (_) {\n      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n\n  d3.geom.hull = function (vertices) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x),\n          fy = d3_functor(y),\n          i,\n          n = data.length,\n          points = [],\n          flippedPoints = [];\n\n      for (i = 0; i < n; i++) {\n        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n      }\n\n      points.sort(d3_geom_hullOrder);\n\n      for (i = 0; i < n; i++) {\n        flippedPoints.push([points[i][0], -points[i][1]]);\n      }\n\n      var upper = d3_geom_hullUpper(points),\n          lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0],\n          skipRight = lower[lower.length - 1] === upper[upper.length - 1],\n          polygon = [];\n\n      for (i = upper.length - 1; i >= 0; --i) {\n        polygon.push(data[points[upper[i]][2]]);\n      }\n\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) {\n        polygon.push(data[points[lower[i]][2]]);\n      }\n\n      return polygon;\n    }\n\n    hull.x = function (_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n\n    hull.y = function (_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n\n    return hull;\n  };\n\n  function d3_geom_hullUpper(points) {\n    var n = points.length,\n        hull = [0, 1],\n        hs = 2;\n\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {\n        --hs;\n      }\n\n      hull[hs++] = i;\n    }\n\n    return hull.slice(0, hs);\n  }\n\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  d3.geom.polygon = function (coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\n  d3_geom_polygonPrototype.area = function () {\n    var i = -1,\n        n = this.length,\n        a,\n        b = this[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area * .5;\n  };\n\n  d3_geom_polygonPrototype.centroid = function (k) {\n    var i = -1,\n        n = this.length,\n        x = 0,\n        y = 0,\n        a,\n        b = this[n - 1],\n        c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return [x * k, y * k];\n  };\n\n  d3_geom_polygonPrototype.clip = function (subject) {\n    var input,\n        closed = d3_geom_polygonClosed(subject),\n        i = -1,\n        n = this.length - d3_geom_polygonClosed(this),\n        j,\n        m,\n        a = this[n - 1],\n        b,\n        c,\n        d;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  };\n\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  }\n\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n\n  var d3_geom_voronoiEdges,\n      d3_geom_voronoiCells,\n      d3_geom_voronoiBeaches,\n      d3_geom_voronoiBeachPool = [],\n      d3_geom_voronoiFirstCircle,\n      d3_geom_voronoiCircles,\n      d3_geom_voronoiCirclePool = [];\n\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = {\n      x: x,\n      y: y\n    },\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length,\n        iArc;\n\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x,\n        directrix = site.y,\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = d3_geom_voronoiBeaches._;\n\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L;else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site,\n        ax = lSite.x,\n        ay = lSite.y,\n        bx = site.x - ax,\n        by = site.y - ay,\n        rSite = rArc.site,\n        cx = rSite.x - ax,\n        cy = rSite.y - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site.x,\n        rfocy = site.y,\n        pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x,\n        lfocy = site.y,\n        plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n\n  d3_geom_voronoiCell.prototype.prepare = function () {\n    var halfEdges = this.edges,\n        iHalfEdge = halfEdges.length,\n        edge;\n\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        x2,\n        y2,\n        x3,\n        y3,\n        cells = d3_geom_voronoiCells,\n        iCell = cells.length,\n        cell,\n        iHalfEdge,\n        halfEdges,\n        nHalfEdges,\n        start,\n        end;\n\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x,\n        by = cSite.y,\n        ax = lSite.x - bx,\n        ay = lSite.y - by,\n        cx = rSite.x - bx,\n        cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d,\n        cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null,\n        node = d3_geom_voronoiCircles._;\n\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L;else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R;else {\n          before = node;\n          break;\n        }\n      }\n    }\n\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges,\n        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),\n        i = edges.length,\n        e;\n\n    while (i--) {\n      e = edges[i];\n\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a,\n        x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        lSite = edge.l,\n        rSite = edge.r,\n        lx = lSite.x,\n        ly = lSite.y,\n        rx = rSite.x,\n        ry = rSite.y,\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        };else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        };else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          };else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          };else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a,\n        vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function start() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function end() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function insert(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n\n        if (after.R) {\n          after = after.R;\n\n          while (after.L) {\n            after = after.L;\n          }\n\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n\n      while (parent && parent.C) {\n        grandpa = parent.U;\n\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n\n        parent = after.U;\n      }\n\n      this._.C = false;\n    },\n    remove: function remove(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n\n      do {\n        if (node === this._) break;\n\n        if (node === parent.L) {\n          sibling = parent.R;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) {\n      node = node.L;\n    }\n\n    return node;\n  }\n\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),\n        x0,\n        y0,\n        circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n\n  d3.geom.voronoi = function (points) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        fx = x,\n        fy = y,\n        clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n\n    function voronoi(data) {\n      var polygons = new Array(data.length),\n          x0 = clipExtent[0][0],\n          y0 = clipExtent[0][1],\n          x1 = clipExtent[1][0],\n          y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n        var edges = cell.edges,\n            site = cell.site,\n            polygon = polygons[i] = edges.length ? edges.map(function (e) {\n          var s = e.start();\n          return [s.x, s.y];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n\n    function sites(data) {\n      return data.map(function (d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n\n    voronoi.links = function (data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n        return edge.l && edge.r;\n      }).map(function (edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n\n    voronoi.triangles = function (data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n        var site = cell.site,\n            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),\n            j = -1,\n            m = edges.length,\n            e0,\n            s0,\n            e1 = edges[m - 1].edge,\n            s1 = e1.l === site ? e1.r : e1.l;\n\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([data[i], data[s0.i], data[s1.i]]);\n          }\n        }\n      });\n      return triangles;\n    };\n\n    voronoi.x = function (_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n\n    voronoi.y = function (_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n\n    voronoi.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n\n    voronoi.size = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [[0, 0], _]);\n    };\n\n    return voronoi;\n  };\n\n  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n\n  d3.geom.delaunay = function (vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n\n  d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        compat;\n\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n\n      return quadtree(points);\n    }\n\n    function quadtree(data) {\n      var d,\n          fx = d3_functor(x),\n          fy = d3_functor(y),\n          xs,\n          ys,\n          i,\n          n,\n          x1_,\n          y1_,\n          x2_,\n          y2_;\n\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i),\n              y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n\n      var dx = x2_ - x1_,\n          dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;\n\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n\n        if (n.leaf) {\n          var nx = n.x,\n              ny = n.y;\n\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5,\n            ym = (y1 + y2) * .5,\n            right = x >= xm,\n            below = y >= ym,\n            i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm;else x2 = xm;\n        if (below) y1 = ym;else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n\n      var root = d3_geom_quadtreeNode();\n\n      root.add = function (d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n\n      root.visit = function (f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n\n      root.find = function (point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n\n      i = -1;\n\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n\n        --i;\n      } else data.forEach(root.add);\n\n      xs = ys = data = d = null;\n      return root;\n    }\n\n    quadtree.x = function (_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n\n    quadtree.y = function (_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n\n    quadtree.extent = function (_) {\n      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n      return quadtree;\n    };\n\n    quadtree.size = function (_) {\n      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n\n    return quadtree;\n  };\n\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5,\n          sy = (y1 + y2) * .5,\n          children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity,\n        closestPoint;\n\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n      if (point = node.point) {\n        var point,\n            dx = x - node.x,\n            dy = y - node.y,\n            distance2 = dx * dx + dy * dy;\n\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n\n      var children = node.nodes,\n          xm = (x1 + x2) * .5,\n          ym = (y1 + y2) * .5,\n          right = x >= xm,\n          below = y >= ym;\n\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n          case 0:\n            find(node, x1, y1, xm, ym);\n            break;\n\n          case 1:\n            find(node, xm, y1, x2, ym);\n            break;\n\n          case 2:\n            find(node, x1, ym, xm, y2);\n            break;\n\n          case 3:\n            find(node, xm, ym, x2, y2);\n            break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n\n    return closestPoint;\n  }\n\n  d3.interpolateRgb = d3_interpolateRgb;\n\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function (t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n\n  d3.interpolateObject = d3_interpolateObject;\n\n  function d3_interpolateObject(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  d3.interpolateNumber = d3_interpolateNumber;\n\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function (t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n\n  d3.interpolateString = d3_interpolateString;\n\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,\n        am,\n        bm,\n        bs,\n        i = -1,\n        s = [],\n        q = [];\n    a = a + \"\", b = b + \"\";\n\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs;else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm;else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs;else s[++i] = bs;\n    }\n\n    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {\n      return b(t) + \"\";\n    }) : function () {\n      return b;\n    } : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length,\n        f;\n\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {\n      ;\n    }\n\n    return f;\n  }\n\n  d3.interpolators = [function (a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  }];\n  d3.interpolateArray = d3_interpolateArray;\n\n  function d3_interpolateArray(a, b) {\n    var x = [],\n        c = [],\n        na = a.length,\n        nb = b.length,\n        n0 = Math.min(a.length, b.length),\n        i;\n\n    for (i = 0; i < n0; ++i) {\n      x.push(d3_interpolate(a[i], b[i]));\n    }\n\n    for (; i < na; ++i) {\n      c[i] = a[i];\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < n0; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  var d3_ease_default = function d3_ease_default() {\n    return d3_identity;\n  };\n\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function quad() {\n      return d3_ease_quad;\n    },\n    cubic: function cubic() {\n      return d3_ease_cubic;\n    },\n    sin: function sin() {\n      return d3_ease_sin;\n    },\n    exp: function exp() {\n      return d3_ease_exp;\n    },\n    circle: function circle() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function bounce() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function outIn(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n\n  d3.ease = function (name) {\n    var i = name.indexOf(\"-\"),\n        t = i >= 0 ? name.slice(0, i) : name,\n        m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n\n  function d3_ease_clamp(f) {\n    return function (t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n\n  function d3_ease_reverse(f) {\n    return function (t) {\n      return 1 - f(1 - t);\n    };\n  }\n\n  function d3_ease_reflect(f) {\n    return function (t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t,\n        t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n\n  function d3_ease_poly(e) {\n    return function (t) {\n      return Math.pow(t, e);\n    };\n  }\n\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;\n    return function (t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n\n  d3.interpolateHcl = d3_interpolateHcl;\n\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h,\n        ac = a.c,\n        al = a.l,\n        bh = b.h - ah,\n        bc = b.c - ac,\n        bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateHsl = d3_interpolateHsl;\n\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h,\n        as = a.s,\n        al = a.l,\n        bh = b.h - ah,\n        bs = b.s - as,\n        bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateLab = d3_interpolateLab;\n\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function (t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n\n  d3.interpolateRound = d3_interpolateRound;\n\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  d3.transform = function (string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function (string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n\n  function d3_transform(m) {\n    var r0 = [m.a, m.b],\n        r1 = [m.c, m.d],\n        kx = d3_transformNormalize(r0),\n        kz = d3_transformDot(r0, r1),\n        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [m.e, m.f];\n    this.scale = [kx, ky];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n\n  d3_transform.prototype.toString = function () {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n\n    return k;\n  }\n\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n\n  function d3_interpolateTransform(a, b) {\n    var s = [],\n        q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  }\n\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return (x - a) / b;\n    };\n  }\n\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n\n  d3.layout = {};\n\n  d3.layout.bundle = function () {\n    return function (links) {\n      var paths = [],\n          i = -1,\n          n = links.length;\n\n      while (++i < n) {\n        paths.push(d3_layout_bundlePath(links[i]));\n      }\n\n      return paths;\n    };\n  };\n\n  function d3_layout_bundlePath(link) {\n    var start = link.source,\n        end = link.target,\n        lca = d3_layout_bundleLeastCommonAncestor(start, end),\n        points = [start];\n\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n\n    var k = points.length;\n\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return points;\n  }\n\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [],\n        parent = node.parent;\n\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n\n    ancestors.push(node);\n    return ancestors;\n  }\n\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a),\n        bNodes = d3_layout_bundleAncestors(b),\n        aNode = aNodes.pop(),\n        bNode = bNodes.pop(),\n        sharedNode = null;\n\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n\n    return sharedNode;\n  }\n\n  d3.layout.chord = function () {\n    var chord = {},\n        chords,\n        groups,\n        matrix,\n        n,\n        padding = 0,\n        sortGroups,\n        sortSubgroups,\n        sortChords;\n\n    function relayout() {\n      var subgroups = {},\n          groupSums = [],\n          groupIndex = d3.range(n),\n          subgroupIndex = [],\n          k,\n          x,\n          x0,\n          i,\n          j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n\n      while (++i < n) {\n        x = 0, j = -1;\n\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n\n      while (++i < n) {\n        x0 = x, j = -1;\n\n        while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        j = i - 1;\n\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j],\n              target = subgroups[j + \"-\" + i];\n\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) resort();\n    }\n\n    function resort() {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n\n    chord.matrix = function (x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.padding = function (x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortGroups = function (x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n\n    chord.sortChords = function (x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n\n    chord.chords = function () {\n      if (!chords) relayout();\n      return chords;\n    };\n\n    chord.groups = function () {\n      if (!groups) relayout();\n      return groups;\n    };\n\n    return chord;\n  };\n\n  d3.layout.force = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        timer,\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = .9,\n        linkDistance = d3_layout_forceLinkDistance,\n        linkStrength = d3_layout_forceLinkStrength,\n        charge = -30,\n        chargeDistance2 = d3_layout_forceChargeDistance2,\n        gravity = .1,\n        theta2 = .64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x,\n              dy = quad.cy - node.y,\n              dw = x2 - x1,\n              dn = dx * dx + dy * dy;\n\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n          m = links.length,\n          q,\n          i,\n          o,\n          s,\n          t,\n          l,\n          k,\n          x,\n          y;\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        o = nodes[i];\n\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.distance = force.linkDistance;\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n          n = nodes.length,\n          m = links.length,\n          w = size[0],\n          h = size[1],\n          neighbors,\n          o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) {\n        distances[i] = +linkDistance.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        distances[i] = linkDistance;\n      }\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) {\n        strengths[i] = +linkStrength.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        strengths[i] = linkStrength;\n      }\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) {\n        charges[i] = +charge.call(this, nodes[i], i);\n      } else for (i = 0; i < n; ++i) {\n        charges[i] = charge;\n      }\n\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n            j = -1,\n            l = candidates.length,\n            x;\n\n        while (++j < l) {\n          if (!isNaN(x = candidates[j][dimension])) return x;\n        }\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0,\n        cy = 0;\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n          n = nodes.length,\n          i = -1,\n          c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  var d3_layout_forceLinkDistance = 20,\n      d3_layout_forceLinkStrength = 1,\n      d3_layout_forceChargeDistance2 = Infinity;\n\n  d3.layout.hierarchy = function () {\n    var sort = d3_layout_hierarchySort,\n        children = d3_layout_hierarchyChildren,\n        value = d3_layout_hierarchyValue;\n\n    function hierarchy(root) {\n      var stack = [root],\n          nodes = [],\n          node;\n      root.depth = 0;\n\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n\n    hierarchy.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n\n    hierarchy.children = function (x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n\n    hierarchy.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n\n    hierarchy.revalue = function (root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function (node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function (node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n\n      return root;\n    };\n\n    return hierarchy;\n  };\n\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [node];\n\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n\n        while (--n >= 0) {\n          nodes.push(children[n]);\n        }\n      }\n    }\n  }\n\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [node],\n        nodes2 = [];\n\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1,\n            n,\n            children;\n\n        while (++i < n) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function (parent) {\n      return (parent.children || []).map(function (child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n\n  d3.layout.partition = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        size = [1, 1];\n\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n,\n            c,\n            d;\n        dx = node.value ? dx / node.value : 0;\n\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n\n    function depth(node) {\n      var children = node.children,\n          d = 0;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n;\n\n        while (++i < n) {\n          d = Math.max(d, depth(children[i]));\n        }\n      }\n\n      return 1 + d;\n    }\n\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n\n    partition.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n\n  d3.layout.pie = function () {\n    var value = Number,\n        sort = d3_layout_pieSortByValue,\n        startAngle = 0,\n        endAngle = τ,\n        padAngle = 0;\n\n    function pie(data) {\n      var n = data.length,\n          values = data.map(function (d, i) {\n        return +value.call(pie, d, i);\n      }),\n          a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle),\n          da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a,\n          p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)),\n          pa = p * (da < 0 ? -1 : 1),\n          sum = d3.sum(values),\n          k = sum ? (da - n * pa) / sum : 0,\n          index = d3.range(n),\n          arcs = [],\n          v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n        return values[j] - values[i];\n      } : function (i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function (i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n\n    pie.value = function (_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n\n    pie.sort = function (_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n\n    pie.startAngle = function (_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n\n    pie.endAngle = function (_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n\n    pie.padAngle = function (_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n\n    return pie;\n  };\n\n  var d3_layout_pieSortByValue = {};\n\n  d3.layout.stack = function () {\n    var values = d3_identity,\n        order = d3_layout_stackOrderDefault,\n        offset = d3_layout_stackOffsetZero,\n        out = d3_layout_stackOut,\n        x = d3_layout_stackX,\n        y = d3_layout_stackY;\n\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function (d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function (d) {\n        return d.map(function (v, i) {\n          return [x.call(stack, v, i), y.call(stack, v, i)];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length,\n          n,\n          i,\n          j,\n          o;\n\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n\n      return data;\n    }\n\n    stack.values = function (x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n\n    stack.order = function (x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n\n    stack.offset = function (x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n\n    stack.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n\n    stack.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n\n    stack.out = function (z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n\n    return stack;\n  };\n\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function insideOut(data) {\n      var n = data.length,\n          i,\n          j,\n          max = data.map(d3_layout_stackMaxIndex),\n          sums = data.map(d3_layout_stackReduceSum),\n          index = d3.range(n).sort(function (a, b) {\n        return max[a] - max[b];\n      }),\n          top = 0,\n          bottom = 0,\n          tops = [],\n          bottoms = [];\n\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function reverse(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function silhouette(data) {\n      var n = data.length,\n          m = data[0].length,\n          sums = [],\n          max = 0,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o > max) max = o;\n        sums.push(o);\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n\n      return y0;\n    },\n    wiggle: function wiggle(data) {\n      var n = data.length,\n          x = data[0],\n          m = x.length,\n          i,\n          j,\n          k,\n          s1,\n          s2,\n          s3,\n          dx,\n          o,\n          o0,\n          y0 = [];\n      y0[0] = o = o0 = 0;\n\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) {\n          s1 += data[i][j][1];\n        }\n\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n\n          s2 += s3 * data[i][j][1];\n        }\n\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] -= o0;\n      }\n\n      return y0;\n    },\n    expand: function expand(data) {\n      var n = data.length,\n          m = data[0].length,\n          k = 1 / n,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o) for (i = 0; i < n; i++) {\n          data[i][j][1] /= o;\n        } else for (i = 0; i < n; i++) {\n          data[i][j][1] = k;\n        }\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = 0;\n      }\n\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1,\n        m = data[0].length,\n        y0 = [];\n\n    while (++j < m) {\n      y0[j] = 0;\n    }\n\n    return y0;\n  }\n\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1,\n        j = 0,\n        v = array[0][1],\n        k,\n        n = array.length;\n\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n\n    return j;\n  }\n\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n\n  d3.layout.histogram = function () {\n    var frequency = true,\n        valuer = Number,\n        ranger = d3_layout_histogramRange,\n        binner = d3_layout_histogramBinSturges;\n\n    function histogram(data, i) {\n      var bins = [],\n          values = data.map(valuer, this),\n          range = ranger.call(this, values, i),\n          thresholds = binner.call(this, range, values, i),\n          bin,\n          i = -1,\n          n = values.length,\n          m = thresholds.length - 1,\n          k = frequency ? 1 : 1 / n,\n          x;\n\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n\n      if (m > 0) {\n        i = -1;\n\n        while (++i < n) {\n          x = values[i];\n\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n\n    histogram.range = function (x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n\n    histogram.bins = function (x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function (range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n\n    histogram.frequency = function (x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n\n    return histogram;\n  };\n\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1,\n        b = +range[0],\n        m = (range[1] - b) / n,\n        f = [];\n\n    while (++x <= n) {\n      f[x] = m * x + b;\n    }\n\n    return f;\n  }\n\n  function d3_layout_histogramRange(values) {\n    return [d3.min(values), d3.max(values)];\n  }\n\n  d3.layout.pack = function () {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),\n        padding = 0,\n        size = [1, 1],\n        radius;\n\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          w = size[0],\n          h = size[1],\n          r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function (d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r -= dr;\n        });\n      }\n\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n\n    pack.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n\n    pack.radius = function (_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n\n    pack.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes,\n        xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity,\n        a,\n        b,\n        c,\n        i,\n        j,\n        k,\n        n;\n\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0,\n              s1 = 1,\n              s2 = 1;\n\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n\n    var cx = (xMin + xMax) / 2,\n        cy = (yMin + yMax) / 2,\n        cr = 0;\n\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n\n    if (children) {\n      var i = -1,\n          n = children.length;\n\n      while (++i < n) {\n        d3_layout_packTransform(children[i], x, y, k);\n      }\n    }\n  }\n\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n\n    if (db && (dx || dy)) {\n      var da = b.r + c.r,\n          dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n\n  d3.layout.tree = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = null;\n\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root0 = nodes[0],\n          root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {\n        var left = root0,\n            right = root0,\n            bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x,\n            kx = size[0] / (right.x + separation(right, left) / 2 + tx),\n            ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [root0]\n      },\n          queue = [root1],\n          node1;\n\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n\n      return root1.children[0];\n    }\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n\n    tree.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n\n    tree.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n\n    tree.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n\n  function d3_layout_treeRight(v) {\n    var children = v.children,\n        n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  function d3_layout_treeShift(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  d3.layout.cluster = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = false;\n\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          previousNode,\n          x = 0;\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var children = node.children;\n\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root),\n          right = d3_layout_clusterRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n\n    cluster.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n\n    cluster.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n\n    cluster.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function (child) {\n      return child.y;\n    });\n  }\n\n  function d3_layout_clusterX(children) {\n    return children.reduce(function (x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n\n  function d3_layout_clusterRight(node) {\n    var children = node.children,\n        n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n\n  d3.layout.treemap = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        round = Math.round,\n        size = [1, 1],\n        padding = null,\n        pad = d3_layout_treemapPadNull,\n        sticky = false,\n        stickies,\n        mode = \"squarify\",\n        ratio = .5 * (1 + Math.sqrt(5));\n\n    function scale(children, k) {\n      var i = -1,\n          n = children.length,\n          child,\n          area;\n\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n\n    function squarify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            row = [],\n            remaining = children.slice(),\n            child,\n            best = Infinity,\n            score,\n            u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),\n            n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n\n        children.forEach(squarify);\n      }\n    }\n\n    function stickify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            remaining = children.slice(),\n            child,\n            row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n\n        children.forEach(stickify);\n      }\n    }\n\n    function worst(row, u) {\n      var s = row.area,\n          r,\n          rmax = 0,\n          rmin = Infinity,\n          i = -1,\n          n = row.length;\n\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n\n    function position(row, u, rect, flush) {\n      var i = -1,\n          n = row.length,\n          x = rect.x,\n          y = rect.y,\n          v = u ? round(row.area / u) : 0,\n          o;\n\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d),\n          root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1];else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([root], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n\n    treemap.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n\n    treemap.padding = function (x) {\n      if (!arguments.length) return padding;\n\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n      }\n\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x], padConstant) : padConstant;\n      return treemap;\n    };\n\n    treemap.round = function (x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n\n    treemap.sticky = function (x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n\n    treemap.ratio = function (x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n\n    treemap.mode = function (x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3],\n        y = node.y + padding[0],\n        dx = node.dx - padding[1] - padding[3],\n        dy = node.dy - padding[0] - padding[2];\n\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  d3.random = {\n    normal: function normal(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function () {\n        var x, y, r;\n\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function logNormal() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function () {\n        return Math.exp(random());\n      };\n    },\n    bates: function bates(m) {\n      var random = d3.random.irwinHall(m);\n      return function () {\n        return random() / m;\n      };\n    },\n    irwinHall: function irwinHall(m) {\n      return function () {\n        for (var s = 0, j = 0; j < m; j++) {\n          s += Math.random();\n        }\n\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n\n  function d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  }\n\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]),\n        i = interpolate(range[0], range[1]);\n    return function (x) {\n      return i(u(x));\n    };\n  }\n\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        dx;\n\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function floor(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function ceil(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [],\n        i = [],\n        j = 0,\n        k = Math.min(domain.length, range.length) - 1;\n\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n\n    return function (x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n\n  d3.scale.linear = function () {\n    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n  };\n\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,\n          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n\n    function scale(x) {\n      return output(x);\n    }\n\n    scale.invert = function (y) {\n      return input(y);\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.rangeRound = function (x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n\n    scale.clamp = function (x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n\n    scale.interpolate = function (x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n\n    scale.copy = function () {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n\n    return rescale();\n  }\n\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain),\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step;\n    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function (d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n\n    return d3.format(format);\n  }\n\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n\n  d3.scale.log = function () {\n    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n  };\n\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n\n    function scale(x) {\n      return linear(log(x));\n    }\n\n    scale.invert = function (x) {\n      return pow(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n\n    scale.base = function (_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n\n    scale.nice = function () {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n\n    scale.ticks = function () {\n      var extent = d3_scaleExtent(domain),\n          ticks = [],\n          u = extent[0],\n          v = extent[1],\n          i = Math.floor(log(u)),\n          j = Math.ceil(log(v)),\n          n = base % 1 ? 2 : base;\n\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (; i < j; i++) {\n            for (var k = 1; k < n; k++) {\n              ticks.push(pow(i) * k);\n            }\n          }\n\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n\n          for (; i++ < j;) {\n            for (var k = n - 1; k > 0; k--) {\n              ticks.push(pow(i) * k);\n            }\n          }\n        }\n\n        for (i = 0; ticks[i] < u; i++) {}\n\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\n        ticks = ticks.slice(i, j);\n      }\n\n      return ticks;\n    };\n\n    scale.tickFormat = function (n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function (d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n\n    scale.copy = function () {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  var d3_scale_logFormat = d3.format(\".0e\"),\n      d3_scale_logNiceNegative = {\n    floor: function floor(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function ceil(x) {\n      return -Math.floor(-x);\n    }\n  };\n\n  d3.scale.pow = function () {\n    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n  };\n\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent),\n        powb = d3_scale_powPow(1 / exponent);\n\n    function scale(x) {\n      return linear(powp(x));\n    }\n\n    scale.invert = function (x) {\n      return powb(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n\n    scale.exponent = function (x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n\n    scale.copy = function () {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_scale_powPow(e) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n\n  d3.scale.sqrt = function () {\n    return d3.scale.pow().exponent(.5);\n  };\n\n  d3.scale.ordinal = function () {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [[]]\n    });\n  };\n\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n\n    function steps(start, step) {\n      return d3.range(domain.length).map(function (i) {\n        return start + step * i;\n      });\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1,\n          n = x.length,\n          xi;\n\n      while (++i < n) {\n        if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      }\n\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangePoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundPoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBand = function () {\n      return rangeBand;\n    };\n\n    scale.rangeExtent = function () {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n\n    scale.copy = function () {\n      return d3_scale_ordinal(domain, ranger);\n    };\n\n    return scale.domain(domain);\n  }\n\n  d3.scale.category10 = function () {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n\n  d3.scale.category20 = function () {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n\n  d3.scale.category20b = function () {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n\n  d3.scale.category20c = function () {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n\n  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n\n  d3.scale.quantile = function () {\n    return d3_scale_quantile([], []);\n  };\n\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n\n    function rescale() {\n      var k = 0,\n          q = range.length;\n      thresholds = [];\n\n      while (++k < q) {\n        thresholds[k - 1] = d3.quantile(domain, k / q);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.quantiles = function () {\n      return thresholds;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantile(domain, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.quantize = function () {\n    return d3_scale_quantize(0, 1, [0, 1]);\n  };\n\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return [x0, x1];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [y, y + 1 / kx];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantize(x0, x1, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.threshold = function () {\n    return d3_scale_threshold([.5], [0, 1]);\n  };\n\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n\n    scale.range = function (_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return [domain[y - 1], domain[y]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_threshold(domain, range);\n    };\n\n    return scale;\n  }\n\n  d3.scale.identity = function () {\n    return d3_scale_identity([0, 1]);\n  };\n\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n\n    identity.invert = identity;\n\n    identity.domain = identity.range = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n\n    identity.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    identity.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    identity.copy = function () {\n      return d3_scale_identity(domain);\n    };\n\n    return identity;\n  }\n\n  d3.svg = {};\n\n  function d3_zero() {\n    return 0;\n  }\n\n  d3.svg.arc = function () {\n    var innerRadius = d3_svg_arcInnerRadius,\n        outerRadius = d3_svg_arcOuterRadius,\n        cornerRadius = d3_zero,\n        padRadius = d3_svg_arcAuto,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle,\n        padAngle = d3_svg_arcPadAngle;\n\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)),\n          r1 = Math.max(0, +outerRadius.apply(this, arguments)),\n          a0 = startAngle.apply(this, arguments) - halfπ,\n          a1 = endAngle.apply(this, arguments) - halfπ,\n          da = Math.abs(a1 - a0),\n          cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc,\n          cr,\n          rp,\n          ap,\n          p0 = 0,\n          p1 = 0,\n          x0,\n          y0,\n          x1,\n          y1,\n          x2,\n          y2,\n          x3,\n          y3,\n          path = [];\n\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc,\n            rc0 = rc;\n\n        if (da < π) {\n          var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),\n              ax = x0 - oc[0],\n              ay = y0 - oc[1],\n              bx = x1 - oc[0],\n              by = y1 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),\n              t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);\n\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),\n              t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);\n\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n\n    arc.innerRadius = function (v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.outerRadius = function (v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.cornerRadius = function (v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.padRadius = function (v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n\n    arc.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.padAngle = function (v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.centroid = function () {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    return arc;\n  };\n\n  var d3_svg_arcAuto = \"auto\";\n\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0],\n        y01 = p0[1] - p1[1],\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x1 = p0[0] + ox,\n        y1 = p0[1] + oy,\n        x2 = p1[0] + ox,\n        y2 = p1[1] + oy,\n        x3 = (x1 + x2) / 2,\n        y3 = (y1 + y2) / 2,\n        dx = x2 - x1,\n        dy = y2 - y1,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x1 * y2 - x2 * y1,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x3,\n        dy0 = cy0 - y3,\n        dx1 = cx1 - x3,\n        dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];\n  }\n\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        tension = .7;\n\n    function line(data) {\n      var segments = [],\n          points = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx = d3_functor(x),\n          fy = d3_functor(y);\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    line.x = function (_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n\n    line.y = function (_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n\n    line.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n\n    line.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n\n    line.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n\n    return line;\n  }\n\n  d3.svg.line = function () {\n    return d3_svg_line(d3_identity);\n  };\n\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function (key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n\n  function d3_svg_lineStep(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    }\n\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepBefore(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepAfter(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n  }\n\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n\n    var quad = points.length != tangents.length,\n        path = \"\",\n        p0 = points[0],\n        p = points[1],\n        t0 = tangents[0],\n        t = t0,\n        pi = 1;\n\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n\n    return path;\n  }\n\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [],\n        a = (1 - tension) / 2,\n        p0,\n        p1 = points[0],\n        p2 = points[1],\n        i = 1,\n        n = points.length;\n\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1,\n        n = points.length,\n        pi = points[0],\n        x0 = pi[0],\n        y0 = pi[1],\n        px = [x0, x0, x0, (pi = points[1])[0]],\n        py = [y0, y0, y0, pi[1]],\n        path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    points.push(points[n - 1]);\n\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [],\n        i = -1,\n        n = points.length,\n        pi,\n        px = [0],\n        py = [0];\n\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisClosed(points) {\n    var path,\n        i = -1,\n        n = points.length,\n        m = n + 4,\n        pi,\n        px = [],\n        py = [];\n\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    --i;\n\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n\n    if (n) {\n      var x0 = points[0][0],\n          y0 = points[0][1],\n          dx = points[n][0] - x0,\n          dy = points[n][1] - y0,\n          i = -1,\n          p,\n          t;\n\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n\n    return d3_svg_lineBasis(points);\n  }\n\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n\n  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],\n      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],\n      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0,\n        j = points.length - 1,\n        m = [],\n        p0 = points[0],\n        p1 = points[1],\n        d = m[0] = d3_svg_lineSlope(p0, p1);\n\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n\n    m[i] = d;\n    return m;\n  }\n\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [],\n        d,\n        a,\n        b,\n        s,\n        m = d3_svg_lineFiniteDifferences(points),\n        i = -1,\n        j = points.length - 1;\n\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n\n    i = -1;\n\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([s || 0, m[i] * s || 0]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n\n  d3.svg.line.radial = function () {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n\n  function d3_svg_lineRadial(points) {\n    var point,\n        i = -1,\n        n = points.length,\n        r,\n        a;\n\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n\n    return points;\n  }\n\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX,\n        x1 = d3_geom_pointX,\n        y0 = 0,\n        y1 = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        interpolateReverse = interpolate,\n        L = \"L\",\n        tension = .7;\n\n    function area(data) {\n      var segments = [],\n          points0 = [],\n          points1 = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx0 = d3_functor(x0),\n          fy0 = d3_functor(y0),\n          fx1 = x0 === x1 ? function () {\n        return x;\n      } : d3_functor(x1),\n          fy1 = y0 === y1 ? function () {\n        return y;\n      } : d3_functor(y1),\n          x,\n          y;\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    area.x = function (_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n\n    area.x0 = function (_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n\n    area.x1 = function (_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n\n    area.y = function (_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n\n    area.y0 = function (_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n\n    area.y1 = function (_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n\n    area.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n\n    area.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n\n    area.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n\n    return area;\n  }\n\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\n  d3.svg.area = function () {\n    return d3_svg_area(d3_identity);\n  };\n\n  d3.svg.area.radial = function () {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n\n  d3.svg.chord = function () {\n    var source = d3_source,\n        target = d3_target,\n        radius = d3_svg_chordRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i),\n          t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i),\n          r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) - halfπ,\n          a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [r * Math.cos(a0), r * Math.sin(a0)],\n        p1: [r * Math.cos(a1), r * Math.sin(a1)]\n      };\n    }\n\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n\n    chord.radius = function (v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n\n    chord.source = function (v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n\n    chord.target = function (v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n\n    chord.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n\n    chord.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n\n    return chord;\n  };\n\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n\n  d3.svg.diagonal = function () {\n    var source = d3_source,\n        target = d3_target,\n        projection = d3_svg_diagonalProjection;\n\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i),\n          p3 = target.call(this, d, i),\n          m = (p0.y + p3.y) / 2,\n          p = [p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n\n    diagonal.source = function (x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.target = function (x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.projection = function (x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalProjection(d) {\n    return [d.x, d.y];\n  }\n\n  d3.svg.diagonal.radial = function () {\n    var diagonal = d3.svg.diagonal(),\n        projection = d3_svg_diagonalProjection,\n        projection_ = diagonal.projection;\n\n    diagonal.projection = function (x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function () {\n      var d = projection.apply(this, arguments),\n          r = d[0],\n          a = d[1] - halfπ;\n      return [r * Math.cos(a), r * Math.sin(a)];\n    };\n  }\n\n  d3.svg.symbol = function () {\n    var type = d3_svg_symbolType,\n        size = d3_svg_symbolSize;\n\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n\n    symbol.type = function (x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n\n    symbol.size = function (x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n\n    return symbol;\n  };\n\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function cross(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function diamond(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),\n          rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function square(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function triangleDown(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function triangleUp(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3),\n      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n  d3_selectionPrototype.transition = function (name) {\n    var id = d3_transitionInheritId || ++d3_transitionId,\n        ns = d3_transitionNamespace(name),\n        subgroups = [],\n        subgroup,\n        node,\n        transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_selectionPrototype.interrupt = function (name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\n  function d3_selection_interruptNS(ns) {\n    return function () {\n      var lock, activeId, active;\n\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId];else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n\n  var d3_transitionPrototype = [],\n      d3_transitionId = 0,\n      d3_transitionInheritId,\n      d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\n  d3.transition = function (selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n\n  d3.transition.prototype = d3_transitionPrototype;\n\n  d3_transitionPrototype.select = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnode,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.selectAll = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnodes,\n        node,\n        subnode,\n        transition;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n\n          for (var k = -1, o = subnodes.length; ++k < o;) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n\n  d3_transitionPrototype.tween = function (name, tween) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function (node) {\n      node[ns][id].tween.remove(name);\n    } : function (node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id,\n        ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function (node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n\n  d3_transitionPrototype.attr = function (nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) {\n        this.attr(value, nameNS[value]);\n      }\n\n      return this;\n    }\n\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\n        name = d3.ns.qualify(nameNS);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function () {\n        var a = this.getAttribute(name),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function () {\n        var a = this.getAttributeNS(name.space, name.local),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.attrTween = function (nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function (t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function (t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.style(priority, name[priority], value);\n        }\n\n        return this;\n      }\n\n      priority = \"\";\n    }\n\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function () {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name),\n            i;\n        return a !== b && (i = d3_interpolate(a, b), function (t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n\n  d3_transitionPrototype.styleTween = function (name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function (t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n\n    return this.tween(\"style.\" + name, styleTween);\n  };\n\n  d3_transitionPrototype.text = function (value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function () {\n      this.textContent = b;\n    };\n  }\n\n  d3_transitionPrototype.remove = function () {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function () {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n\n  d3_transitionPrototype.ease = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function (node) {\n      node[ns][id].ease = value;\n    });\n  };\n\n  d3_transitionPrototype.delay = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function (node) {\n      node[ns][id].delay = value;\n    }));\n  };\n\n  d3_transitionPrototype.duration = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function (node) {\n      node[ns][id].duration = value;\n    }));\n  };\n\n  d3_transitionPrototype.each = function (type, listener) {\n    var id = this.id,\n        ns = this.namespace;\n\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit,\n          inheritId = d3_transitionInheritId;\n\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function (node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function (node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n\n    return this;\n  };\n\n  d3_transitionPrototype.transition = function () {\n    var id0 = this.id,\n        id1 = ++d3_transitionId,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        group,\n        node,\n        transition;\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id1);\n  };\n\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }),\n        transition = lock[id],\n        time,\n        timer,\n        duration,\n        ease,\n        tweens;\n\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n\n    function start(elapsed) {\n      var activeId = lock.active,\n          active = lock[activeId];\n\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n\n      timer.c = tick;\n      d3_timer(function () {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function (key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed / duration,\n          e = ease(t),\n          n = tweens.length;\n\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id];else delete node[ns];\n        return 1;\n      }\n    }\n\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n\n  d3.svg.axis = function () {\n    var scale = d3.scale.linear(),\n        orient = d3_svg_axisDefaultOrient,\n        innerTickSize = 6,\n        outerTickSize = 6,\n        tickPadding = 3,\n        tickArguments_ = [10],\n        tickValues = null,\n        tickFormat_;\n\n    function axis(g) {\n      g.each(function () {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale,\n            scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,\n            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε),\n            tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(),\n            tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1),\n            tickSpacing = Math.max(innerTickSize, 0) + tickPadding,\n            tickTransform;\n        var range = d3_scaleRange(scale1),\n            path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"),\n            lineUpdate = tickUpdate.select(\"line\"),\n            text = tick.select(\"text\").text(tickFormat),\n            textEnter = tickEnter.select(\"text\"),\n            textUpdate = tickUpdate.select(\"text\"),\n            sign = orient === \"top\" || orient === \"left\" ? -1 : 1,\n            x1,\n            x2,\n            y1,\n            y2;\n\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n\n    axis.tickFormat = function (x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n\n    axis.tickSize = function (x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n\n    axis.innerTickSize = function (x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n\n    axis.outerTickSize = function (x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n\n    axis.tickPadding = function (x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n\n    axis.tickSubdivide = function () {\n      return arguments.length && axis;\n    };\n\n    return axis;\n  };\n\n  var d3_svg_axisDefaultOrient = \"bottom\",\n      d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n\n  d3.svg.brush = function () {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"),\n        x = null,\n        y = null,\n        xExtent = [0, 0],\n        yExtent = [0, 0],\n        xExtentDomain,\n        yExtentDomain,\n        xClamp = true,\n        yClamp = true,\n        resizes = d3_svg_brushResizes[0];\n\n    function brush(g) {\n      g.each(function () {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([0]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function (d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function (d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function (d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function (d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g),\n            backgroundUpdate = d3.transition(background),\n            range;\n\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n\n        redraw(gUpdate);\n      });\n    }\n\n    brush.event = function (g) {\n      g.each(function () {\n        var event_ = event.of(this, arguments),\n            extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        },\n            extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function () {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function () {\n            var xi = d3_interpolateArray(xExtent, extent1.x),\n                yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function (t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function () {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function (d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n\n    function brushstart() {\n      var target = this,\n          eventTarget = d3.select(d3.event.target),\n          event_ = event.of(target, arguments),\n          g = d3.select(target),\n          resizing = eventTarget.datum(),\n          resizingX = !/^(n|s)$/.test(resizing) && x,\n          resizingY = !/^(e|w)$/.test(resizing) && y,\n          dragging = eventTarget.classed(\"extent\"),\n          dragRestore = d3_event_dragSuppress(target),\n          center,\n          origin = d3.mouse(target),\n          offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n\n      g.interrupt().selectAll(\"*\").interrupt();\n\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing),\n            ey = +/^n/.test(resizing);\n        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n\n          d3_eventPreventDefault();\n        }\n      }\n\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n\n      function brushmove() {\n        var point = d3.mouse(target),\n            moved = false;\n\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale),\n            r0 = range[0],\n            r1 = range[1],\n            position = origin[i],\n            extent = i ? yExtent : xExtent,\n            size = extent[1] - extent[0],\n            min,\n            max;\n\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null;else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n\n    brush.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.clamp = function (z) {\n      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;\n      return brush;\n    };\n\n    brush.extent = function (z) {\n      var x0, x1, y0, y1, t;\n\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n\n        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n      }\n\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [x0, x1];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n      }\n\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [y0, y1];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n      }\n\n      return brush;\n    };\n\n    brush.clear = function () {\n      if (!brush.empty()) {\n        xExtent = [0, 0], yExtent = [0, 0];\n        xExtentDomain = yExtentDomain = null;\n      }\n\n      return brush;\n    };\n\n    brush.empty = function () {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n\n    return d3.rebind(brush, event, \"on\");\n  };\n\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  d3_time_formatIsoNative.parse = function (string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function (date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function (date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function (date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function (date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function (date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function (date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n\n    scale.invert = function (x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0],\n          target = span / count,\n          i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n        return d / 31536e6;\n      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n\n    scale.nice = function (interval, skip) {\n      var domain = scale.domain(),\n          extent = d3_scaleExtent(domain),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function floor(date) {\n          while (skipped(date = interval.floor(date))) {\n            date = d3_time_scaleDate(date - 1);\n          }\n\n          return date;\n        },\n        ceil: function ceil(date) {\n          while (skipped(date = interval.ceil(date))) {\n            date = d3_time_scaleDate(+date + 1);\n          }\n\n          return date;\n        }\n      } : interval));\n    };\n\n    scale.ticks = function (interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n        range: interval\n      }, skip];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n\n    scale.tickFormat = function () {\n      return format;\n    };\n\n    scale.copy = function () {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n\n  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n    return d.getMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getHours();\n  }], [\"%a %d\", function (d) {\n    return d.getDay() && d.getDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getMonth();\n  }], [\"%Y\", d3_true]]);\n  var d3_time_scaleMilliseconds = {\n    range: function range(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n\n  d3_time.scale = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n    return [m[0].utc, m[1]];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n    return d.getUTCMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getUTCSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getUTCMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getUTCHours();\n  }], [\"%a %d\", function (d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getUTCDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getUTCMonth();\n  }], [\"%Y\", d3_true]]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\n  d3_time.scale.utc = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n\n  d3.text = d3_xhrType(function (request) {\n    return request.responseText;\n  });\n\n  d3.json = function (url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n\n  d3.html = function (url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n\n  d3.xml = d3_xhrType(function (request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3);else if (typeof module === \"object\" && module.exports) module.exports = d3;else this.d3 = d3;\n}();","/* nvd3 version 1.8.6 (https://github.com/novus/nvd3) 2017-08-23 */\n(function () {\n  // set up main nv object\n  var nv = {}; // the major global objects under the nv namespace\n\n  nv.dev = false; //set false when in production\n\n  nv.tooltip = nv.tooltip || {}; // For the tooltip system\n\n  nv.utils = nv.utils || {}; // Utility subsystem\n\n  nv.models = nv.models || {}; //stores all the possible models/components\n\n  nv.charts = {}; //stores all the ready to use charts\n\n  nv.logs = {}; //stores some statistics and potential error messages\n\n  nv.dom = {}; //DOM manipulation functions\n  // Node/CommonJS - require D3\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined' && typeof d3 == 'undefined') {\n    d3 = require('d3');\n  }\n\n  nv.dispatch = d3.dispatch('render_start', 'render_end'); // Function bind polyfill\n  // Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n  // https://github.com/ariya/phantomjs/issues/10522\n  // http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n  // phantomJS is used for running the test suite\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== \"function\") {\n        // closest thing possible to the ECMAScript 5 internal IsCallable function\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  } //  Development render timers - disabled if dev = false\n\n\n  if (nv.dev) {\n    nv.dispatch.on('render_start', function (e) {\n      nv.logs.startTime = +new Date();\n    });\n    nv.dispatch.on('render_end', function (e) {\n      nv.logs.endTime = +new Date();\n      nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n      nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n  } // Logs all arguments, and returns the last so you can test things in place\n  // Note: in IE8 console.log is an object not a function, and if modernizr is used\n  // then calling Function.prototype.bind with with anything other than a function\n  // causes a TypeError to be thrown.\n\n\n  nv.log = function () {\n    if (nv.dev && window.console && console.log && console.log.apply) console.log.apply(console, arguments);else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n      var log = Function.prototype.bind.call(console.log, console);\n      log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n  }; // print console warning, should be used by deprecated functions\n\n\n  nv.deprecated = function (name, info) {\n    if (console && console.warn) {\n      console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n  }; // The nv.render function is used to queue up chart rendering\n  // in non-blocking async functions.\n  // When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\n\n  nv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function renderLoop() {\n      var chart, graph;\n\n      for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n        chart = graph.generate();\n        if (typeof graph.callback == typeof Function) graph.callback(chart);\n      }\n\n      nv.render.queue.splice(0, i);\n\n      if (nv.render.queue.length) {\n        setTimeout(renderLoop);\n      } else {\n        nv.dispatch.render_end();\n        nv.render.active = false;\n      }\n    };\n\n    setTimeout(renderLoop);\n  };\n\n  nv.render.active = false;\n  nv.render.queue = [];\n  /*\n  Adds a chart to the async rendering queue. This method can take arguments in two forms:\n  nv.addGraph({\n      generate: <Function>\n      callback: <Function>\n  })\n  \n  or\n  \n  nv.addGraph(<generate Function>, <callback Function>)\n  \n  The generate function should contain code that creates the NVD3 model, sets options\n  on it, adds data to an SVG element, and invokes the chart model. The generate function\n  should return the chart model.  See examples/lineChart.html for a usage example.\n  \n  The callback function is optional, and it is called when the generate function completes.\n  */\n\n  nv.addGraph = function (obj) {\n    if (typeof arguments[0] === typeof Function) {\n      obj = {\n        generate: arguments[0],\n        callback: arguments[1]\n      };\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n      nv.render();\n    }\n  }; // Node/CommonJS exports\n\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = nv;\n  }\n\n  if (typeof window !== 'undefined') {\n    window.nv = nv;\n  }\n  /* Facade for queueing DOM write operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.write = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.mutate(callback);\n    }\n\n    return callback();\n  };\n  /* Facade for queueing DOM read operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.read = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.measure(callback);\n    }\n\n    return callback();\n  };\n  /* Utility class to handle creation of an interactive layer.\n   This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n   containing the X-coordinate. It can also render a vertical line where the mouse is located.\n  \n   dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n   the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n   It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n   */\n\n\n  nv.interactiveGuideline = function () {\n    \"use strict\";\n\n    var margin = {\n      left: 0,\n      top: 0 //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\n    },\n        width = null,\n        height = null,\n        xScale = d3.scale.linear(),\n        dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp'),\n        showGuideLine = true,\n        svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n    ,\n        tooltip = nv.models.tooltip(),\n        isMSIE = window.ActiveXObject // Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n    tooltip.duration(0).hideDelay(0).hidden(false);\n\n    function layer(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this);\n        var availableWidth = width || 960,\n            availableHeight = height || 400;\n        var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\").data([data]);\n        var wrapEnter = wrap.enter().append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n        wrapEnter.append(\"g\").attr(\"class\", \"nv-interactiveGuideLine\");\n\n        if (!svgContainer) {\n          return;\n        }\n\n        function mouseHandler() {\n          var mouseX = d3.event.clientX - this.getBoundingClientRect().left;\n          var mouseY = d3.event.clientY - this.getBoundingClientRect().top;\n          var subtractMargin = true;\n          var mouseOutAnyReason = false;\n\n          if (isMSIE) {\n            /*\n             D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n             d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n             over a rect in IE 10.\n             However, d3.event.offsetX/Y also returns the mouse coordinates\n             relative to the triggering <rect>. So we use offsetX/Y on IE.\n             */\n            mouseX = d3.event.offsetX;\n            mouseY = d3.event.offsetY;\n            /*\n             On IE, if you attach a mouse event listener to the <svg> container,\n             it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n             When this happens on IE, the offsetX/Y is set to where ever the child element\n             is located.\n             As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n             position under this scenario. Removing the line below *will* cause\n             the interactive layer to not work right on IE.\n             */\n\n            if (d3.event.target.tagName !== \"svg\") {\n              subtractMargin = false;\n            }\n\n            if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n              mouseOutAnyReason = true;\n            }\n          }\n\n          if (subtractMargin) {\n            mouseX -= margin.left;\n            mouseY -= margin.top;\n          }\n          /* If mouseX/Y is outside of the chart's bounds,\n           trigger a mouseOut event.\n           */\n\n\n          if (d3.event.type === 'mouseout' || mouseX < 0 || mouseY < 0 || mouseX > availableWidth || mouseY > availableHeight || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || mouseOutAnyReason) {\n            if (isMSIE) {\n              if (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && (d3.event.relatedTarget.className === undefined || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n                return;\n              }\n            }\n\n            dispatch.elementMouseout({\n              mouseX: mouseX,\n              mouseY: mouseY\n            });\n            layer.renderGuideLine(null); //hide the guideline\n\n            tooltip.hidden(true);\n            return;\n          } else {\n            tooltip.hidden(false);\n          }\n\n          var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n          var pointXValue = undefined; // Ordinal scale has no invert method\n\n          if (scaleIsOrdinal) {\n            var elementIndex = d3.bisect(xScale.range(), mouseX) - 1; // Check if mouseX is in the range band\n\n            if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n              pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n            } else {\n              dispatch.elementMouseout({\n                mouseX: mouseX,\n                mouseY: mouseY\n              });\n              layer.renderGuideLine(null); //hide the guideline\n\n              tooltip.hidden(true);\n              return;\n            }\n          } else {\n            pointXValue = xScale.invert(mouseX);\n          }\n\n          dispatch.elementMousemove({\n            mouseX: mouseX,\n            mouseY: mouseY,\n            pointXValue: pointXValue\n          }); //If user double clicks the layer, fire a elementDblclick\n\n          if (d3.event.type === \"dblclick\") {\n            dispatch.elementDblclick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user single clicks the layer, fire elementClick\n\n\n          if (d3.event.type === 'click') {\n            dispatch.elementClick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseDown\n\n\n          if (d3.event.type === 'mousedown') {\n            dispatch.elementMouseDown({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseUp\n\n\n          if (d3.event.type === 'mouseup') {\n            dispatch.elementMouseUp({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          }\n        }\n\n        svgContainer.on(\"touchmove\", mouseHandler).on(\"mousemove\", mouseHandler, true).on(\"mouseout\", mouseHandler, true).on(\"mousedown\", mouseHandler, true).on(\"mouseup\", mouseHandler, true).on(\"dblclick\", mouseHandler).on(\"click\", mouseHandler);\n        layer.guideLine = null; //Draws a vertical guideline at the given X postion.\n\n        layer.renderGuideLine = function (x) {\n          if (!showGuideLine) return;\n          if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n          nv.dom.write(function () {\n            var line = wrap.select(\".nv-interactiveGuideLine\").selectAll(\"line\").data(x != null ? [nv.utils.NaNtoZero(x)] : [], String);\n            line.enter().append(\"line\").attr(\"class\", \"nv-guideline\").attr(\"x1\", function (d) {\n              return d;\n            }).attr(\"x2\", function (d) {\n              return d;\n            }).attr(\"y1\", availableHeight).attr(\"y2\", 0);\n            line.exit().remove();\n          });\n        };\n      });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return layer;\n    };\n\n    layer.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return layer;\n    };\n\n    layer.height = function (_) {\n      if (!arguments.length) return height;\n      height = _;\n      return layer;\n    };\n\n    layer.xScale = function (_) {\n      if (!arguments.length) return xScale;\n      xScale = _;\n      return layer;\n    };\n\n    layer.showGuideLine = function (_) {\n      if (!arguments.length) return showGuideLine;\n      showGuideLine = _;\n      return layer;\n    };\n\n    layer.svgContainer = function (_) {\n      if (!arguments.length) return svgContainer;\n      svgContainer = _;\n      return layer;\n    };\n\n    return layer;\n  };\n  /* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n   This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n  \n   For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n   Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n   because 28 is closer to 30 than 10.\n  \n   Unit tests can be found in: interactiveBisectTest.html\n  \n   Has the following known issues:\n   * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n   * Won't work if there are duplicate x coordinate values.\n   */\n\n\n  nv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n\n    if (!(values instanceof Array)) {\n      return null;\n    }\n\n    var _xAccessor;\n\n    if (typeof xAccessor !== 'function') {\n      _xAccessor = function _xAccessor(d) {\n        return d.x;\n      };\n    } else {\n      _xAccessor = xAccessor;\n    }\n\n    var _cmp = function _cmp(d, v) {\n      // Accessors are no longer passed the index of the element along with\n      // the element itself when invoked by d3.bisector.\n      //\n      // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n      // function passed to determine if it should consider it an accessor\n      // or a comparator. This meant that accessors that take two arguments\n      // (expecting an index as the second parameter) are treated as\n      // comparators where the second argument is the search value against\n      // which the first argument is compared.\n      return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values, searchVal) - 1]);\n\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n      currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n      return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index + 1, values.length - 1]);\n\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n      nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n      return index;\n    } else {\n      return nextIndex;\n    }\n  };\n  /*\n   Returns the index in the array \"values\" that is closest to searchVal.\n   Only returns an index if searchVal is within some \"threshold\".\n   Otherwise, returns null.\n   */\n\n\n  nv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n\n    var yDistMax = Infinity,\n        indexToHighlight = null;\n    values.forEach(function (d, i) {\n      var delta = Math.abs(searchVal - d);\n\n      if (d != null && delta <= yDistMax && delta < threshold) {\n        yDistMax = delta;\n        indexToHighlight = i;\n      }\n    });\n    return indexToHighlight;\n  };\n  /* Model which can be instantiated to handle tooltip rendering.\n   Example usage:\n   var tip = nv.models.tooltip().gravity('w').distance(23)\n   .data(myDataObject);\n  \n   tip();    //just invoke the returned function to render tooltip.\n   */\n\n\n  nv.models.tooltip = function () {\n    \"use strict\";\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n    ,\n        data = null,\n        gravity = 'w' // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n    ,\n        distance = 25 // Distance to offset tooltip from the mouse location.\n    ,\n        snapDistance = 0 // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n    ,\n        classes = null // Attaches additional CSS classes to the tooltip DIV that is created.\n    ,\n        hidden = true // Start off hidden, toggle with hide/show functions below.\n    ,\n        hideDelay = 200 // Delay (in ms) before the tooltip hides after calling hide().\n    ,\n        tooltip = null // d3 select of the tooltip div.\n    ,\n        lastPosition = {\n      left: null,\n      top: null // Last position the tooltip was in.\n\n    },\n        enabled = true // True -> tooltips are rendered. False -> don't render tooltips.\n    ,\n        duration = 100 // Tooltip movement duration, in ms.\n    ,\n        headerEnabled = true // If is to show the tooltip header.\n    ,\n        nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ; // Format function for the tooltip values column.\n    // d is value,\n    // i is series index\n    // p is point containing the value\n\n    var valueFormatter = function valueFormatter(d, i, p) {\n      return d;\n    }; // Format function for the tooltip header value.\n\n\n    var headerFormatter = function headerFormatter(d) {\n      return d;\n    };\n\n    var keyFormatter = function keyFormatter(d, i) {\n      return d;\n    }; // By default, the tooltip model renders a beautiful table inside a DIV, returned as HTML\n    // You can override this function if a custom tooltip is desired. For instance, you could directly manipulate\n    // the DOM by accessing elem and returning false.\n\n\n    var contentGenerator = function contentGenerator(d, elem) {\n      if (d === null) {\n        return '';\n      }\n\n      var table = d3.select(document.createElement(\"table\"));\n\n      if (headerEnabled) {\n        var theadEnter = table.selectAll(\"thead\").data([d]).enter().append(\"thead\");\n        theadEnter.append(\"tr\").append(\"td\").attr(\"colspan\", 3).append(\"strong\").classed(\"x-value\", true).html(headerFormatter(d.value));\n      }\n\n      var tbodyEnter = table.selectAll(\"tbody\").data([d]).enter().append(\"tbody\");\n      var trowEnter = tbodyEnter.selectAll(\"tr\").data(function (p) {\n        return p.series;\n      }).enter().append(\"tr\").classed(\"highlight\", function (p) {\n        return p.highlight;\n      });\n      trowEnter.append(\"td\").classed(\"legend-color-guide\", true).append(\"div\").style(\"background-color\", function (p) {\n        return p.color;\n      });\n      trowEnter.append(\"td\").classed(\"key\", true).classed(\"total\", function (p) {\n        return !!p.total;\n      }).html(function (p, i) {\n        return keyFormatter(p.key, i);\n      });\n      trowEnter.append(\"td\").classed(\"value\", true).html(function (p, i) {\n        return valueFormatter(p.value, i, p);\n      });\n      trowEnter.filter(function (p, i) {\n        return p.percent !== undefined;\n      }).append(\"td\").classed(\"percent\", true).html(function (p, i) {\n        return \"(\" + d3.format('%')(p.percent) + \")\";\n      });\n      trowEnter.selectAll(\"td\").each(function (p) {\n        if (p.highlight) {\n          var opacityScale = d3.scale.linear().domain([0, 1]).range([\"#fff\", p.color]);\n          var opacity = 0.6;\n          d3.select(this).style(\"border-bottom-color\", opacityScale(opacity)).style(\"border-top-color\", opacityScale(opacity));\n        }\n      });\n      var html = table.node().outerHTML;\n      if (d.footer !== undefined) html += \"<div class='footer'>\" + d.footer + \"</div>\";\n      return html;\n    };\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n\n\n    var position = function position() {\n      var pos = {\n        left: d3.event !== null ? d3.event.clientX : 0,\n        top: d3.event !== null ? d3.event.clientY : 0\n      };\n\n      if (getComputedStyle(document.body).transform != 'none') {\n        // Take the offset into account, as now the tooltip is relative\n        // to document.body.\n        var client = document.body.getBoundingClientRect();\n        pos.left -= client.left;\n        pos.top -= client.top;\n      }\n\n      return pos;\n    };\n\n    var dataSeriesExists = function dataSeriesExists(d) {\n      if (d && d.series) {\n        if (nv.utils.isArray(d.series)) {\n          return true;\n        } // if object, it's okay just convert to array of the object\n\n\n        if (nv.utils.isObject(d.series)) {\n          d.series = [d.series];\n          return true;\n        }\n      }\n\n      return false;\n    }; // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n\n\n    var calcGravityOffset = function calcGravityOffset(pos) {\n      var height = tooltip.node().offsetHeight,\n          width = tooltip.node().offsetWidth,\n          clientWidth = document.documentElement.clientWidth,\n          // Don't want scrollbars.\n      clientHeight = document.documentElement.clientHeight,\n          // Don't want scrollbars.\n      left,\n          top,\n          tmp; // calculate position based on gravity\n\n      switch (gravity) {\n        case 'e':\n          left = -width - distance;\n          top = -(height / 2);\n          if (pos.left + left < 0) left = distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'w':\n          left = distance;\n          top = -(height / 2);\n          if (pos.left + left + width > clientWidth) left = -width - distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'n':\n          left = -(width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\n          top = distance;\n          if (pos.top + top + height > clientHeight) top = -height - distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 's':\n          left = -(width / 2);\n          top = -height - distance;\n          if (pos.top + top < 0) top = distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 'center':\n          left = -(width / 2);\n          top = -(height / 2);\n          break;\n\n        default:\n          left = 0;\n          top = 0;\n          break;\n      }\n\n      return {\n        'left': left,\n        'top': top\n      };\n    };\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n\n\n    var positionTooltip = function positionTooltip() {\n      nv.dom.read(function () {\n        var pos = position(),\n            gravityOffset = calcGravityOffset(pos),\n            left = pos.left + gravityOffset.left,\n            top = pos.top + gravityOffset.top; // delay hiding a bit to avoid flickering\n\n        if (hidden) {\n          tooltip.interrupt().transition().delay(hideDelay).duration(0).style('opacity', 0);\n        } else {\n          // using tooltip.style('transform') returns values un-usable for tween\n          var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n          var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n          var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n          var is_hidden = tooltip.style('opacity') < 0.1;\n          tooltip.interrupt() // cancel running transitions\n          .transition().duration(is_hidden ? 0 : duration) // using tween since some versions of d3 can't auto-tween a translate on a div\n          .styleTween('transform', function (d) {\n            return translateInterpolator;\n          }, 'important') // Safari has its own `-webkit-transform` and does not support `transform`\n          .styleTween('-webkit-transform', function (d) {\n            return translateInterpolator;\n          }).style('-ms-transform', new_translate).style('opacity', 1);\n        }\n\n        lastPosition.left = left;\n        lastPosition.top = top;\n      });\n    }; // Creates new tooltip container, or uses existing one on DOM.\n\n\n    function initTooltip() {\n      if (!tooltip || !tooltip.node()) {\n        // Create new tooltip div if it doesn't exist on DOM.\n        var data = [1];\n        tooltip = d3.select(document.body).select('#' + id).data(data);\n        tooltip.enter().append('div').attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\")).attr(\"id\", id).style(\"top\", 0).style(\"left\", 0).style('opacity', 0).style('position', 'fixed').selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true).classed(nvPointerEventsClass, true);\n        tooltip.exit().remove();\n      }\n    } // Draw the tooltip onto the DOM.\n\n\n    function nvtooltip() {\n      if (!enabled) return;\n      if (!dataSeriesExists(data)) return;\n      nv.dom.write(function () {\n        initTooltip(); // Generate data and set it into tooltip.\n        // Bonus - If you override contentGenerator and return false, you can use something like\n        //         Angular, React or Knockout to bind the data for your tooltip directly to the DOM.\n\n        var newContent = contentGenerator(data, tooltip.node());\n\n        if (newContent) {\n          tooltip.node().innerHTML = newContent;\n        }\n\n        positionTooltip();\n      });\n      return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n    nvtooltip._options = Object.create({}, {\n      // simple read/write options\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      distance: {\n        get: function get() {\n          return distance;\n        },\n        set: function set(_) {\n          distance = _;\n        }\n      },\n      snapDistance: {\n        get: function get() {\n          return snapDistance;\n        },\n        set: function set(_) {\n          snapDistance = _;\n        }\n      },\n      classes: {\n        get: function get() {\n          return classes;\n        },\n        set: function set(_) {\n          classes = _;\n        }\n      },\n      enabled: {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(_) {\n          enabled = _;\n        }\n      },\n      hideDelay: {\n        get: function get() {\n          return hideDelay;\n        },\n        set: function set(_) {\n          hideDelay = _;\n        }\n      },\n      contentGenerator: {\n        get: function get() {\n          return contentGenerator;\n        },\n        set: function set(_) {\n          contentGenerator = _;\n        }\n      },\n      valueFormatter: {\n        get: function get() {\n          return valueFormatter;\n        },\n        set: function set(_) {\n          valueFormatter = _;\n        }\n      },\n      headerFormatter: {\n        get: function get() {\n          return headerFormatter;\n        },\n        set: function set(_) {\n          headerFormatter = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      headerEnabled: {\n        get: function get() {\n          return headerEnabled;\n        },\n        set: function set(_) {\n          headerEnabled = _;\n        }\n      },\n      position: {\n        get: function get() {\n          return position;\n        },\n        set: function set(_) {\n          position = _;\n        }\n      },\n      // Deprecated options\n      chartContainer: {\n        get: function get() {\n          return document.body;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.3\n          nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }\n      },\n      fixedTop: {\n        get: function get() {\n          return null;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }\n      },\n      offset: {\n        get: function get() {\n          return {\n            left: 0,\n            top: 0\n          };\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }\n      },\n      // options with extra logic\n      hidden: {\n        get: function get() {\n          return hidden;\n        },\n        set: function set(_) {\n          if (hidden != _) {\n            hidden = !!_;\n            nvtooltip();\n          }\n        }\n      },\n      data: {\n        get: function get() {\n          return data;\n        },\n        set: function set(_) {\n          // if showing a single data point, adjust data format with that\n          if (_.point) {\n            _.value = _.point.x;\n            _.series = _.series || {};\n            _.series.value = _.point.y;\n            _.series.color = _.point.color || _.series.color;\n          }\n\n          data = _;\n        }\n      },\n      // read only properties\n      node: {\n        get: function get() {\n          return tooltip.node();\n        },\n        set: function set(_) {}\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {}\n      }\n    });\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n  };\n  /*\n  Gets the browser window size\n  \n  Returns object with height and width properties\n   */\n\n\n  nv.utils.windowSize = function () {\n    // Sane defaults\n    var size = {\n      width: 640,\n      height: 480\n    }; // Most recent browsers use\n\n    if (window.innerWidth && window.innerHeight) {\n      size.width = window.innerWidth;\n      size.height = window.innerHeight;\n      return size;\n    } // IE can use depending on mode it is in\n\n\n    if (document.compatMode == 'CSS1Compat' && document.documentElement && document.documentElement.offsetWidth) {\n      size.width = document.documentElement.offsetWidth;\n      size.height = document.documentElement.offsetHeight;\n      return size;\n    } // Earlier IE uses Doc.body\n\n\n    if (document.body && document.body.offsetWidth) {\n      size.width = document.body.offsetWidth;\n      size.height = document.body.offsetHeight;\n      return size;\n    }\n\n    return size;\n  };\n  /* handle dumb browser quirks...  isinstance breaks if you use frames\n  typeof returns 'object' for null, NaN is a number, etc.\n   */\n\n\n  nv.utils.isArray = Array.isArray;\n\n  nv.utils.isObject = function (a) {\n    return a !== null && typeof a === 'object';\n  };\n\n  nv.utils.isFunction = function (a) {\n    return typeof a === 'function';\n  };\n\n  nv.utils.isDate = function (a) {\n    return toString.call(a) === '[object Date]';\n  };\n\n  nv.utils.isNumber = function (a) {\n    return !isNaN(a) && typeof a === 'number';\n  };\n  /*\n  Binds callback function to run when window is resized\n   */\n\n\n  nv.utils.windowResize = function (handler) {\n    if (window.addEventListener) {\n      window.addEventListener('resize', handler);\n    } else {\n      nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    } // return object with clear function to remove the single added callback.\n\n\n    return {\n      callback: handler,\n      clear: function clear() {\n        window.removeEventListener('resize', handler);\n      }\n    };\n  };\n  /*\n  Backwards compatible way to implement more d3-like coloring of graphs.\n  Can take in nothing, an array, or a function/scale\n  To use a normal scale, get the range and pass that because we must be able\n  to take two arguments and use the index to keep backward compatibility\n  */\n\n\n  nv.utils.getColor = function (color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n      return nv.utils.defaultColor(); //if passed an array, turn it into a color scale\n    } else if (nv.utils.isArray(color)) {\n      var color_scale = d3.scale.ordinal().range(color);\n      return function (d, i) {\n        var key = i === undefined ? d : i;\n        return d.color || color_scale(key);\n      }; //if passed a function or scale, return it, or whatever it may be\n      //external libs, such as angularjs-nvd3-directives use this\n    } else {\n      //can't really help it if someone passes rubbish as color\n      return color;\n    }\n  };\n  /*\n  Default color chooser uses a color scale of 20 colors from D3\n   https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n   */\n\n\n  nv.utils.defaultColor = function () {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n  };\n  /*\n  Returns a color function that takes the result of 'getKey' for each series and\n  looks for a corresponding color from the dictionary\n  */\n\n\n  nv.utils.customTheme = function (dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function (series) {\n      return series.key;\n    };\n\n    defaultColors = defaultColors || d3.scale.category20().range(); // start at end of default color list and walk back to index 0\n\n    var defIndex = defaultColors.length;\n    return function (series, index) {\n      var key = getKey(series);\n\n      if (nv.utils.isFunction(dictionary[key])) {\n        return dictionary[key]();\n      } else if (dictionary[key] !== undefined) {\n        return dictionary[key];\n      } else {\n        // no match in dictionary, use a default color\n        if (!defIndex) {\n          // used all the default colors, start over\n          defIndex = defaultColors.length;\n        }\n\n        defIndex = defIndex - 1;\n        return defaultColors[defIndex];\n      }\n    };\n  };\n  /*\n  From the PJAX example on d3js.org, while this is not really directly needed\n  it's a very cool method for doing pjax, I may expand upon it a little bit,\n  open to suggestions on anything that may be useful\n  */\n\n\n  nv.utils.pjax = function (links, content) {\n    var load = function load(href) {\n      d3.html(href, function (fragment) {\n        var target = d3.select(content).node();\n        target.parentNode.replaceChild(d3.select(fragment).select(content).node(), target);\n        nv.utils.pjax(links, content);\n      });\n    };\n\n    d3.selectAll(links).on(\"click\", function () {\n      history.pushState(this.href, this.textContent, this.href);\n      load(this.href);\n      d3.event.preventDefault();\n    });\n    d3.select(window).on(\"popstate\", function () {\n      if (d3.event.state) {\n        load(d3.event.state);\n      }\n    });\n  };\n  /*\n  For when we want to approximate the width in pixels for an SVG:text element.\n  Most common instance is when the element is in a display:none; container.\n  Forumla is : text.length * font-size * constant_factor\n  */\n\n\n  nv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n      var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\", \"\"), 10);\n      var textLength = svgTextElem.text().length;\n      return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n\n    return 0;\n  };\n  /*\n  Numbers that are undefined, null or NaN, convert them to zeros.\n  */\n\n\n  nv.utils.NaNtoZero = function (n) {\n    if (!nv.utils.isNumber(n) || isNaN(n) || n === null || n === Infinity || n === -Infinity) {\n      return 0;\n    }\n\n    return n;\n  };\n  /*\n  Add a way to watch for d3 transition ends to d3\n  */\n\n\n  d3.selection.prototype.watchTransition = function (renderWatch) {\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n  };\n  /*\n  Helper object to watch when d3 has rendered something\n  */\n\n\n  nv.utils.renderWatch = function (dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n      return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n\n    var renderStack = [];\n    var self = this;\n\n    this.models = function (models) {\n      models = [].slice.call(arguments, 0);\n      models.forEach(function (model) {\n        model.__rendered = false;\n\n        (function (m) {\n          m.dispatch.on('renderEnd', function (arg) {\n            m.__rendered = true;\n            self.renderEnd('model');\n          });\n        })(model);\n\n        if (renderStack.indexOf(model) < 0) {\n          renderStack.push(model);\n        }\n      });\n      return this;\n    };\n\n    this.reset = function (duration) {\n      if (duration !== undefined) {\n        _duration = duration;\n      }\n\n      renderStack = [];\n    };\n\n    this.transition = function (selection, args, duration) {\n      args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n      if (args.length > 1) {\n        duration = args.pop();\n      } else {\n        duration = _duration !== undefined ? _duration : 250;\n      }\n\n      selection.__rendered = false;\n\n      if (renderStack.indexOf(selection) < 0) {\n        renderStack.push(selection);\n      }\n\n      if (duration === 0) {\n        selection.__rendered = true;\n\n        selection.delay = function () {\n          return this;\n        };\n\n        selection.duration = function () {\n          return this;\n        };\n\n        return selection;\n      } else {\n        if (selection.length === 0) {\n          selection.__rendered = true;\n        } else if (selection.every(function (d) {\n          return !d.length;\n        })) {\n          selection.__rendered = true;\n        } else {\n          selection.__rendered = false;\n        }\n\n        var n = 0;\n        return selection.transition().duration(duration).each(function () {\n          ++n;\n        }).each('end', function (d, i) {\n          if (--n === 0) {\n            selection.__rendered = true;\n            self.renderEnd.apply(this, args);\n          }\n        });\n      }\n    };\n\n    this.renderEnd = function () {\n      if (renderStack.every(function (d) {\n        return d.__rendered;\n      })) {\n        renderStack.forEach(function (d) {\n          d.__rendered = false;\n        });\n        dispatch.renderEnd.apply(this, arguments);\n      }\n    };\n  };\n  /*\n  Takes multiple objects and combines them into the first one (dst)\n  example:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n  gives:  {a: 2, b: 3, c: 4}\n  */\n\n\n  nv.utils.deepExtend = function (dst) {\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function (source) {\n      for (var key in source) {\n        var isArray = nv.utils.isArray(dst[key]);\n        var isObject = nv.utils.isObject(dst[key]);\n        var srcObj = nv.utils.isObject(source[key]);\n\n        if (isObject && !isArray && srcObj) {\n          nv.utils.deepExtend(dst[key], source[key]);\n        } else {\n          dst[key] = source[key];\n        }\n      }\n    });\n  };\n  /*\n  state utility object, used to track d3 states in the models\n  */\n\n\n  nv.utils.state = function () {\n    if (!(this instanceof nv.utils.state)) {\n      return new nv.utils.state();\n    }\n\n    var state = {};\n\n    var _self = this;\n\n    var _setState = function _setState() {};\n\n    var _getState = function _getState() {\n      return {};\n    };\n\n    var init = null;\n    var changed = null;\n    this.dispatch = d3.dispatch('change', 'set');\n    this.dispatch.on('set', function (state) {\n      _setState(state, true);\n    });\n\n    this.getter = function (fn) {\n      _getState = fn;\n      return this;\n    };\n\n    this.setter = function (fn, callback) {\n      if (!callback) {\n        callback = function callback() {};\n      }\n\n      _setState = function _setState(state, update) {\n        fn(state);\n\n        if (update) {\n          callback();\n        }\n      };\n\n      return this;\n    };\n\n    this.init = function (state) {\n      init = init || {};\n      nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function _set() {\n      var settings = _getState();\n\n      if (JSON.stringify(settings) === JSON.stringify(state)) {\n        return false;\n      }\n\n      for (var key in settings) {\n        if (state[key] === undefined) {\n          state[key] = {};\n        }\n\n        state[key] = settings[key];\n        changed = true;\n      }\n\n      return true;\n    };\n\n    this.update = function () {\n      if (init) {\n        _setState(init, false);\n\n        init = null;\n      }\n\n      if (_set.call(this)) {\n        this.dispatch.change(state);\n      }\n    };\n  };\n  /*\n  Snippet of code you can insert into each nv.models.* to give you the ability to\n  do things like:\n  chart.options({\n    showXAxis: true,\n    tooltips: true\n  });\n  \n  To enable in the chart:\n  chart.options = nv.utils.optionsFunc.bind(chart);\n  */\n\n\n  nv.utils.optionsFunc = function (args) {\n    if (args) {\n      d3.map(args).forEach(function (key, value) {\n        if (nv.utils.isFunction(this[key])) {\n          this[key](value);\n        }\n      }.bind(this));\n    }\n\n    return this;\n  };\n  /*\n  numTicks:  requested number of ticks\n  data:  the chart data\n  \n  returns the number of ticks to actually use on X axis, based on chart data\n  to avoid duplicate ticks with the same value\n  */\n\n\n  nv.utils.calcTicksX = function (numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n\n    for (i; i < data.length; i += 1) {\n      var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n      numValues = stream_len > numValues ? stream_len : numValues;\n    }\n\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues); // make sure we don't have more ticks than values to avoid duplicates\n\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks; // make sure we have at least one tick\n\n    numTicks = numTicks < 1 ? 1 : numTicks; // make sure it's an integer\n\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n  };\n  /*\n  returns number of ticks to actually use on Y axis, based on chart data\n  */\n\n\n  nv.utils.calcTicksY = function (numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n  };\n  /*\n  Add a particular option from an options object onto chart\n  Options exposed on a chart are a getter/setter function that returns chart\n  on set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n  \n  option objects should be generated via Object.create() to provide\n  the option of manipulating data via get/set functions.\n  */\n\n\n  nv.utils.initOption = function (chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n      chart[name] = chart._calls[name];\n    } else {\n      chart[name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n        chart._overrides[name] = true;\n        chart._options[name] = _;\n        return chart;\n      }; // calling the option as _option will ignore if set by option already\n      // so nvd3 can set options internally but the stop if set manually\n\n\n      chart['_' + name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n\n        if (!chart._overrides[name]) {\n          chart._options[name] = _;\n        }\n\n        return chart;\n      };\n    }\n  };\n  /*\n  Add all options in an options object to the chart\n  */\n\n\n  nv.utils.initOptions = function (chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n\n    for (var i in ops) {\n      nv.utils.initOption(chart, ops[i]);\n    }\n  };\n  /*\n  Inherit options from a D3 object\n  d3.rebind makes calling the function on target actually call it on source\n  Also use _d3options so we can track what we inherit for documentation and chained inheritance\n  */\n\n\n  nv.utils.inheritOptionsD3 = function (target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []); // Find unique d3 options (string) and update d3options\n\n    target._d3options = (target._d3options || []).filter(function (item, i, ar) {\n      return ar.indexOf(item) === i;\n    });\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n  };\n  /*\n  Remove duplicates from an array\n  */\n\n\n  nv.utils.arrayUnique = function (a) {\n    return a.sort().filter(function (item, pos) {\n      return !pos || item != a[pos - 1];\n    });\n  };\n  /*\n  Keeps a list of custom symbols to draw from in addition to d3.svg.symbol\n  Necessary since d3 doesn't let you extend its list -_-\n  Add new symbols by doing nv.utils.symbols.set('name', function(size){...});\n  */\n\n\n  nv.utils.symbolMap = d3.map();\n  /*\n  Replaces d3.svg.symbol so that we can look both there and our own map\n   */\n\n  nv.utils.symbol = function () {\n    var type,\n        size = 64;\n\n    function symbol(d, i) {\n      var t = type.call(this, d, i);\n      var s = size.call(this, d, i);\n\n      if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n        return d3.svg.symbol().type(t).size(s)();\n      } else {\n        return nv.utils.symbolMap.get(t)(s);\n      }\n    }\n\n    symbol.type = function (_) {\n      if (!arguments.length) return type;\n      type = d3.functor(_);\n      return symbol;\n    };\n\n    symbol.size = function (_) {\n      if (!arguments.length) return size;\n      size = d3.functor(_);\n      return symbol;\n    };\n\n    return symbol;\n  };\n  /*\n  Inherit option getter/setter functions from source to target\n  d3.rebind makes calling the function on target actually call it on source\n  Also track via _inherited and _d3options so we can track what we inherit\n  for documentation generation purposes and chained inheritance\n  */\n\n\n  nv.utils.inheritOptions = function (target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args); // pass along the lists to keep track of them, don't allow duplicates\n\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n  };\n  /*\n  Runs common initialize code on the svg before the chart builds\n  */\n\n\n  nv.utils.initSVG = function (svg) {\n    svg.classed({\n      'nvd3-svg': true\n    });\n  };\n  /*\n  Sanitize and provide default for the container height.\n  */\n\n\n  nv.utils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n  };\n  /*\n  Sanitize and provide default for the container width.\n  */\n\n\n  nv.utils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n  };\n  /*\n  Calculate the available height for a chart.\n  */\n\n\n  nv.utils.availableHeight = function (height, container, margin) {\n    return Math.max(0, nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n  };\n  /*\n  Calculate the available width for a chart.\n  */\n\n\n  nv.utils.availableWidth = function (width, container, margin) {\n    return Math.max(0, nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n  };\n  /*\n  Clear any rendered chart components and display a chart's 'noData' message\n  */\n\n\n  nv.utils.noData = function (chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = noData == null ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width / 2,\n        y = margin.top + height / 2; //Remove any previously created chart components\n\n    container.selectAll('g').remove();\n    var noDataText = container.selectAll('.nv-noData').data(data);\n    noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n    noDataText.attr('x', x).attr('y', y).text(function (t) {\n      return t;\n    });\n  };\n  /*\n   Wrap long labels.\n   */\n\n\n  nv.utils.wrapTicks = function (text, width) {\n    text.each(function () {\n      var text = d3.select(this),\n          words = text.text().split(/\\s+/).reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1.1,\n          y = text.attr(\"y\"),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n      while (word = words.pop()) {\n        line.push(word);\n        tspan.text(line.join(\" \"));\n\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\" \"));\n          line = [word];\n          tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n        }\n      }\n    });\n  };\n  /*\n  Check equality of 2 array\n  */\n\n\n  nv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2) return true;\n    if (!array1 || !array2) return false; // compare lengths - can save a lot of time\n\n    if (array1.length != array2.length) return false;\n\n    for (var i = 0, l = array1.length; i < l; i++) {\n      // Check if we have nested arrays\n      if (array1[i] instanceof Array && array2[i] instanceof Array) {\n        // recurse into the nested arrays\n        if (!nv.arrayEquals(array1[i], array2[i])) return false;\n      } else if (array1[i] != array2[i]) {\n        // Warning - two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /*\n   Check if a point within an arc\n   */\n\n\n  nv.utils.pointIsInArc = function (pt, ptData, d3Arc) {\n    // Center of the arc is assumed to be 0,0\n    // (pt.x, pt.y) are assumed to be relative to the center\n    var r1 = d3Arc.innerRadius()(ptData),\n        // Note: Using the innerRadius\n    r2 = d3Arc.outerRadius()(ptData),\n        theta1 = d3Arc.startAngle()(ptData),\n        theta2 = d3Arc.endAngle()(ptData);\n    var dist = pt.x * pt.x + pt.y * pt.y,\n        angle = Math.atan2(pt.x, -pt.y); // Note: different coordinate system.\n\n    angle = angle < 0 ? angle + Math.PI * 2 : angle;\n    return r1 * r1 <= dist && dist <= r2 * r2 && theta1 <= angle && angle <= theta2;\n  };\n\n  nv.models.axis = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 75 //only used for tickLabel currently\n    ,\n        height = 60 //only used for tickLabel currently\n    ,\n        axisLabelText = null,\n        showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n    ,\n        rotateLabels = 0,\n        rotateYLabel = true,\n        staggerLabels = false,\n        isOrdinal = false,\n        ticks = null,\n        axisLabelDistance = 0,\n        fontSize = undefined,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'),\n        tickFormatMaxMin;\n    axis.scale(scale).orient('bottom').tickFormat(function (d) {\n      return d;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        if (ticks !== null) axis.ticks(ticks);else if (axis.orient() == 'top' || axis.orient() == 'bottom') axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100); //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\n        g.watchTransition(renderWatch, 'axis').call(axis);\n        scale0 = scale0 || axis.scale();\n        var fmt = axis.tickFormat();\n\n        if (fmt == null) {\n          fmt = scale0.tickFormat();\n        }\n\n        var axisLabel = g.selectAll('text.nv-axislabel').data([axisLabelText || null]);\n        axisLabel.exit().remove(); //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\n        if (fontSize !== undefined) {\n          g.selectAll('g').select(\"text\").style('font-size', fontSize);\n        }\n\n        var xLabelMargin;\n        var axisMaxMin;\n        var w;\n\n        switch (axis.orient()) {\n          case 'top':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', 0).attr('x', w / 2);\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)';\n              }).select('text').attr('dy', '-0.5em').attr('y', -axis.tickPadding()).attr('text-anchor', 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max top').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'bottom':\n            xLabelMargin = axisLabelDistance + 36;\n            var maxTextWidth = 30;\n            var textHeight = 0;\n            var xTicks = g.selectAll('g').select(\"text\");\n            var rotateLabelsRule = '';\n\n            if (rotateLabels % 360) {\n              //Reset transform on ticks so textHeight can be calculated correctly\n              xTicks.attr('transform', ''); //Calculate the longest xTick width\n\n              xTicks.each(function (d, i) {\n                var box = this.getBoundingClientRect();\n                var width = box.width;\n                textHeight = box.height;\n                if (width > maxTextWidth) maxTextWidth = width;\n              });\n              rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight / 2 + axis.tickPadding()) + ')'; //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\n              var sin = Math.abs(Math.sin(rotateLabels * Math.PI / 180));\n              xLabelMargin = (sin ? sin * maxTextWidth : maxTextWidth) + 30; //Rotate all xTicks\n\n              xTicks.attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels % 360 > 0 ? 'start' : 'end');\n            } else {\n              if (staggerLabels) {\n                xTicks.attr('transform', function (d, i) {\n                  return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')';\n                });\n              } else {\n                xTicks.attr('transform', \"translate(0,0)\");\n              }\n            }\n\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', xLabelMargin).attr('x', w / 2);\n\n            if (showMaxMin) {\n              //if (showMaxMin && !isOrdinal) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin') //.data(scale.domain())\n              .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              }).select('text').attr('dy', '.71em').attr('y', axis.tickPadding()).attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels ? rotateLabels % 360 > 0 ? 'start' : 'end' : 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max bottom').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'right':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'begin').attr('transform', rotateYLabel ? 'rotate(90)' : '').attr('y', rotateYLabel ? -Math.max(margin.right, width) + 12 - (axisLabelDistance || 0) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n            .attr('x', rotateYLabel ? d3.max(scale.range()) / 2 : axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', axis.tickPadding()).style('text-anchor', 'start').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n\n          case 'left':\n            /*\n             //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n             var yTicks = g.selectAll('g').select(\"text\");\n             yTicks.each(function(d,i){\n             var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n             if(labelPadding > width) width = labelPadding;\n             });\n             */\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'end').attr('transform', rotateYLabel ? 'rotate(-90)' : '').attr('y', rotateYLabel ? -Math.max(margin.left, width) + 25 - (axisLabelDistance || 0) : -10).attr('x', rotateYLabel ? -d3.max(scale.range()) / 2 : -axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', -axis.tickPadding()).attr('text-anchor', 'end').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n        }\n\n        axisLabel.text(function (d) {\n          return d;\n        });\n\n        if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n          //check if max and min overlap other values, if so, hide the values that overlap\n          g.selectAll('g') // the g's wrapping each tick\n          .each(function (d, i) {\n            d3.select(this).select('text').attr('opacity', 1);\n\n            if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) {\n              // 10 is assuming text height is 16... if d is 0, leave it!\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).attr('opacity', 0);\n              d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n            }\n          }); //if Max and Min = 0 only show min, Issue #281\n\n          if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n            wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n              return !i ? 1 : 0;\n            });\n          }\n        }\n\n        if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n          var maxMinRange = [];\n          wrap.selectAll('g.nv-axisMaxMin').each(function (d, i) {\n            try {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4);\n            } catch (err) {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + 4);\n            }\n          }); // the g's wrapping each tick\n\n          g.selectAll('g').each(function (d, i) {\n            if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).remove();else d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n            }\n          });\n        } //Highlight zero tick line\n\n\n        g.selectAll('.tick').filter(function (d) {\n          /*\n          The filter needs to return only ticks at or near zero.\n          Numbers like 0.00001 need to count as zero as well,\n          and the arithmetic trick below solves that.\n          */\n          return !parseFloat(Math.round(d * 100000) / 1000000) && d !== undefined;\n        }).classed('zero', true); //store old scales for use in transitions on update\n\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('axis immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      axisLabelDistance: {\n        get: function get() {\n          return axisLabelDistance;\n        },\n        set: function set(_) {\n          axisLabelDistance = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      rotateYLabel: {\n        get: function get() {\n          return rotateYLabel;\n        },\n        set: function set(_) {\n          rotateYLabel = _;\n        }\n      },\n      showMaxMin: {\n        get: function get() {\n          return showMaxMin;\n        },\n        set: function set(_) {\n          showMaxMin = _;\n        }\n      },\n      axisLabel: {\n        get: function get() {\n          return axisLabelText;\n        },\n        set: function set(_) {\n          axisLabelText = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      fontSize: {\n        get: function get() {\n          return fontSize;\n        },\n        set: function set(_) {\n          fontSize = _;\n        }\n      },\n      tickFormatMaxMin: {\n        get: function get() {\n          return tickFormatMaxMin;\n        },\n        set: function set(_) {\n          tickFormatMaxMin = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      scale: {\n        get: function get() {\n          return scale;\n        },\n        set: function set(_) {\n          scale = _;\n          axis.scale(scale);\n          isOrdinal = typeof scale.rangeBands === 'function';\n          nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n    return chart;\n  };\n\n  nv.models.boxPlot = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000),\n        // Create semi-unique ID in case user doesn't select one\n    xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.label;\n    },\n        // Default data model selectors.\n    getQ1 = function getQ1(d) {\n      return d.values.Q1;\n    },\n        getQ2 = function getQ2(d) {\n      return d.values.Q2;\n    },\n        getQ3 = function getQ3(d) {\n      return d.values.Q3;\n    },\n        getWl = function getWl(d) {\n      return d.values.whisker_low;\n    },\n        getWh = function getWh(d) {\n      return d.values.whisker_high;\n    },\n        getColor = function getColor(d) {\n      return d.color;\n    },\n        getOlItems = function getOlItems(d) {\n      return d.values.outliers;\n    },\n        getOlValue = function getOlValue(d, i, j) {\n      return d;\n    },\n        getOlLabel = function getOlLabel(d, i, j) {\n      return d;\n    },\n        getOlColor = function getOlColor(d, i, j) {\n      return undefined;\n    },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain,\n        xRange,\n        yDomain,\n        yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        xScale.domain(xDomain || data.map(function (d, i) {\n          return getX(d, i);\n        })).rangeBands(xRange || [0, availableWidth], 0.1); // if we know yDomain, no need to calculate\n\n        var yData = [];\n\n        if (!yDomain) {\n          // (y-range is based on quartiles, whiskers and outliers)\n          var values = [],\n              yMin,\n              yMax;\n          data.forEach(function (d, i) {\n            var q1 = getQ1(d),\n                q3 = getQ3(d),\n                wl = getWl(d),\n                wh = getWh(d);\n            var olItems = getOlItems(d);\n\n            if (olItems) {\n              olItems.forEach(function (e, i) {\n                values.push(getOlValue(e, i, undefined));\n              });\n            }\n\n            if (wl) {\n              values.push(wl);\n            }\n\n            if (q1) {\n              values.push(q1);\n            }\n\n            if (q3) {\n              values.push(q3);\n            }\n\n            if (wh) {\n              values.push(wh);\n            }\n          });\n          yMin = d3.min(values);\n          yMax = d3.max(values);\n          yData = [yMin, yMax];\n        }\n\n        yScale.domain(yDomain || yData);\n        yScale.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        xScale0 = xScale0 || xScale;\n        yScale0 = yScale0 || yScale.copy().range([yScale(0), yScale(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var boxplots = wrap.selectAll('.nv-boxplot').data(function (d) {\n          return d;\n        });\n        var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        boxplots.attr('class', 'nv-boxplot').attr('transform', function (d, i, j) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        boxplots.watchTransition(renderWatch, 'nv-boxplot: boxplots').style('stroke-opacity', 1).style('fill-opacity', 0.75).delay(function (d, i) {\n          return i * duration / data.length;\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        });\n        boxplots.exit().remove(); // ----- add the SVG elements for each boxPlot -----\n        // conditionally append whisker lines\n\n        boxEnter.each(function (d, i) {\n          var box = d3.select(this);\n          [getWl, getWh].forEach(function (f) {\n            if (f(d) !== undefined && f(d) !== null) {\n              var key = f === getWl ? 'low' : 'high';\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n            }\n          });\n        });\n\n        var box_width = function box_width() {\n          return maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9);\n        };\n\n        var box_left = function box_left() {\n          return xScale.rangeBand() * 0.45 - box_width() / 2;\n        };\n\n        var box_right = function box_right() {\n          return xScale.rangeBand() * 0.45 + box_width() / 2;\n        }; // update whisker lines and ticks\n\n\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          var endpoint = f === getWl ? getQ1 : getQ3;\n          boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', xScale.rangeBand() * 0.45).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', xScale.rangeBand() * 0.45).attr('y2', function (d, i) {\n            return yScale(endpoint(d));\n          });\n          boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', box_left).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', box_right).attr('y2', function (d, i) {\n            return yScale(f(d));\n          });\n        });\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          boxEnter.selectAll('.nv-boxplot-' + key).on('mouseover', function (d, i, j) {\n            d3.select(this).classed('hover', true);\n            dispatch.elementMouseover({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mouseout', function (d, i, j) {\n            d3.select(this).classed('hover', false);\n            dispatch.elementMouseout({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mousemove', function (d, i) {\n            dispatch.elementMousemove({\n              e: d3.event\n            });\n          });\n        }); // boxes\n\n        boxEnter.append('rect').attr('class', 'nv-boxplot-box') // tooltip events\n        .on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        }); // box transitions\n\n        boxplots.select('rect.nv-boxplot-box').watchTransition(renderWatch, 'nv-boxplot: boxes').attr('y', function (d, i) {\n          return yScale(getQ3(d));\n        }).attr('width', box_width).attr('x', box_left).attr('height', function (d, i) {\n          return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1;\n        }).style('fill', function (d, i) {\n          return getColor(d) || color(d, i);\n        }).style('stroke', function (d, i) {\n          return getColor(d) || color(d, i);\n        }); // median line\n\n        boxEnter.append('line').attr('class', 'nv-boxplot-median');\n        boxplots.select('line.nv-boxplot-median').watchTransition(renderWatch, 'nv-boxplot: boxplots line').attr('x1', box_left).attr('y1', function (d, i) {\n          return yScale(getQ2(d));\n        }).attr('x2', box_right).attr('y2', function (d, i) {\n          return yScale(getQ2(d));\n        }); // outliers\n\n        var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function (d) {\n          return getOlItems(d) || [];\n        });\n        outliers.enter().append('circle').style('fill', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('stroke', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('z-index', 9000).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        });\n        outliers.attr('class', 'nv-boxplot-outlier');\n        outliers.watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier').attr('cx', xScale.rangeBand() * 0.45).attr('cy', function (d, i, j) {\n          return yScale(getOlValue(d, i, j));\n        }).attr('r', '3');\n        outliers.exit().remove(); //store old scales for use in transitions on update\n\n        xScale0 = xScale.copy();\n        yScale0 = yScale.copy();\n      });\n      renderWatch.renderEnd('nv-boxplot immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      maxBoxWidth: {\n        get: function get() {\n          return maxBoxWidth;\n        },\n        set: function set(_) {\n          maxBoxWidth = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      q1: {\n        get: function get() {\n          return getQ1;\n        },\n        set: function set(_) {\n          getQ1 = _;\n        }\n      },\n      q2: {\n        get: function get() {\n          return getQ2;\n        },\n        set: function set(_) {\n          getQ2 = _;\n        }\n      },\n      q3: {\n        get: function get() {\n          return getQ3;\n        },\n        set: function set(_) {\n          getQ3 = _;\n        }\n      },\n      wl: {\n        get: function get() {\n          return getWl;\n        },\n        set: function set(_) {\n          getWl = _;\n        }\n      },\n      wh: {\n        get: function get() {\n          return getWh;\n        },\n        set: function set(_) {\n          getWh = _;\n        }\n      },\n      itemColor: {\n        get: function get() {\n          return getColor;\n        },\n        set: function set(_) {\n          getColor = _;\n        }\n      },\n      outliers: {\n        get: function get() {\n          return getOlItems;\n        },\n        set: function set(_) {\n          getOlItems = _;\n        }\n      },\n      outlierValue: {\n        get: function get() {\n          return getOlValue;\n        },\n        set: function set(_) {\n          getOlValue = _;\n        }\n      },\n      outlierLabel: {\n        get: function get() {\n          return getOlLabel;\n        },\n        set: function set(_) {\n          getOlLabel = _;\n        }\n      },\n      outlierColor: {\n        get: function get() {\n          return getOlColor;\n        },\n        set: function set(_) {\n          getOlColor = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return xScale;\n        },\n        set: function set(_) {\n          xScale = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return yScale;\n        },\n        set: function set(_) {\n          yScale = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n      y: {\n        get: function get() {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n          return {};\n        },\n        set: function set(_) {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.boxPlotChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x,\n        y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(boxplot);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = (width || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n        var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n        // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\n        if (!data || !data.length) {\n          var noDataText = container.selectAll('.nv-noData').data([noData]);\n          noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n          noDataText.attr('x', margin.left + availableWidth / 2).attr('y', margin.top + availableHeight / 2).text(function (d) {\n            return d;\n          });\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = boxplot.xScale();\n        y = boxplot.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(' + availableWidth + ',0)');\n        } // Main Chart Component(s)\n\n\n        boxplot.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(boxplot);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + boxplot.id()).append('rect');\n        g.select('#nv-x-label-clip-' + boxplot.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x).ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')';\n            });\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y).ticks(Math.floor(availableHeight / 36)) // can't use nv.utils.calcTicksY with Object data\n          .tickSize(-availableWidth, 0);\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select('.nv-zeroLine line').attr('x1', 0).attr('x2', availableWidth).attr('y1', y(0)).attr('y2', y(0)); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n      });\n      renderWatch.renderEnd('nv-boxplot chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.data(evt).hidden(false);\n    });\n    boxplot.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.data(evt).hidden(true);\n    });\n    boxplot.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      tooltipContent: {\n        get: function get() {\n          return tooltip;\n        },\n        set: function set(_) {\n          tooltip = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          boxplot.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          boxplot.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bullet = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        markerLines = function markerLines(d) {\n      return d.markerLines ? d.markerLines : [0];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        rangeLabels = function rangeLabels(d) {\n      return d.rangeLabels ? d.rangeLabels : [];\n    },\n        markerLabels = function markerLabels(d) {\n      return d.markerLabels ? d.markerLabels : [];\n    },\n        markerLineLabels = function markerLineLabels(d) {\n      return d.markerLineLabels ? d.markerLineLabels : [];\n    },\n        measureLabels = function measureLabels(d) {\n      return d.measureLabels ? d.measureLabels : [];\n    },\n        forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        width = 380,\n        height = 30,\n        container = null,\n        tickFormat = null,\n        color = nv.utils.getColor(['#1f77b4']),\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove'),\n        defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"],\n        legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"],\n        duration = 1000;\n\n    function sortLabels(labels, values) {\n      var lz = labels.slice();\n      labels.sort(function (a, b) {\n        var iA = lz.indexOf(a);\n        var iB = lz.indexOf(b);\n        return d3.descending(values[iA], values[iB]);\n      });\n    }\n\n    ;\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var rangez = ranges.call(this, d, i).slice(),\n            markerz = markers.call(this, d, i).slice(),\n            markerLinez = markerLines.call(this, d, i).slice(),\n            measurez = measures.call(this, d, i).slice(),\n            rangeLabelz = rangeLabels.call(this, d, i).slice(),\n            markerLabelz = markerLabels.call(this, d, i).slice(),\n            markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n            measureLabelz = measureLabels.call(this, d, i).slice(); // Sort labels according to their sorted values\n\n        sortLabels(rangeLabelz, rangez);\n        sortLabels(markerLabelz, markerz);\n        sortLabels(markerLineLabelz, markerLinez);\n        sortLabels(measureLabelz, measurez); // sort values descending\n\n        rangez.sort(d3.descending);\n        markerz.sort(d3.descending);\n        markerLinez.sort(d3.descending);\n        measurez.sort(d3.descending); // Setup Scales\n        // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain(d3.extent(d3.merge([forceX, rangez]))).range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n        var rangeMin = d3.min(rangez),\n            //rangez[2]\n        rangeMax = d3.max(rangez),\n            //rangez[0]\n        rangeAvg = rangez[1]; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var rangeClassNames = 'nv-range nv-range' + i;\n\n          if (i <= 2) {\n            rangeClassNames = rangeClassNames + ' nv-range' + legacyRangeClassNames[i];\n          }\n\n          gEnter.append('rect').attr('class', rangeClassNames);\n        }\n\n        gEnter.append('rect').attr('class', 'nv-measure');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var xp0 = function xp0(d) {\n          return d < 0 ? x0(d) : x0(0);\n        },\n            xp1 = function xp1(d) {\n          return d < 0 ? x1(d) : x1(0);\n        };\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var range = rangez[i];\n          g.select('rect.nv-range' + i).datum(range).attr('height', availableHeight).transition().duration(duration).attr('width', w1(range)).attr('x', xp1(range));\n        }\n\n        g.select('rect.nv-measure').style('fill', color).attr('height', availableHeight / 3).attr('y', availableHeight / 3).on('mouseover', function () {\n          dispatch.elementMouseover({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function () {\n          dispatch.elementMouseout({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).transition().duration(duration).attr('width', measurez < 0 ? x1(0) - x1(measurez[0]) : x1(measurez[0]) - x1(0)).attr('x', xp1(measurez));\n        var h3 = availableHeight / 6;\n        var markerData = markerz.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"path.nv-markerTriangle\").data(markerData).enter().append('path').attr('class', 'nv-markerTriangle').attr('d', 'M0,' + h3 + 'L' + h3 + ',' + -h3 + ' ' + -h3 + ',' + -h3 + 'Z').on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"path.nv-markerTriangle\").data(markerData).transition().duration(duration).attr('transform', function (d) {\n          return 'translate(' + x1(d.value) + ',' + availableHeight / 2 + ')';\n        });\n        var markerLinesData = markerLinez.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLineLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"line.nv-markerLine\").data(markerLinesData).enter().append('line').attr('cursor', '').attr('class', 'nv-markerLine').attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('y1', '2').attr('x2', function (d) {\n          return x1(d.value);\n        }).attr('y2', availableHeight - 2).on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"line.nv-markerLine\").data(markerLinesData).transition().duration(duration).attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('x2', function (d) {\n          return x1(d.value);\n        });\n        wrap.selectAll('.nv-range').on('mouseover', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseover({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseout({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bulletChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        margin = {\n      top: 5,\n      right: 40,\n      bottom: 20,\n      left: 120\n    },\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        width = null,\n        height = 55,\n        tickFormat = null,\n        ticks = null,\n        noData = null,\n        dispatch = d3.dispatch();\n\n    tooltip.duration(0).headerEnabled(false);\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom,\n            that = this;\n\n        chart.update = function () {\n          chart(selection);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!d || !ranges.call(this, d, i)) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n            markerz = markers.call(this, d, i).slice().sort(d3.descending),\n            measurez = measures.call(this, d, i).slice().sort(d3.descending); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bulletWrap');\n        gEnter.append('g').attr('class', 'nv-titles');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain([0, Math.max(rangez[0], markerz[0] || 0, measurez[0])]) // TODO: need to allow forceX and forceY, and xDomain, yDomain\n        .range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var title = gEnter.select('.nv-titles').append('g').attr('text-anchor', 'end').attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n        title.append('text').attr('class', 'nv-title').text(function (d) {\n          return d.title;\n        });\n        title.append('text').attr('class', 'nv-subtitle').attr('dy', '1em').text(function (d) {\n          return d.subtitle;\n        });\n        bullet.width(availableWidth).height(availableHeight);\n        var bulletWrap = g.select('.nv-bulletWrap');\n        d3.transition(bulletWrap).call(bullet); // Compute the tick format.\n\n        var format = tickFormat || x1.tickFormat(availableWidth / 100); // Update the tick groups.\n\n        var tick = g.selectAll('g.nv-tick').data(x1.ticks(ticks ? ticks : availableWidth / 50), function (d) {\n          return this.textContent || format(d);\n        }); // Initialize the ticks with the old scale, x0.\n\n        var tickEnter = tick.enter().append('g').attr('class', 'nv-tick').attr('transform', function (d) {\n          return 'translate(' + x0(d) + ',0)';\n        }).style('opacity', 1e-6);\n        tickEnter.append('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickEnter.append('text').attr('text-anchor', 'middle').attr('dy', '1em').attr('y', availableHeight * 7 / 6).text(format); // Transition the updating ticks to the new scale, x1.\n\n        var tickUpdate = d3.transition(tick).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1);\n        tickUpdate.select('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickUpdate.select('text').attr('y', availableHeight * 7 / 6); // Transition the exiting ticks to the new scale, x1.\n\n        d3.transition(tick.exit()).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1e-6).remove();\n      });\n      d3.timer.flush();\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bullet.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: evt.label,\n        value: evt.value,\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bullet.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bullet.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.candlestickBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Width of the candlestick bars.\n\n        var barWidth = availableWidth / data[0].values.length * .45; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        var tickGroups = ticks.enter().append('g'); // The colors are currently controlled by CSS.\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        var lines = tickGroups.append('line').attr('class', 'nv-candlestick-lines').attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        var rects = tickGroups.append('rect').attr('class', 'nv-candlestick-rects nv-bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n        ticks.select('.nv-candlestick-lines').transition().attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        ticks.select('.nv-candlestick-rects').transition().attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-candlestickBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.cumulativeLineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        showControls = true,\n        useInteractiveGuideline = false,\n        rescaleY = true,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        id = lines.id(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        average = function average(d) {\n      return d.average;\n    },\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250,\n        duration = 250,\n        noErrorCheck = false //if set to TRUE, will bypass an error check in the indexify function.\n    ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear(),\n        index = {\n      i: 0,\n      x: 0\n    },\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        currentYDomain;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          index: index.i,\n          rescaleY: rescaleY\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.index !== undefined) index.i = state.index;\n        if (state.rescaleY !== undefined) rescaleY = state.rescaleY;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        container.classed('nv-chart-' + id, true);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        }\n\n        var indexDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd);\n\n        function dragStart(d, i) {\n          d3.select(chart.container).style('cursor', 'ew-resize');\n        }\n\n        function dragMove(d, i) {\n          index.x = d3.event.x;\n          index.i = Math.round(dx.invert(index.x));\n          updateZero();\n        }\n\n        function dragEnd(d, i) {\n          d3.select(chart.container).style('cursor', 'auto'); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = lines.xScale();\n        y = lines.yScale();\n        dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n        .range([0, availableWidth]).clamp(true);\n        var data = indexify(index.i, data); // initialize the starting yDomain for the not-rescale case after indexify (to have calculated point.display)\n\n        if (typeof currentYDomain === \"undefined\") {\n          currentYDomain = getCurrentYDomain(data);\n        }\n\n        if (!rescaleY) {\n          lines.yDomain(currentYDomain);\n          lines.clipEdge(true);\n        } else {\n          lines.yDomain(null);\n        } // Setup containers and skeleton of chart\n\n\n        var interactivePointerEvents = useInteractiveGuideline ? \"none\" : \"all\";\n        var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-background');\n        gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\", interactivePointerEvents);\n        gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: 'Re-scale y-axis',\n            disabled: !rescaleY\n          }];\n          controls.width(140).color(['#444', '#444', '#444']).rightAlign(false).margin({\n            top: 5,\n            right: 0,\n            bottom: 5,\n            left: 20\n          });\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Show error if index point value is 0 (division by zero avoided)\n\n\n        var tempDisabled = data.filter(function (d) {\n          return d.tempDisabled;\n        });\n        wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\n        if (tempDisabled.length) {\n          wrap.append('text').attr('class', 'tempDisabled').attr('x', availableWidth / 2).attr('y', '-.71em').style('text-anchor', 'end').text(tempDisabled.map(function (d) {\n            return d.key;\n          }).join(', ') + ' values cannot be calculated for this time period.');\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        gEnter.select('.nv-background').append('rect');\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines //.x(function(d) { return d.x })\n        .y(function (d) {\n          return d.display.y;\n        }).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].tempDisabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled && !d.tempDisabled;\n        }));\n        linesWrap.call(lines); //Store a series index number in the data array.\n\n        data.forEach(function (d, i) {\n          d.seriesIndex = i;\n        });\n        var avgLineData = data.filter(function (d) {\n          return !d.disabled && !!average(d);\n        });\n        var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\").data(avgLineData, function (d) {\n          return d.key;\n        });\n\n        var getAvgLineY = function getAvgLineY(d) {\n          //If average lines go off the svg element, clamp them to the svg bounds.\n          var yVal = y(average(d));\n          if (yVal < 0) return 0;\n          if (yVal > availableHeight) return availableHeight;\n          return yVal;\n        };\n\n        avgLines.enter().append('line').style('stroke-width', 2).style('stroke-dasharray', '10,10').style('stroke', function (d, i) {\n          return lines.color()(d, d.seriesIndex);\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.style('stroke-opacity', function (d) {\n          //If average lines go offscreen, make them transparent\n          var yVal = y(average(d));\n          if (yVal < 0 || yVal > availableHeight) return 0;\n          return 1;\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.exit().remove(); //Create index line\n\n        var indexLine = linesWrap.selectAll('.nv-indexLine').data([index]);\n        indexLine.enter().append('rect').attr('class', 'nv-indexLine').attr('width', 3).attr('x', -2).attr('fill', 'red').attr('fill-opacity', .5).style(\"pointer-events\", \"all\").call(indexDrag);\n        indexLine.attr('transform', function (d) {\n          return 'translate(' + dx(d.i) + ',0)';\n        }).attr('height', availableHeight); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 70, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        function updateZero() {\n          indexLine.data([index]); //When dragging the index line, turn off line transitions.\n          // Then turn them back on when done dragging.\n\n          var oldDuration = chart.duration();\n          chart.duration(0);\n          chart.update();\n          chart.duration(oldDuration);\n        }\n\n        g.select('.nv-background rect').on('click', function () {\n          index.x = d3.mouse(this)[0];\n          index.i = Math.round(dx.invert(index.x)); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        lines.dispatch.on('elementClick', function (e) {\n          index.i = e.pointIndex;\n          index.x = dx(index.i); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n          rescaleY = !d.disabled;\n          state.rescaleY = rescaleY;\n\n          if (!rescaleY) {\n            currentYDomain = getCurrentYDomain(data); // rescale is turned off, so set the currentYDomain\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !(series.disabled || series.tempDisabled);\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            lines.highlightPoint(i, pointIndex, true);\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex)\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex), pointIndex);\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.index !== 'undefined') {\n            index.i = e.index;\n            index.x = dx(index.i);\n            state.index = e.index;\n            indexLine.data([index]);\n          }\n\n          if (typeof e.rescaleY !== 'undefined') {\n            rescaleY = e.rescaleY;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('cumulativeLineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var point = {\n        x: chart.x()(evt.point),\n        y: chart.y()(evt.point),\n        color: evt.point.color\n      };\n      evt.point = point;\n      tooltip.data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n\n    function indexify(idx, data) {\n      if (!indexifyYGetter) indexifyYGetter = lines.y();\n      return data.map(function (line, i) {\n        if (!line.values) {\n          return line;\n        }\n\n        var indexValue = line.values[idx];\n\n        if (indexValue == null) {\n          return line;\n        }\n\n        var v = indexifyYGetter(indexValue, idx); // avoid divide by zero\n\n        if (Math.abs(v) < 0.00001 && !noErrorCheck) {\n          line.tempDisabled = true;\n          return line;\n        }\n\n        line.tempDisabled = false;\n        line.values = line.values.map(function (point, pointIndex) {\n          point.display = {\n            'y': (indexifyYGetter(point, pointIndex) - v) / v\n          };\n          return point;\n        });\n        return line;\n      });\n    }\n\n    function getCurrentYDomain(data) {\n      var seriesDomains = data.filter(function (series) {\n        return !(series.disabled || series.tempDisabled);\n      }).map(function (series, i) {\n        return d3.extent(series.values, function (d) {\n          return d.display.y;\n        });\n      });\n      return [d3.min(seriesDomains, function (d) {\n        return d[0];\n      }), d3.max(seriesDomains, function (d) {\n        return d[1];\n      })];\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      average: {\n        get: function get() {\n          return average;\n        },\n        set: function set(_) {\n          average = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noErrorCheck: {\n        get: function get() {\n          return noErrorCheck;\n        },\n        set: function set(_) {\n          noErrorCheck = _;\n        }\n      },\n      // options that require extra logic in the setter\n      rescaleY: {\n        get: function get() {\n          return rescaleY;\n        },\n        set: function set(_) {\n          rescaleY = _;\n          chart.state.rescaleY = _; // also update state\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n            chart.useVoronoi(false);\n          }\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          lines.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating by adding necessary features to multiBar model\n\n\n  nv.models.discreteBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        showValues = false,\n        valueFormat = d3.format(',.2f'),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        rectClass = 'discreteBar',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], .1);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return d.y;\n        }).concat(forceY))); // If showValues, pad the Y axis range to account for label height\n\n        if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);else y.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        x0 = x0 || x;\n        y0 = y0 || y.copy().range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'discreteBar: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'discreteBar: groups').style('stroke-opacity', 1).style('fill-opacity', .75);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + (x(getX(d, i)) + x.rangeBand() * .05) + ', ' + y(0) + ')';\n        }).on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        barsEnter.append('rect').attr('height', 0).attr('width', x.rangeBand() * .9 / data.length);\n\n        if (showValues) {\n          barsEnter.append('text').attr('text-anchor', 'middle');\n          bars.select('text').text(function (d, i) {\n            return valueFormat(getY(d, i));\n          }).watchTransition(renderWatch, 'discreteBar: bars text').attr('x', x.rangeBand() * .9 / 2).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(getY(d, i)) - y(0) + 12 : -4;\n          });\n        } else {\n          bars.selectAll('text').remove();\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).style('fill', function (d, i) {\n          return d.color || color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).select('rect').attr('class', rectClass).watchTransition(renderWatch, 'discreteBar: bars rect').attr('width', x.rangeBand() * .9 / data.length);\n        bars.watchTransition(renderWatch, 'discreteBar: bars') //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n        .attr('transform', function (d, i) {\n          var left = x(getX(d, i)) + x.rangeBand() * .05,\n              top = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : //make 1 px positive bars show up above y=0\n          y(getY(d, i));\n          return 'translate(' + left + ', ' + top + ')';\n        }).select('rect').attr('height', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('discreteBar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      rectClass: {\n        get: function get() {\n          return rectClass;\n        },\n        set: function set(_) {\n          rectClass = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.discreteBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x,\n        y,\n        noData = null,\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).keyFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(discretebar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = discretebar.xScale();\n        y = discretebar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        discretebar.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(discretebar);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + discretebar.id()).append('rect');\n        g.select('#nv-x-label-clip-' + discretebar.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + (y.range()[0] + (discretebar.showValues() && y.domain()[0] < 0 ? 16 : 0)) + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')';\n            });\n          }\n\n          if (rotateLabels) {\n            xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", 0).attr(\"x2\", rightAlignYAxis ? -availableWidth : availableWidth).attr(\"y1\", y(0)).attr(\"y2\", y(0));\n      });\n      renderWatch.renderEnd('discreteBar chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    discretebar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    discretebar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          discretebar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          discretebar.color(color);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.distribution = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 400 //technically width or height depending on x or y....\n    ,\n        size = 8,\n        axis = 'x' // 'x' or 'y'... horizontal or vertical\n    ,\n        getData = function getData(d) {\n      return d[axis];\n    } // defaults d.x or d.y\n    ,\n        color = nv.utils.defaultColor(),\n        scale = d3.scale.linear(),\n        domain,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n            naxis = axis == 'x' ? 'y' : 'x',\n            container = d3.select(this);\n        nv.utils.initSVG(container); //------------------------------------------------------------\n        // Setup Scales\n\n        scale0 = scale0 || scale; //------------------------------------------------------------\n        //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-distribution').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //------------------------------------------------------------\n\n        var distWrap = g.selectAll('g.nv-dist').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        distWrap.enter().append('g');\n        distWrap.attr('class', function (d, i) {\n          return 'nv-dist nv-series-' + i;\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        var dist = distWrap.selectAll('line.nv-dist' + axis).data(function (d) {\n          return d.values;\n        });\n        dist.enter().append('line').attr(axis + '1', function (d, i) {\n          return scale0(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale0(getData(d, i));\n        });\n        renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        }).style('stroke-opacity', 0).remove();\n        dist.attr('class', function (d, i) {\n          return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i;\n        }).attr(naxis + '1', 0).attr(naxis + '2', size);\n        renderWatch.transition(dist, 'dist') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        });\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('distribution immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n      margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return chart;\n    };\n\n    chart.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return chart;\n    };\n\n    chart.axis = function (_) {\n      if (!arguments.length) return axis;\n      axis = _;\n      return chart;\n    };\n\n    chart.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return chart;\n    };\n\n    chart.getData = function (_) {\n      if (!arguments.length) return getData;\n      getData = d3.functor(_);\n      return chart;\n    };\n\n    chart.scale = function (_) {\n      if (!arguments.length) return scale;\n      scale = _;\n      return chart;\n    };\n\n    chart.color = function (_) {\n      if (!arguments.length) return color;\n      color = nv.utils.getColor(_);\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      return chart;\n    }; //============================================================\n\n\n    return chart;\n  };\n\n  nv.models.focus = function (content) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        brush = d3.svg.brush();\n    var margin = {\n      top: 10,\n      right: 0,\n      bottom: 30,\n      left: 0\n    },\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = 70,\n        showXAxis = true,\n        showYAxis = false,\n        rightAlignYAxis = false,\n        ticks = null,\n        x,\n        y,\n        brushExtent = null,\n        duration = 250,\n        dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd'),\n        syncBrushing = true;\n    content.interactive(false);\n    content.pointActive(function (d) {\n      return false;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(content);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom;\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this; // Setup Scales\n\n        x = content.xScale();\n        y = content.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-focus').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        gEnter.append('g').attr('class', 'nv-background').append('rect');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-contentWrap');\n        gEnter.append('g').attr('class', 'nv-brushBackground');\n        gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        }\n\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        content.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var contentWrap = g.select('.nv-contentWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        d3.transition(contentWrap).call(content); // Setup Brush\n\n        brush.x(x).on('brush', function () {\n          onBrush(syncBrushing);\n        });\n        brush.on('brushend', function () {\n          if (!syncBrushing) {\n            dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n          }\n        });\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect').attr('height', availableHeight);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n        onBrush(true);\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          d3.transition(g.select('.nv-y.nv-axis')).call(yAxis);\n        }\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')'); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x(d[0]) - x.range()[0],\n                rightWidth = availableWidth - x(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush(shouldDispatch) {\n          brushExtent = brush.empty() ? null : brush.extent();\n          var extent = brush.empty() ? x.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG();\n\n          if (shouldDispatch) {\n            dispatch.onBrush(extent);\n          }\n        }\n      });\n      renderWatch.renderEnd('focus immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      syncBrushing: {\n        get: function get() {\n          return syncBrushing;\n        },\n        set: function set(_) {\n          syncBrushing = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          content.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          content.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return content.interpolate();\n        },\n        set: function set(_) {\n          content.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return content.x();\n        },\n        set: function set(_) {\n          content.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return content.y();\n        },\n        set: function set(_) {\n          content.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.forceDirectedGraph = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        dispatch = d3.dispatch('renderEnd'),\n        color = nv.utils.getColor(['#000']),\n        tooltip = nv.models.tooltip(),\n        noData = null // Force directed graph specific parameters [default values]\n    ,\n        linkStrength = 0.1,\n        friction = 0.9,\n        linkDist = 30,\n        charge = -120,\n        gravity = 0.1,\n        theta = 0.8,\n        alpha = 0.1,\n        radius = 5 // These functions allow to add extra attributes to ndes and links\n    ,\n        nodeExtras = function nodeExtras(nodes) {\n      /* Do nothing */\n    },\n        linkExtras = function linkExtras(links) {\n      /* Do nothing */\n    },\n        getX = d3.functor(0.0),\n        getY = d3.functor(0.0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        container.attr(\"width\", availableWidth).attr(\"height\", availableHeight); // Display No Data message if there's nothing to show.\n\n        if (!data || !data.links || !data.nodes) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        container.selectAll('*').remove(); // Collect names of all fields in the nodes\n\n        var nodeFieldSet = new Set();\n        data.nodes.forEach(function (node) {\n          var keys = Object.keys(node);\n          keys.forEach(function (key) {\n            nodeFieldSet.add(key);\n          });\n        });\n        var force = d3.layout.force().nodes(data.nodes).links(data.links).size([availableWidth, availableHeight]).linkStrength(linkStrength).friction(friction).linkDistance(linkDist).charge(charge).gravity(gravity).theta(theta).alpha(alpha).start();\n        var link = container.selectAll(\".link\").data(data.links).enter().append(\"line\").attr(\"class\", \"nv-force-link\").style(\"stroke-width\", function (d) {\n          return Math.sqrt(d.value);\n        });\n        var node = container.selectAll(\".node\").data(data.nodes).enter().append(\"g\").attr(\"class\", \"nv-force-node\").call(force.drag);\n        node.append(\"circle\").attr(\"r\", radius).style(\"fill\", function (d) {\n          return color(d);\n        }).on(\"mouseover\", function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.py);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.px); // Add 'series' object to\n\n          var nodeColor = color(evt);\n          evt.series = [];\n          nodeFieldSet.forEach(function (field) {\n            evt.series.push({\n              color: nodeColor,\n              key: field,\n              value: evt[field]\n            });\n          });\n          tooltip.data(evt).hidden(false);\n        }).on(\"mouseout\", function (d) {\n          tooltip.hidden(true);\n        });\n        tooltip.headerFormatter(function (d) {\n          return \"Node\";\n        }); // Apply extra attributes to nodes and links (if any)\n\n        linkExtras(link);\n        nodeExtras(node);\n        force.on(\"tick\", function () {\n          link.attr(\"x1\", function (d) {\n            return d.source.x;\n          }).attr(\"y1\", function (d) {\n            return d.source.y;\n          }).attr(\"x2\", function (d) {\n            return d.target.x;\n          }).attr(\"y2\", function (d) {\n            return d.target.y;\n          });\n          node.attr(\"transform\", function (d) {\n            return \"translate(\" + d.x + \", \" + d.y + \")\";\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      // Force directed graph specific parameters\n      linkStrength: {\n        get: function get() {\n          return linkStrength;\n        },\n        set: function set(_) {\n          linkStrength = _;\n        }\n      },\n      friction: {\n        get: function get() {\n          return friction;\n        },\n        set: function set(_) {\n          friction = _;\n        }\n      },\n      linkDist: {\n        get: function get() {\n          return linkDist;\n        },\n        set: function set(_) {\n          linkDist = _;\n        }\n      },\n      charge: {\n        get: function get() {\n          return charge;\n        },\n        set: function set(_) {\n          charge = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      theta: {\n        get: function get() {\n          return theta;\n        },\n        set: function set(_) {\n          theta = _;\n        }\n      },\n      alpha: {\n        get: function get() {\n          return alpha;\n        },\n        set: function set(_) {\n          alpha = _;\n        }\n      },\n      radius: {\n        get: function get() {\n          return radius;\n        },\n        set: function set(_) {\n          radius = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nodeExtras: {\n        get: function get() {\n          return nodeExtras;\n        },\n        set: function set(_) {\n          nodeExtras = _;\n        }\n      },\n      linkExtras: {\n        get: function get() {\n          return linkExtras;\n        },\n        set: function set(_) {\n          linkExtras = _;\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.furiousLegend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 28 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('circle');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('rect');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (vers == 'furious' && expanded) return;\n          dispatch.legendDblclick(d, i);\n\n          if (updateState) {\n            // make sure we re-get data in case it was modified\n            var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n            // is to set all other series' to false, and make the double clicked series enabled.\n\n            data.forEach(function (series) {\n              series.disabled = true;\n              if (vers == 'furious') series.userDisabled = series.disabled;\n            });\n            d.disabled = false;\n            if (vers == 'furious') d.userDisabled = d.disabled;\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              })\n            });\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var legendWidth = 0;\n          var columnWidths = [];\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15);\n        }\n\n        seriesShape.style('fill', setBGColor).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? color(d, i) : '#fff';\n        } else if (!expanded) {\n          return !!d.disabled ? color(d, i) : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#fff' : color(d, i);\n        } else {\n          return !!d.disabled ? '#fff' : color(d, i);\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating and using multibar with single series for this\n\n\n  nv.models.historicalBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceX = [],\n        forceY = [0],\n        padData = false,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        interactive = true;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bars');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var bars = wrap.select('.nv-bars').selectAll('.nv-bar').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return getX(d, i);\n        });\n        bars.exit().remove();\n        bars.enter().append('rect').attr('x', 0).attr('y', function (d, i) {\n          return nv.utils.NaNtoZero(y(Math.max(0, getY(d, i))));\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.abs(y(getY(d, i)) - y(0)));\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }).on('mouseover', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          if (!interactive) return;\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('fill', function (d, i) {\n          return color(d, i);\n        }).attr('class', function (d, i, j) {\n          return (getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i;\n        }).watchTransition(renderWatch, 'bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }) //TODO: better width calculations that don't assume always uniform data spacing;w\n        .attr('width', availableWidth / data[0].values.length * .9);\n        bars.watchTransition(renderWatch, 'bars').attr('y', function (d, i) {\n          var rval = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i));\n          return nv.utils.NaNtoZero(rval);\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d, i)) - y(0)), 1));\n        });\n      });\n      renderWatch.renderEnd('historicalBar immediate');\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      container.select(\".nv-bars .nv-bar-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-bars .nv-bar.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.historicalBarChart = function (bar_model) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 90,\n      bottom: 50,\n      left: 90\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        state = {},\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        renderWatch.models(bars);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this; //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = bars.xScale();\n        y = bars.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        bars.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(bars); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').transition().call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').transition().call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          bars.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            bars.highlightPoint(pointIndex, true);\n            var point = series.values[pointIndex];\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex),\n              data: series.values[pointIndex]\n            });\n          });\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex));\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          dispatch.tooltipHide();\n          bars.clearHighlights();\n        });\n        legend.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n\n          if (!data.filter(function (d) {\n            return !d.disabled;\n          }).length) {\n            data.map(function (d) {\n              d.disabled = false;\n              wrap.selectAll('.nv-series').classed('disabled', false);\n              return d;\n            });\n          }\n\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          selection.transition().call(chart);\n        });\n        legend.dispatch.on('legendDblclick', function (d) {\n          //Double clicking should always enable current series, and disabled all others.\n          data.forEach(function (d) {\n            d.disabled = true;\n          });\n          d.disabled = false;\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('historicalBarChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          bars.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n          renderWatch.reset(transitionDuration);\n          yAxis.duration(transitionDuration);\n          xAxis.duration(transitionDuration);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // ohlcChart is just a historical chart with ohlc bars and some tweaks\n\n\n  nv.models.ohlcBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  }; // candlestickChart is just a historical chart with candlestick bars and some tweaks\n\n\n  nv.models.candlestickBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  };\n\n  nv.models.legend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 32 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        enableDoubleClick = true //If true, legend will enable double click handling\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        if (rightAlign) wrap.attr('transform', 'translate(' + -margin.right + ',' + margin.top + ')');else wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('.nv-legend-symbol');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('.nv-legend-symbol');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (enableDoubleClick) {\n            if (vers == 'furious' && expanded) return;\n            dispatch.legendDblclick(d, i);\n\n            if (updateState) {\n              // make sure we re-get data in case it was modified\n              var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n              // is to set all other series' to false, and make the double clicked series enabled.\n\n              data.forEach(function (series) {\n                series.disabled = true;\n                if (vers == 'furious') series.userDisabled = series.disabled;\n              });\n              d.disabled = false;\n              if (vers == 'furious') d.userDisabled = d.disabled;\n              dispatch.stateChange({\n                disabled: data.map(function (d) {\n                  return !!d.disabled;\n                })\n              });\n            }\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var legendWidth = 0;\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var columnWidths = [];\n          legendWidth = 0;\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n\n            if (legendWidth < xpos + maxwidth) {\n              legendWidth = xpos + maxwidth;\n            }\n\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15); // The background for the expanded legend (UI)\n\n          gEnter.insert('rect', ':first-child').attr('class', 'nv-legend-bg').attr('fill', '#eee') // .attr('stroke', '#444')\n          .attr('opacity', 0);\n          var seriesBG = g.select('.nv-legend-bg');\n          seriesBG.transition().duration(300).attr('x', -versPadding).attr('width', legendWidth + versPadding - 12).attr('height', height + 10).attr('y', -margin.top - 10).attr('opacity', expanded ? 1 : 0);\n        }\n\n        seriesShape.style('fill', setBGColor).style('fill-opacity', setBGOpacity).style('stroke', setBGColor);\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? '#000' : '#fff';\n        } else if (!expanded) {\n          if (!d.color) d.color = color(d, i);\n          return !!d.disabled ? d.color : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#eee' : d.color || color(d, i);\n        } else {\n          return d.color || color(d, i);\n        }\n      }\n\n      function setBGOpacity(d, i) {\n        if (expanded && vers == 'furious') {\n          return 1;\n        } else {\n          return !!d.disabled ? 0 : 1;\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      enableDoubleClick: {\n        get: function get() {\n          return enableDoubleClick;\n        },\n        set: function set(_) {\n          enableDoubleClick = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.line = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        container = null,\n        strokeWidth = 1.5,\n        color = nv.utils.defaultColor() // a function that returns a color\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        isArea = function isArea(d) {\n      return d.area;\n    } // decides if a line is an area or just a line\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        interpolate = \"linear\" // controls the line interpolation\n    ,\n        duration = 250,\n        dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    scatter.pointSize(16) // default size\n    .pointDomain([16, 256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        scatter.width(availableWidth).height(availableHeight);\n        var scatterWrap = wrap.select('.nv-scatterWrap');\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + scatter.id()).append('rect');\n        wrap.select('#nv-edge-clip-' + scatter.id() + ' rect').attr('width', availableWidth).attr('height', availableHeight > 0 ? availableHeight : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        scatterWrap.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('stroke-width', function (d) {\n          return d.strokeWidth || strokeWidth;\n        }).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'line: groups').style('stroke-opacity', 1).style('fill-opacity', function (d) {\n          return d.fillOpacity || .5;\n        });\n        var areaPaths = groups.selectAll('path.nv-area').data(function (d) {\n          return isArea(d) ? [d] : [];\n        }); // this is done differently than lines because I need to check if series is an area\n\n        areaPaths.enter().append('path').attr('class', 'nv-area').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x0(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y0(getY(d, i)));\n          }).y1(function (d, i) {\n            return y0(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        groups.exit().selectAll('path.nv-area').remove();\n        areaPaths.watchTransition(renderWatch, 'line: areaPaths').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y(getY(d, i)));\n          }).y1(function (d, i) {\n            return y(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        var linePaths = groups.selectAll('path.nv-line').data(function (d) {\n          return [d.values];\n        });\n        linePaths.enter().append('path').attr('class', 'nv-line').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x0(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y0(getY(d, i)));\n        }));\n        linePaths.watchTransition(renderWatch, 'line: linePaths').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y(getY(d, i)));\n        })); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter; // Pass through events\n\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      },\n      isArea: {\n        get: function get() {\n          return isArea;\n        },\n        set: function set(_) {\n          isArea = d3.functor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          scatter.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          scatter.y(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          scatter.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.line());\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        focusEnable = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        duration = 250; // set options on sub-objects for this chart\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    lines.clipEdge(true).duration(0);\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n        /* Update `main' graph on brush update. */\n\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Setup Scales\n\n        x = lines.xScale();\n        y = lines.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-linesWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive');\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Main (Focus) Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(duration).call(yAxis);\n          }\n        }\n\n        g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')'); //============================================================\n        // Update Focus\n        //============================================================\n\n        if (!focusEnable && focus.brush.extent() === null) {\n          linesWrap.call(lines);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').style('display', focusEnable ? 'initial' : 'none').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled && !series.disableTooltip;\n          }).forEach(function (series, i) {\n            var extent = focus.brush.extent() !== null ? focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent() : x.domain();\n            var currentValues = series.values.filter(function (d, i) {\n              // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n              // (e.g. x domain is manually set to reverse the x-axis)\n              if (extent[0] <= extent[1]) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              } else {\n                return lines.x()(d, i) >= extent[1] && lines.x()(d, i) <= extent[0];\n              }\n            });\n            pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n            var point = currentValues[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue !== null) {\n              lines.highlightPoint(i, pointIndex, true);\n            }\n\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: pointYValue,\n              color: color(series, series.seriesIndex),\n              data: point\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var defaultValueFormatter = function defaultValueFormatter(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n          };\n\n          interactiveLayer.tooltip.valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n            value: chart.x()(singlePoint, pointIndex),\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on('elementClick', function (e) {\n          var pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series) {\n            var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            var yPos = chart.yScale()(chart.y()(point, pointIndex));\n            allData.push({\n              point: point,\n              pointIndex: pointIndex,\n              pos: [pointXLocation, yPos],\n              seriesIndex: series.seriesIndex,\n              series: series\n            });\n          });\n          lines.dispatch.elementClick(allData);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          focusLinesWrap.transition().duration(duration).call(lines); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('lineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      if (!evt.series.disableTooltip) {\n        tooltip.data(evt).hidden(false);\n      }\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // Focus options, mostly passed onto focus model.\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focus.showXAxis();\n        },\n        set: function set(_) {\n          focus.showXAxis(_);\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focus.showYAxis();\n        },\n        set: function set(_) {\n          focus.showYAxis(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          lines.duration(duration);\n          focus.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          lines.color(color);\n          focus.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return lines.interpolate();\n        },\n        set: function set(_) {\n          lines.interpolate(_);\n          focus.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n          focus.xTickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n          focus.yTickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return lines.x();\n        },\n        set: function set(_) {\n          lines.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return lines.y();\n        },\n        set: function set(_) {\n          lines.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines.interactive(false);\n            lines.useVoronoi(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineWithFocusChart = function () {\n    return nv.models.lineChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  };\n\n  nv.models.linePlusBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        lines2 = nv.models.line(),\n        bars = nv.models.historicalBar(),\n        bars2 = nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        x2Axis = nv.models.axis(),\n        y1Axis = nv.models.axis(),\n        y2Axis = nv.models.axis(),\n        y3Axis = nv.models.axis(),\n        y4Axis = nv.models.axis(),\n        legend = nv.models.legend(),\n        brush = d3.svg.brush(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        marginTop = null,\n        margin2 = {\n      top: 0,\n      right: 30,\n      bottom: 20,\n      left: 60\n    },\n        width = null,\n        height = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.defaultColor(),\n        showLegend = true,\n        focusEnable = true,\n        focusShowAxisY = false,\n        focusShowAxisX = true,\n        focusHeight = 50,\n        extent,\n        brushExtent = null,\n        x,\n        x2,\n        y1,\n        y2,\n        y3,\n        y4,\n        noData = null,\n        dispatch = d3.dispatch('brush', 'stateChange', 'changeState'),\n        transitionDuration = 0,\n        state = nv.utils.state(),\n        defaultState = null,\n        legendLeftAxisHint = ' (left axis)',\n        legendRightAxisHint = ' (right axis)',\n        switchYAxisOrder = false;\n\n    lines.clipEdge(true);\n    lines2.interactive(false); // We don't want any points emitted for the focus chart's scatter graph.\n\n    lines2.pointActive(function (d) {\n      return false;\n    });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n    tooltip.headerEnabled(true).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function getBarsAxis() {\n      return switchYAxisOrder ? {\n        main: y2Axis,\n        focus: y4Axis\n      } : {\n        main: y1Axis,\n        focus: y3Axis\n      };\n    };\n\n    var getLinesAxis = function getLinesAxis() {\n      return switchYAxisOrder ? {\n        main: y1Axis,\n        focus: y3Axis\n      } : {\n        main: y2Axis,\n        focus: y4Axis\n      };\n    };\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var allDisabled = function allDisabled(data) {\n      return data.every(function (series) {\n        return series.disabled;\n      });\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focusHeight : 0),\n            availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        var dataBars = data.filter(function (d) {\n          return !d.disabled && d.bar;\n        });\n        var dataLines = data.filter(function (d) {\n          return !d.bar;\n        }); // removed the !d.disabled clause here to fix Issue #240\n\n        if (dataBars.length && !switchYAxisOrder) {\n          x = bars.xScale();\n        } else {\n          x = lines.xScale();\n        }\n\n        x2 = x2Axis.scale(); // select the scales and series based on the position of the yAxis\n\n        y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n        y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n        y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n        y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n        var series1 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        x.range([0, availableWidth]);\n        x2.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // this is the main chart\n\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-barsWrap');\n        focusEnter.append('g').attr('class', 'nv-linesWrap'); // context chart is where you can focus in\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n        contextEnter.append('g').attr('class', 'nv-x nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-barsWrap');\n        contextEnter.append('g').attr('class', 'nv-linesWrap');\n        contextEnter.append('g').attr('class', 'nv-brushBackground');\n        contextEnter.append('g').attr('class', 'nv-x nv-brush'); //============================================================\n        // Legend\n        //------------------------------------------------------------\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\n            if (switchYAxisOrder) {\n              series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n            } else {\n              series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n            }\n\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height(); // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //============================================================\n        // Context chart (focus chart) components\n        //------------------------------------------------------------\n        // hide or show the focus context chart\n\n        g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n        bars2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && data[i].bar;\n        }));\n        lines2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].bar;\n        }));\n        var bars2Wrap = g.select('.nv-context .nv-barsWrap').datum(dataBars.length ? dataBars : [{\n          values: []\n        }]);\n        var lines2Wrap = g.select('.nv-context .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n          values: []\n        }] : dataLines.filter(function (dataLine) {\n          return !dataLine.disabled;\n        }));\n        g.select('.nv-context').attr('transform', 'translate(0,' + (availableHeight1 + margin.bottom + margin2.top) + ')');\n        bars2Wrap.transition().call(bars2);\n        lines2Wrap.transition().call(lines2); // context (focus chart) axis controls\n\n        if (focusShowAxisX) {\n          x2Axis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight2, 0);\n\n          g.select('.nv-context .nv-x.nv-axis').attr('transform', 'translate(0,' + y3.range()[0] + ')');\n          g.select('.nv-context .nv-x.nv-axis').transition().call(x2Axis);\n        }\n\n        if (focusShowAxisY) {\n          y3Axis.scale(y3)._ticks(availableHeight2 / 36).tickSize(-availableWidth, 0);\n\n          y4Axis.scale(y4)._ticks(availableHeight2 / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n\n          g.select('.nv-context .nv-y3.nv-axis').style('opacity', dataBars.length ? 1 : 0).attr('transform', 'translate(0,' + x2.range()[0] + ')');\n          g.select('.nv-context .nv-y2.nv-axis').style('opacity', dataLines.length ? 1 : 0).attr('transform', 'translate(' + x2.range()[1] + ',0)');\n          g.select('.nv-context .nv-y1.nv-axis').transition().call(y3Axis);\n          g.select('.nv-context .nv-y2.nv-axis').transition().call(y4Axis);\n        } // Setup Brush\n\n\n        brush.x(x2).on('brush', onBrush);\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect') //.attr('y', -5)\n        .attr('height', availableHeight2);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight2 / 3;\n          return 'M' + .5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + .5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x2.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x2(d[0]) - x2.range()[0],\n                rightWidth = x2.range()[1] - x2(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x2(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush() {\n          brushExtent = brush.empty() ? null : brush.extent();\n          extent = brush.empty() ? x2.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG(); // Prepare Main (Focus) Bars and Lines\n\n          bars.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && data[i].bar;\n          }));\n          lines.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && !data[i].bar;\n          }));\n          var focusBarsWrap = g.select('.nv-focus .nv-barsWrap').datum(!dataBars.length ? [{\n            values: []\n          }] : dataBars.map(function (d, i) {\n            return {\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return bars.x()(d, i) >= extent[0] && bars.x()(d, i) <= extent[1];\n              })\n            };\n          }));\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n            values: []\n          }] : dataLines.filter(function (dataLine) {\n            return !dataLine.disabled;\n          }).map(function (d, i) {\n            return {\n              area: d.area,\n              fillOpacity: d.fillOpacity,\n              strokeWidth: d.strokeWidth,\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              })\n            };\n          })); // Update Main (Focus) X Axis\n\n          if (dataBars.length && !switchYAxisOrder) {\n            x = bars.xScale();\n          } else {\n            x = lines.xScale();\n          }\n\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight1, 0);\n\n          xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n          g.select('.nv-x.nv-axis').transition().duration(transitionDuration).call(xAxis); // Update Main (Focus) Bars and Lines\n\n          focusBarsWrap.transition().duration(transitionDuration).call(bars);\n          focusLinesWrap.transition().duration(transitionDuration).call(lines); // Setup and Update Main (Focus) Y Axes\n\n          g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n          y1Axis.scale(y1)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)).tickSize(-availableWidth, 0);\n\n          y2Axis.scale(y2)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)); // Show the y2 rules only if y1 has none\n\n\n          if (!switchYAxisOrder) {\n            y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n          } else {\n            y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n          } // Calculate opacity of the axis\n\n\n          var barsOpacity = dataBars.length ? 1 : 0;\n          var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n          var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n          var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n          g.select('.nv-focus .nv-y1.nv-axis').style('opacity', y1Opacity);\n          g.select('.nv-focus .nv-y2.nv-axis').style('opacity', y2Opacity).attr('transform', 'translate(' + x.range()[1] + ',0)');\n          g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration).call(y1Axis);\n          g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration).call(y2Axis);\n        }\n\n        onBrush();\n      });\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.duration(100).valueFormatter(function (d, i) {\n        return getLinesAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.duration(0).valueFormatter(function (d, i) {\n        return getBarsAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focusHeight;\n        },\n        set: function set(_) {\n          focusHeight = _;\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focusShowAxisX;\n        },\n        set: function set(_) {\n          focusShowAxisX = _;\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focusShowAxisY;\n        },\n        set: function set(_) {\n          focusShowAxisY = _;\n        }\n      },\n      legendLeftAxisHint: {\n        get: function get() {\n          return legendLeftAxisHint;\n        },\n        set: function set(_) {\n          legendLeftAxisHint = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return margin2;\n        },\n        set: function set(_) {\n          margin2.top = _.top !== undefined ? _.top : margin2.top;\n          margin2.right = _.right !== undefined ? _.right : margin2.right;\n          margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n          margin2.left = _.left !== undefined ? _.left : margin2.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines.x(_);\n          lines2.x(_);\n          bars.x(_);\n          bars2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines.y(_);\n          lines2.y(_);\n          bars.y(_);\n          bars2.y(_);\n        }\n      },\n      switchYAxisOrder: {\n        get: function get() {\n          return switchYAxisOrder;\n        },\n        set: function set(_) {\n          // Switch the tick format for the yAxis\n          if (switchYAxisOrder !== _) {\n            var y1 = y1Axis;\n            y1Axis = y2Axis;\n            y2Axis = y1;\n            var y3 = y3Axis;\n            y3Axis = y4Axis;\n            y4Axis = y3;\n          }\n\n          switchYAxisOrder = _;\n          y1Axis.orient('left');\n          y2Axis.orient('right');\n          y3Axis.orient('left');\n          y4Axis.orient('right');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        clipEdge = true,\n        stacked = false,\n        stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n    ,\n        color = nv.utils.defaultColor(),\n        hideable = false,\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        duration = 500,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n    var last_datalength = 0;\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var nonStackableCount = 0; // This function defines the requirements for render complete\n\n        var endFn = function endFn(d, i) {\n          if (d.series === data.length - 1 && i === data[0].values.length - 1) return true;\n          return false;\n        };\n\n        if (hideable && data.length) hideable = [{\n          values: data[0].values.map(function (d) {\n            return {\n              x: d.x,\n              y: 0,\n              series: d.series,\n              size: 0.01\n            };\n          })\n        }];\n\n        if (stacked) {\n          var parsed = d3.layout.stack().offset(stackOffset).values(function (d) {\n            return d.values;\n          }).y(getY)(!data.length && hideable ? hideable : data);\n          parsed.forEach(function (series, i) {\n            // if series is non-stackable, use un-parsed data\n            if (series.nonStackable) {\n              data[i].nonStackableSeries = nonStackableCount++;\n              parsed[i] = data[i];\n            } else {\n              // don't stack this seires on top of the nonStackable seriees\n              if (i > 0 && parsed[i - 1].nonStackable) {\n                parsed[i].values.map(function (d, j) {\n                  d.y0 -= parsed[i - 1].values[j].y;\n                  d.y1 = d.y0 + d.y;\n                });\n              }\n            }\n          });\n          data = parsed;\n        } //add series index and key to each data point for reference\n\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked && data.length > 0) {\n          data[0].values.map(function (d, i) {\n            var posBase = 0,\n                negBase = 0;\n            data.map(function (d, idx) {\n              if (!data[idx].nonStackable) {\n                var f = d.values[i];\n                f.size = Math.abs(f.y);\n\n                if (f.y < 0) {\n                  f.y1 = negBase;\n                  negBase = negBase - f.size;\n                } else {\n                  f.y1 = f.size + posBase;\n                  posBase = posBase + f.size;\n                }\n              }\n            });\n          });\n        } // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d, idx) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1,\n              idx: idx\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          var domain = d.y; // increase the domain range if this series is stackable\n\n          if (stacked && !data[d.idx].nonStackable) {\n            if (d.y > 0) {\n              domain = d.y1;\n            } else {\n              domain = d.y1 + d.y;\n            }\n          }\n\n          return domain;\n        }).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        var exitTransition = renderWatch.transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration)).attr('y', function (d, i, j) {\n          var yVal = y0(0) || 0;\n\n          if (stacked) {\n            if (data[d.series] && !data[d.series].nonStackable) {\n              yVal = y0(d.y0);\n            }\n          }\n\n          return yVal;\n        }).attr('height', 0).remove();\n        if (exitTransition.delay) exitTransition.delay(function (d, i) {\n          var delay = i * (duration / (last_datalength + 1)) - i;\n          return delay;\n        });\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('rect.nv-bar').data(function (d) {\n          return hideable && !data.length ? hideable.values : d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('rect').attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('x', function (d, i, j) {\n          return stacked && !data[j].nonStackable ? 0 : j * x.rangeBand() / data.length;\n        }).attr('y', function (d, i, j) {\n          return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0;\n        }).attr('height', 0).attr('width', function (d, i, j) {\n          return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length);\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n        bars.style('fill', function (d, i, j) {\n          return color(d, j, i);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j, i);\n        }).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i, j) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i, j) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i, j) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        var barSelection = bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration)).delay(function (d, i) {\n          return i * duration / data[0].values.length;\n        });\n\n        if (stacked) {\n          barSelection.attr('y', function (d, i, j) {\n            var yVal = 0; // if stackable, stack it on top of the previous series\n\n            if (!data[j].nonStackable) {\n              yVal = y(d.y1);\n            } else {\n              if (getY(d, i) < 0) {\n                yVal = y(0);\n              } else {\n                if (y(0) - y(getY(d, i)) < -1) {\n                  yVal = y(0) - 1;\n                } else {\n                  yVal = y(getY(d, i)) || 0;\n                }\n              }\n            }\n\n            return yVal;\n          }).attr('height', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return Math.max(Math.abs(y(d.y + d.y0) - y(d.y0)), 0);\n            } else {\n              return Math.max(Math.abs(y(getY(d, i)) - y(0)), 0) || 0;\n            }\n          }).attr('x', function (d, i, j) {\n            var width = 0;\n\n            if (data[j].nonStackable) {\n              width = d.series * x.rangeBand() / data.length;\n\n              if (data.length !== nonStackableCount) {\n                width = data[j].nonStackableSeries * x.rangeBand() / (nonStackableCount * 2);\n              }\n            }\n\n            return width;\n          }).attr('width', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return x.rangeBand();\n            } else {\n              // if all series are nonStacable, take the full width\n              var width = x.rangeBand() / nonStackableCount; // otherwise, nonStackable graph will be only taking the half-width\n              // of the x rangeBand\n\n              if (data.length !== nonStackableCount) {\n                width = x.rangeBand() / (nonStackableCount * 2);\n              }\n\n              return width;\n            }\n          });\n        } else {\n          barSelection.attr('x', function (d, i) {\n            return d.series * x.rangeBand() / data.length;\n          }).attr('width', x.rangeBand() / data.length).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)) || 0;\n          }).attr('height', function (d, i) {\n            return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n          });\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy(); // keep track of the last data value length for transition calculations\n\n        if (data[0] && data[0].values) {\n          last_datalength = data[0].values.length;\n        }\n      });\n      renderWatch.renderEnd('multibar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      stackOffset: {\n        get: function get() {\n          return stackOffset;\n        },\n        set: function set(_) {\n          stackOffset = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      hideable: {\n        get: function get() {\n          return hideable;\n        },\n        set: function set(_) {\n          hideable = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        interactiveLayer = nv.interactiveGuideline(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = null,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        reduceXTicks = true // if false a tick will show for every data point\n    ,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250,\n        useInteractiveGuideline = false;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis.orient('bottom').tickPadding(7).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === 'bottom') {\n            legend.width(availableWidth - margin.right);\n            g.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else {\n            legend.width(availableWidth - controlWidth());\n            g.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n          xTicks.selectAll('line, text').style('opacity', 1);\n\n          if (staggerLabels) {\n            var getTranslate = function getTranslate(x, y) {\n              return \"translate(\" + x + \",\" + y + \")\";\n            };\n\n            var staggerUp = 5,\n                staggerDown = 17; //pixels to stagger by\n            // Issue #140\n\n            xTicks.selectAll(\"text\").attr('transform', function (d, i, j) {\n              return getTranslate(0, j % 2 == 0 ? staggerUp : staggerDown);\n            });\n            var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n            g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\").attr(\"transform\", function (d, i) {\n              return getTranslate(0, i === 0 || totalInBetweenTicks % 2 !== 0 ? staggerDown : staggerUp);\n            });\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n\n          if (reduceXTicks) xTicks.filter(function (d, i) {\n            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n          }).selectAll('text, line').style('opacity', 0);\n          if (rotateLabels) xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text').style('opacity', 1);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            if (e.pointXValue == undefined) return;\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                xValue,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              pointIndex = x.domain().indexOf(e.pointXValue);\n              var point = series.values[pointIndex];\n              if (point === undefined) return;\n              xValue = point.x;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = e.mouseX;\n              allData.push({\n                key: series.key,\n                value: chart.y()(point, pointIndex),\n                color: color(series, series.seriesIndex),\n                data: series.values[pointIndex]\n              });\n            });\n            interactiveLayer.tooltip.data({\n              value: xValue,\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            interactiveLayer.tooltip.hidden(true);\n          });\n        } else {\n          multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n            evt.value = chart.x()(evt.data);\n            evt['series'] = {\n              key: evt.data.key,\n              value: chart.y()(evt.data),\n              color: evt.color\n            };\n            tooltip.data(evt).hidden(false);\n          });\n          multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      renderWatch.renderEnd('multibarchart immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      reduceXTicks: {\n        get: function get() {\n          return reduceXTicks;\n        },\n        set: function set(_) {\n          reduceXTicks = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontal = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getYerr = function getYerr(d) {\n      return d.yErr;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        stacked = false,\n        showValues = false,\n        showBarLabels = false,\n        valuePadding = 60,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        valueFormat = d3.format(',.2f'),\n        delay = 1200,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        duration = 250,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0; //used to store previous scales\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        if (stacked) data = d3.layout.stack().offset('zero').values(function (d) {\n          return d.values;\n        }).y(getY)(data); //add series index and key to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked) data[0].values.map(function (d, i) {\n          var posBase = 0,\n              negBase = 0;\n          data.map(function (d) {\n            var f = d.values[i];\n            f.size = Math.abs(f.y);\n\n            if (f.y < 0) {\n              f.y1 = negBase - f.size;\n              negBase = negBase - f.size;\n            } else {\n              f.y1 = posBase;\n              posBase = posBase + f.size;\n            }\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableHeight], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return stacked ? d.y > 0 ? d.y1 + d.y : d.y1 : d.y;\n        }).concat(forceY)));\n        if (showValues && !stacked) y.range(yRange || [y.domain()[0] < 0 ? valuePadding : 0, availableWidth - (y.domain()[1] > 0 ? valuePadding : 0)]);else y.range(yRange || [0, availableWidth]);\n        x0 = x0 || x;\n        y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'multibarhorizontal: groups').style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : j * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        });\n        barsEnter.append('rect').attr('width', 0).attr('height', x.rangeBand() / (stacked ? 1 : data.length));\n        bars.on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n\n        if (getYerr(data[0], 0)) {\n          barsEnter.append('polyline');\n          bars.select('polyline').attr('fill', 'none').attr('points', function (d, i) {\n            var xerr = getYerr(d, i),\n                mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n            xerr = xerr.map(function (e) {\n              return y(e + (getY(d, i) < 0 ? 0 : getY(d, i))) - y(0);\n            });\n            var a = [[xerr[0], -mid], [xerr[0], mid], [xerr[0], 0], [xerr[1], 0], [xerr[1], -mid], [xerr[1], mid]];\n            return a.map(function (path) {\n              return path.join(',');\n            }).join(' ');\n          }).attr('transform', function (d, i) {\n            var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            return 'translate(0, ' + mid + ')';\n          });\n        }\n\n        barsEnter.append('text');\n\n        if (showValues && !stacked) {\n          bars.select('text').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'end' : 'start';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            var t = valueFormat(getY(d, i)),\n                yerr = getYerr(d, i);\n            if (yerr === undefined) return t;\n            if (!yerr.length) return t + '±' + valueFormat(Math.abs(yerr));\n            return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? -4 : y(getY(d, i)) - y(0) + 4;\n          });\n        } else {\n          bars.selectAll('text').text('');\n        }\n\n        if (showBarLabels && !stacked) {\n          barsEnter.append('text').classed('nv-bar-label', true);\n          bars.select('text.nv-bar-label').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'start' : 'end';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            return getX(d, i);\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text.nv-bar-label').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? y(0) - y(getY(d, i)) + 4 : -4;\n          });\n        } else {\n          bars.selectAll('text.nv-bar-label').text('');\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        if (stacked) bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          return 'translate(' + y(d.y1) + ',' + x(getX(d, i)) + ')';\n        }).select('rect').attr('width', function (d, i) {\n          return Math.abs(y(getY(d, i) + d.y0) - y(d.y0)) || 0;\n        }).attr('height', x.rangeBand());else bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          //TODO: stacked must be all positive or all negative, not both?\n          return 'translate(' + (getY(d, i) < 0 ? y(getY(d, i)) : y(0)) + ',' + (d.series * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        }).select('rect').attr('height', x.rangeBand() / data.length).attr('width', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('multibarHorizontal immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      yErr: {\n        get: function get() {\n          return getYerr;\n        },\n        set: function set(_) {\n          getYerr = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      // this shows the group name, seems pointless?\n      //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      valuePadding: {\n        get: function get() {\n          return valuePadding;\n        },\n        set: function set(_) {\n          valuePadding = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontalChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend().height(30),\n        controls = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlsPosition = 'top',\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        stacked = false,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n    xAxis.orient('left').tickPadding(5).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient('bottom').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        stacked = multibar.stacked();\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth - controlWidth());\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\n          if (controlsPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')').call(controls);\n          } else if (controlsPosition === 'top') {\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksY(availableHeight / 24, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n          xTicks.selectAll('line, text');\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", y(0)).attr(\"x2\", y(0)).attr(\"y1\", 0).attr(\"y2\", -availableHeight); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          stacked = multibar.stacked();\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('multibar horizontal chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        key: evt.data.key,\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      controlsPosition: {\n        get: function get() {\n          return controlsPosition;\n        },\n        set: function set(_) {\n          controlsPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        var dataLines1 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 1;\n        });\n        var dataLines2 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 2;\n        });\n        var dataScatters1 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 1;\n        });\n        var dataScatters2 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 2;\n        });\n        var dataBars1 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 1;\n        });\n        var dataBars2 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 2;\n        });\n        var dataStack1 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 1;\n        });\n        var dataStack2 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 2;\n        }); // Display noData message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var series1 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 1;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 2;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        x.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]);\n        var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        gEnter.append('g').attr('class', 'stack1Wrap');\n        gEnter.append('g').attr('class', 'stack2Wrap');\n        gEnter.append('g').attr('class', 'bars1Wrap');\n        gEnter.append('g').attr('class', 'bars2Wrap');\n        gEnter.append('g').attr('class', 'scatters1Wrap');\n        gEnter.append('g').attr('class', 'scatters2Wrap');\n        gEnter.append('g').attr('class', 'lines1Wrap');\n        gEnter.append('g').attr('class', 'lines2Wrap');\n        gEnter.append('g').attr('class', 'legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        var g = wrap.select('g');\n        var color_array = data.map(function (d, i) {\n          return data[i].color || color(d, i);\n        }); // Legend\n\n        if (!showLegend) {\n          g.select('.legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          legend.color(color_array);\n          g.select('.legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n            series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        lines1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line';\n        }));\n        lines2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line';\n        }));\n        scatters1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter';\n        }));\n        scatters2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter';\n        }));\n        bars1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar';\n        }));\n        bars2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar';\n        }));\n        stack1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area';\n        }));\n        stack2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area';\n        }));\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var lines1Wrap = g.select('.lines1Wrap').datum(dataLines1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters1Wrap = g.select('.scatters1Wrap').datum(dataScatters1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars1Wrap = g.select('.bars1Wrap').datum(dataBars1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack1Wrap = g.select('.stack1Wrap').datum(dataStack1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var lines2Wrap = g.select('.lines2Wrap').datum(dataLines2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters2Wrap = g.select('.scatters2Wrap').datum(dataScatters2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars2Wrap = g.select('.bars2Wrap').datum(dataBars2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack2Wrap = g.select('.stack2Wrap').datum(dataStack2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var extraValue1BarStacked = [];\n\n        if (bars1.stacked() && dataBars1.length) {\n          var extraValue1BarStacked = dataBars1.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue1BarStacked.length > 0) extraValue1BarStacked = extraValue1BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars1.length) {\n          extraValue1BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        var extraValue2BarStacked = [];\n\n        if (bars2.stacked() && dataBars2.length) {\n          var extraValue2BarStacked = dataBars2.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue2BarStacked.length > 0) extraValue2BarStacked = extraValue2BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars2.length) {\n          extraValue2BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        yScale1.domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        yScale2.domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        lines1.yDomain(yScale1.domain());\n        scatters1.yDomain(yScale1.domain());\n        bars1.yDomain(yScale1.domain());\n        stack1.yDomain(yScale1.domain());\n        lines2.yDomain(yScale2.domain());\n        scatters2.yDomain(yScale2.domain());\n        bars2.yDomain(yScale2.domain());\n        stack2.yDomain(yScale2.domain());\n\n        if (dataStack1.length) {\n          d3.transition(stack1Wrap).call(stack1);\n        }\n\n        if (dataStack2.length) {\n          d3.transition(stack2Wrap).call(stack2);\n        }\n\n        if (dataBars1.length) {\n          d3.transition(bars1Wrap).call(bars1);\n        }\n\n        if (dataBars2.length) {\n          d3.transition(bars2Wrap).call(bars2);\n        }\n\n        if (dataLines1.length) {\n          d3.transition(lines1Wrap).call(lines1);\n        }\n\n        if (dataLines2.length) {\n          d3.transition(lines2Wrap).call(lines2);\n        }\n\n        if (dataScatters1.length) {\n          d3.transition(scatters1Wrap).call(scatters1);\n        }\n\n        if (dataScatters2.length) {\n          d3.transition(scatters2Wrap).call(scatters2);\n        }\n\n        xAxis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n        d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n\n        yAxis1._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y1.nv-axis')).call(yAxis1);\n\n        yAxis2._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y2.nv-axis')).call(yAxis2);\n        g.select('.nv-y1.nv-axis').classed('nv-disabled', series1.length ? false : true).attr('transform', 'translate(' + x.range()[0] + ',0)');\n        g.select('.nv-y2.nv-axis').classed('nv-disabled', series2.length ? false : true).attr('transform', 'translate(' + x.range()[1] + ',0)');\n        legend.dispatch.on('stateChange', function (newState) {\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching\n        //------------------------------------------------------------\n\n\n        function mouseover_line(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_scatter(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(100).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_stack(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.point['x'] = stack1.x()(evt.point);\n          evt.point['y'] = stack1.y()(evt.point);\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_bar(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = bars1.x()(evt.data);\n          evt['series'] = {\n            value: bars1.y()(evt.data),\n            color: evt.color,\n            key: evt.data.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function clearHighlights() {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.clearHighlights();\n            } catch (e) {}\n          }\n        }\n\n        function highlightPoint(serieIndex, pointIndex, b) {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.highlightPoint(serieIndex, pointIndex, b);\n            } catch (e) {}\n          }\n        }\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            clearHighlights();\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              var extent = x.domain();\n              var currentValues = series.values.filter(function (d, i) {\n                return chart.x()(d, i) >= extent[0] && chart.x()(d, i) <= extent[1];\n              });\n              pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n              var point = currentValues[pointIndex];\n              var pointYValue = chart.y()(point, pointIndex);\n\n              if (pointYValue !== null) {\n                highlightPoint(i, pointIndex, true);\n              }\n\n              if (point === undefined) return;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = x(chart.x()(point, pointIndex));\n              allData.push({\n                key: series.key,\n                value: pointYValue,\n                color: color(series, series.seriesIndex),\n                data: point,\n                yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n              });\n            });\n\n            var defaultValueFormatter = function defaultValueFormatter(d, i) {\n              var yAxis = allData[i].yAxis;\n              return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n            };\n\n            interactiveLayer.tooltip.headerFormatter(function (d, i) {\n              return xAxis.tickFormat()(d, i);\n            }).valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n              value: chart.x()(singlePoint, pointIndex),\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            clearHighlights();\n          });\n        } else {\n          lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          lines2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n          bars2.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      yDomain1: {\n        get: function get() {\n          return yDomain1;\n        },\n        set: function set(_) {\n          yDomain1 = _;\n        }\n      },\n      yDomain2: {\n        get: function get() {\n          return yDomain2;\n        },\n        set: function set(_) {\n          yDomain2 = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines1.x(_);\n          lines2.x(_);\n          scatters1.x(_);\n          scatters2.x(_);\n          bars1.x(_);\n          bars2.x(_);\n          stack1.x(_);\n          stack2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines1.y(_);\n          lines2.y(_);\n          scatters1.y(_);\n          scatters2.y(_);\n          stack1.y(_);\n          stack2.y(_);\n          bars1.y(_);\n          bars2.y(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n          lines1.useVoronoi(_);\n          lines2.useVoronoi(_);\n          stack1.useVoronoi(_);\n          stack2.useVoronoi(_);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines1.interactive(false);\n            lines1.useVoronoi(false);\n            lines2.interactive(false);\n            lines2.useVoronoi(false);\n            stack1.interactive(false);\n            stack1.useVoronoi(false);\n            stack2.interactive(false);\n            stack2.useVoronoi(false);\n            scatters1.interactive(false);\n            scatters2.interactive(false);\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function (model) {\n            model.duration(duration);\n          });\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.ohlcBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // ohlc bar width.\n\n        var w = availableWidth / data[0].values.length * .9; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + w / 2, availableWidth - w / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        ticks.enter().append('path').attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        }).attr('d', function (d, i) {\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('fill', function (d, i) {\n          return color[0];\n        }).attr('stroke', function (d, i) {\n          return color[0];\n        }).attr('x', 0).attr('y', function (d, i) {\n          return y(Math.max(0, getY(d, i)));\n        }).attr('height', function (d, i) {\n          return Math.abs(y(getY(d, i)) - y(0));\n        }); // the bar colors are controlled by CSS currently\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        d3.transition(ticks).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('d', function (d, i) {\n          var w = availableWidth / data[0].values.length * .9;\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-ohlcBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Code adapted from Jason Davies' \"Parallel Coordinates\"\n  // http://bl.ocks.org/jasondavies/1341281\n\n\n  nv.models.parallelCoordinates = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 0,\n      bottom: 10,\n      left: 0\n    },\n        width = null,\n        height = null,\n        availableWidth = null,\n        availableHeight = null,\n        x = d3.scale.ordinal(),\n        y = {},\n        undefinedValuesLabel = \"undefined values\",\n        dimensionData = [],\n        enabledDimensions = [],\n        dimensionNames = [],\n        displayBrush = true,\n        color = nv.utils.defaultColor(),\n        filters = [],\n        active = [],\n        dragging = [],\n        axisWithUndefinedValues = [],\n        lineTension = 1,\n        foreground,\n        background,\n        dimensions,\n        line = d3.svg.line(),\n        axis = d3.svg.axis(),\n        dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //Convert old data to new format (name, values)\n\n        if (data[0].values === undefined) {\n          var newData = [];\n          data.forEach(function (d) {\n            var val = {};\n            var key = Object.keys(d);\n            key.forEach(function (k) {\n              if (k !== \"name\") val[k] = d[k];\n            });\n            newData.push({\n              key: d.name,\n              values: val\n            });\n          });\n          data = newData;\n        }\n\n        var dataValues = data.map(function (d) {\n          return d.values;\n        });\n\n        if (active.length === 0) {\n          active = data;\n        }\n\n        ; //set all active before first brush call\n\n        dimensionNames = dimensionData.sort(function (a, b) {\n          return a.currentPosition - b.currentPosition;\n        }).map(function (d) {\n          return d.key;\n        });\n        enabledDimensions = dimensionData.filter(function (d) {\n          return !d.disabled;\n        }); // Setup Scales\n\n        x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) {\n          return d.key;\n        })); //Set as true if all values on an axis are missing.\n        // Extract the list of dimensions and create a scale for each.\n\n        var oldDomainMaxValue = {};\n        var displayMissingValuesline = false;\n        var currentTicks = [];\n        dimensionNames.forEach(function (d) {\n          var extent = d3.extent(dataValues, function (p) {\n            return +p[d];\n          });\n          var min = extent[0];\n          var max = extent[1];\n          var onlyUndefinedValues = false; //If there is no values to display on an axis, set the extent to 0\n\n          if (isNaN(min) || isNaN(max)) {\n            onlyUndefinedValues = true;\n            min = 0;\n            max = 0;\n          } //Scale axis if there is only one value\n\n\n          if (min === max) {\n            min = min - 1;\n            max = max + 1;\n          }\n\n          var f = filters.filter(function (k) {\n            return k.dimension == d;\n          });\n\n          if (f.length !== 0) {\n            //If there is only NaN values, keep the existing domain.\n            if (onlyUndefinedValues) {\n              min = y[d].domain()[0];\n              max = y[d].domain()[1];\n            } //If the brush extent is > max (< min), keep the extent value.\n            else if (!f[0].hasOnlyNaN && displayBrush) {\n                min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                max = max < f[0].extent[1] ? f[0].extent[1] : max;\n              } //If there is NaN values brushed be sure the brush extent is on the domain.\n              else if (f[0].hasNaN) {\n                  max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                  oldDomainMaxValue[d] = y[d].domain()[1];\n                  displayMissingValuesline = true;\n                }\n          } //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n          //The remaining 10% are used to display the missingValue line.\n\n\n          y[d] = d3.scale.linear().domain([min, max]).range([(availableHeight - 12) * 0.9, 0]);\n          axisWithUndefinedValues = [];\n          y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n        }); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        line.interpolate('cardinal').tension(lineTension);\n        axis.orient('left');\n        var axisDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd); //Add missing value line at the bottom of the chart\n\n        var missingValuesline, missingValueslineText;\n        var step = x.range()[1] - x.range()[0];\n        step = isNaN(step) ? x.range()[0] : step;\n\n        if (!isNaN(step)) {\n          var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n          missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n          missingValuesline.enter().append('line');\n          missingValuesline.exit().remove();\n          missingValuesline.attr(\"x1\", function (d) {\n            return d[0];\n          }).attr(\"y1\", function (d) {\n            return d[1];\n          }).attr(\"x2\", function (d) {\n            return d[2];\n          }).attr(\"y2\", function (d) {\n            return d[3];\n          }); //Add the text \"undefined values\" under the missing value line\n\n          missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n          missingValueslineText.append('text').data([undefinedValuesLabel]);\n          missingValueslineText.enter().append('text');\n          missingValueslineText.exit().remove();\n          missingValueslineText.attr(\"y\", availableHeight) //To have the text right align with the missingValues line, substract 92 representing the text size.\n          .attr(\"x\", availableWidth - 92 - step / 2).text(function (d) {\n            return d;\n          });\n        } // Add grey background lines for context.\n\n\n        background = wrap.select('.background').selectAll('path').data(data);\n        background.enter().append('path');\n        background.exit().remove();\n        background.attr('d', path); // Add blue foreground lines for focus.\n\n        foreground = wrap.select('.foreground').selectAll('path').data(data);\n        foreground.enter().append('path');\n        foreground.exit().remove();\n        foreground.attr('d', path).style(\"stroke-width\", function (d, i) {\n          if (isNaN(d.strokeWidth)) {\n            d.strokeWidth = 1;\n          }\n\n          return d.strokeWidth;\n        }).attr('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n        foreground.on(\"mouseover\", function (d, i) {\n          d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n          dispatch.elementMouseover({\n            label: d.name,\n            color: d.color || color(d, i),\n            values: d.values,\n            dimensions: enabledDimensions\n          });\n        });\n        foreground.on(\"mouseout\", function (d, i) {\n          d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n          dispatch.elementMouseout({\n            label: d.name,\n            index: i\n          });\n        });\n        foreground.on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        });\n        foreground.on('click', function (d) {\n          dispatch.elementClick({\n            id: d.id\n          });\n        }); // Add a group element for each dimension.\n\n        dimensions = g.selectAll('.dimension').data(enabledDimensions);\n        var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n        dimensions.attr('transform', function (d) {\n          return 'translate(' + x(d.key) + ',0)';\n        });\n        dimensionsEnter.append('g').attr('class', 'nv-axis'); // Add an axis and title.\n\n        dimensionsEnter.append('text').attr('class', 'nv-label').style(\"cursor\", \"move\").attr('dy', '-1em').attr('text-anchor', 'middle').on(\"mouseover\", function (d, i) {\n          dispatch.elementMouseover({\n            label: d.tooltip || d.key,\n            color: d.color\n          });\n        }).on(\"mouseout\", function (d, i) {\n          dispatch.elementMouseout({\n            label: d.tooltip\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        }).call(axisDrag);\n        dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n        dimensions.exit().remove();\n        dimensions.select('.nv-label').text(function (d) {\n          return d.key;\n        }); // Add and store a brush for each axis.\n\n        restoreBrush(displayBrush);\n        var actives = dimensionNames.filter(function (p) {\n          return !y[p].brush.empty();\n        }),\n            extents = actives.map(function (p) {\n          return y[p].brush.extent();\n        });\n        var formerActive = active.slice(0); //Restore active values\n\n        active = [];\n        foreground.style(\"display\", function (d) {\n          var isActive = actives.every(function (p, i) {\n            if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n              return true;\n            }\n\n            return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n          });\n          if (isActive) active.push(d);\n          return !isActive ? \"none\" : null;\n        });\n\n        if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n          dispatch.activeChanged(active);\n        } // Returns the path for a given data point.\n\n\n        function path(d) {\n          return line(enabledDimensions.map(function (p) {\n            //If value if missing, put the value on the missing value line\n            if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n              var domain = y[p.key].domain();\n              var range = y[p.key].range();\n              var min = domain[0] - (domain[1] - domain[0]) / 9; //If it's not already the case, allow brush to select undefined values\n\n              if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n                var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                y[p.key].brush.y(newscale);\n                axisWithUndefinedValues.push(p.key);\n              }\n\n              if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                return [x(p.key), y[p.key](min)];\n              }\n            } //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\n\n            if (missingValuesline !== undefined) {\n              if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                missingValuesline.style(\"display\", \"inline\");\n                missingValueslineText.style(\"display\", \"inline\");\n              } else {\n                missingValuesline.style(\"display\", \"none\");\n                missingValueslineText.style(\"display\", \"none\");\n              }\n            }\n\n            return [x(p.key), y[p.key](d.values[p.key])];\n          }));\n        }\n\n        function restoreBrush(visible) {\n          filters.forEach(function (f) {\n            //If filter brushed NaN values, keep the brush on the bottom of the axis.\n            var brushDomain = y[f.dimension].brush.y().domain();\n\n            if (f.hasOnlyNaN) {\n              f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n            }\n\n            if (f.hasNaN) {\n              f.extent[0] = brushDomain[0];\n            }\n\n            if (visible) y[f.dimension].brush.extent(f.extent);\n          });\n          dimensions.select('.nv-brushBackground').each(function (d) {\n            d3.select(this).call(y[d.key].brush);\n          }).selectAll('rect').attr('x', -8).attr('width', 16);\n          updateTicks();\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brushstart() {\n          //If brush aren't visible, show it before brushing again.\n          if (displayBrush === false) {\n            displayBrush = true;\n            restoreBrush(true);\n          }\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brush() {\n          actives = dimensionNames.filter(function (p) {\n            return !y[p].brush.empty();\n          });\n          extents = actives.map(function (p) {\n            return y[p].brush.extent();\n          });\n          filters = []; //erase current filters\n\n          actives.forEach(function (d, i) {\n            filters[i] = {\n              dimension: d,\n              extent: extents[i],\n              hasNaN: false,\n              hasOnlyNaN: false\n            };\n          });\n          active = []; //erase current active list\n\n          foreground.style('display', function (d) {\n            var isActive = actives.every(function (p, i) {\n              if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n              return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n            });\n            if (isActive) active.push(d);\n            return isActive ? null : 'none';\n          });\n          updateTicks();\n          dispatch.brush({\n            filters: filters,\n            active: active\n          });\n        }\n\n        function brushend() {\n          var hasActiveBrush = actives.length > 0 ? true : false;\n          filters.forEach(function (f) {\n            if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0) f.hasNaN = true;\n            if (f.extent[1] < y[f.dimension].domain()[0]) f.hasOnlyNaN = true;\n          });\n          dispatch.brushEnd(active, hasActiveBrush);\n        }\n\n        function updateTicks() {\n          dimensions.select('.nv-axis').each(function (d, i) {\n            var f = filters.filter(function (k) {\n              return k.dimension == d.key;\n            });\n            currentTicks[d.key] = y[d.key].domain(); //If brush are available, display brush extent\n\n            if (f.length != 0 && displayBrush) {\n              currentTicks[d.key] = [];\n              if (f[0].extent[1] > y[d.key].domain()[0]) currentTicks[d.key] = [f[0].extent[1]];\n              if (f[0].extent[0] >= y[d.key].domain()[0]) currentTicks[d.key].push(f[0].extent[0]);\n            }\n\n            d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n          });\n        }\n\n        function dragStart(d) {\n          dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n          background.attr(\"visibility\", \"hidden\");\n        }\n\n        function dragMove(d) {\n          dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n          foreground.attr(\"d\", path);\n          enabledDimensions.sort(function (a, b) {\n            return dimensionPosition(a.key) - dimensionPosition(b.key);\n          });\n          enabledDimensions.forEach(function (d, i) {\n            return d.currentPosition = i;\n          });\n          x.domain(enabledDimensions.map(function (d) {\n            return d.key;\n          }));\n          dimensions.attr(\"transform\", function (d) {\n            return \"translate(\" + dimensionPosition(d.key) + \")\";\n          });\n        }\n\n        function dragEnd(d, i) {\n          delete this.parentNode.__origin__;\n          delete dragging[d.key];\n          d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n          foreground.attr(\"d\", path);\n          background.attr(\"d\", path).attr(\"visibility\", null);\n          dispatch.dimensionsOrder(enabledDimensions);\n        }\n\n        function dimensionPosition(d) {\n          var v = dragging[d];\n          return v == null ? x(d) : v;\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      filters: {\n        get: function get() {\n          return filters;\n        },\n        set: function set(_) {\n          filters = _;\n        }\n      },\n      active: {\n        get: function get() {\n          return active;\n        },\n        set: function set(_) {\n          active = _;\n        }\n      },\n      lineTension: {\n        get: function get() {\n          return lineTension;\n        },\n        set: function set(_) {\n          lineTension = _;\n        }\n      },\n      undefinedValuesLabel: {\n        get: function get() {\n          return undefinedValuesLabel;\n        },\n        set: function set(_) {\n          undefinedValuesLabel = _;\n        }\n      },\n      // deprecated options\n      dimensions: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensions', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionNames: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionNames', 'use dimensionData instead');\n          dimensionNames = [];\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionFormats: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.format;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (f) {\n              dimensionData.push({\n                format: f\n              });\n            });\n          } else {\n            _.forEach(function (f, i) {\n              dimensionData[i].format = f;\n            });\n          }\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.parallelCoordinatesChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var parallelCoordinates = nv.models.parallelCoordinates();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var dimensionTooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showLegend = true,\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        dimensionData = [],\n        displayBrush = true,\n        defaultState = null,\n        noData = null,\n        nanValue = \"undefined\",\n        dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    }; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    };\n\n    tooltip.contentGenerator(function (data) {\n      var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\n      if (data.series.length !== 0) {\n        str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n        data.series.forEach(function (d) {\n          str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n        });\n        str = str + '</tbody>';\n      }\n\n      str = str + '</table>';\n      return str;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(parallelCoordinates);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(dimensionData), chart.update).getter(stateGetter(dimensionData)).update(); //set state.disabled\n\n        state.disabled = dimensionData.map(function (d) {\n          return !!d.disabled;\n        }); //Keep dimensions position in memory\n\n        dimensionData = dimensionData.map(function (d) {\n          d.disabled = !!d.disabled;\n          return d;\n        });\n        dimensionData.forEach(function (d, i) {\n          d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n          d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.select(\"rect\").attr(\"width\", availableWidth).attr(\"height\", availableHeight > 0 ? availableHeight : 0); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth).color(function (d) {\n            return \"rgb(188,190,192)\";\n          });\n          g.select('.nv-legendWrap').datum(dimensionData.sort(function (a, b) {\n            return a.originalPosition - b.originalPosition;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate( 0 ,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        parallelCoordinates.width(availableWidth).height(availableHeight).dimensionData(dimensionData).displayBrush(displayBrush);\n        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ').datum(data);\n        parallelCoordinatesWrap.transition().call(parallelCoordinates); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //Display reset brush button\n\n        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n          if (hasActiveBrush) {\n            displayBrush = true;\n            dispatch.brushEnd(active);\n          } else {\n            displayBrush = false;\n          }\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); //Update dimensions order and display reset sorting button\n\n        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n          dimensionData.sort(function (a, b) {\n            return a.currentPosition - b.currentPosition;\n          });\n          var isSorted = false;\n          dimensionData.forEach(function (d, i) {\n            d.currentPosition = i;\n            if (d.currentPosition !== d.originalPosition) isSorted = true;\n          });\n          dispatch.dimensionsOrder(dimensionData, isSorted);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            dimensionData.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('parraleleCoordinateChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var tp = {\n        key: evt.label,\n        color: evt.color,\n        series: []\n      };\n\n      if (evt.values) {\n        Object.keys(evt.values).forEach(function (d) {\n          var dim = evt.dimensions.filter(function (dd) {\n            return dd.key === d;\n          })[0];\n\n          if (dim) {\n            var v;\n\n            if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n              v = nanValue;\n            } else {\n              v = dim.format(evt.values[d]);\n            }\n\n            tp.series.push({\n              idx: dim.currentPosition,\n              key: d,\n              value: v,\n              color: dim.color\n            });\n          }\n        });\n        tp.series.sort(function (a, b) {\n          return a.idx - b.idx;\n        });\n      }\n\n      tooltip.data(tp).hidden(false);\n    });\n    parallelCoordinates.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.parallelCoordinates = parallelCoordinates;\n    chart.legend = legend;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nanValue: {\n        get: function get() {\n          return nanValue;\n        },\n        set: function set(_) {\n          nanValue = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          parallelCoordinates.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, parallelCoordinates);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pie = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 500,\n        height = 500,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        valueFormat = d3.format(',.2f'),\n        showLabels = true,\n        labelsOutside = false,\n        labelType = \"key\",\n        labelThreshold = .02 //if slice percentage is under this, don't show label\n    ,\n        hideOverlapLabels = false //Hide labels that don't fit in slice\n    ,\n        donut = false,\n        title = false,\n        growOnHover = true,\n        titleOffset = 0,\n        labelSunbeamLayout = false,\n        startAngle = false,\n        padAngle = false,\n        endAngle = false,\n        cornerRadius = 0,\n        donutRatio = 0.5,\n        duration = 250,\n        arcsRadius = [],\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd');\n\n    var arcs = [];\n    var arcsOver = []; //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom,\n            radius = Math.min(availableWidth, availableHeight) / 2,\n            arcsRadiusOuter = [],\n            arcsRadiusInner = [];\n        container = d3.select(this);\n\n        if (arcsRadius.length === 0) {\n          var outer = radius - radius / 10;\n          var inner = donutRatio * radius;\n\n          for (var i = 0; i < data[0].length; i++) {\n            arcsRadiusOuter.push(outer);\n            arcsRadiusInner.push(inner);\n          }\n        } else {\n          if (growOnHover) {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return (d.outer - d.outer / 10) * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return (d.inner - d.inner / 10) * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner - d.inner / 10;\n            }));\n          } else {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return d.outer * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return d.inner * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner;\n            }));\n          }\n        }\n\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pie nv-chart-' + id);\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n        gEnter.append('g').attr('class', 'nv-pieLabels');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n        g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')'); //\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        arcs = [];\n        arcsOver = [];\n\n        for (var i = 0; i < data[0].length; i++) {\n          var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n          var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n          if (startAngle !== false) {\n            arc.startAngle(startAngle);\n            arcOver.startAngle(startAngle);\n          }\n\n          if (endAngle !== false) {\n            arc.endAngle(endAngle);\n            arcOver.endAngle(endAngle);\n          }\n\n          if (donut) {\n            arc.innerRadius(arcsRadiusInner[i]);\n            arcOver.innerRadius(arcsRadiusInner[i]);\n          }\n\n          if (arc.cornerRadius && cornerRadius) {\n            arc.cornerRadius(cornerRadius);\n            arcOver.cornerRadius(cornerRadius);\n          }\n\n          arcs.push(arc);\n          arcsOver.push(arcOver);\n        } // Setup the Pie chart and choose the data element\n\n\n        var pie = d3.layout.pie().sort(null).value(function (d) {\n          return d.disabled ? 0 : getY(d);\n        }); // padAngle added in d3 3.5\n\n        if (pie.padAngle && padAngle) {\n          pie.padAngle(padAngle);\n        } // if title is specified and donut, put it in the middle\n\n\n        if (donut && title) {\n          g_pie.append(\"text\").attr('class', 'nv-pie-title');\n          wrap.select('.nv-pie-title').style(\"text-anchor\", \"middle\").text(function (d) {\n            return title;\n          }).style(\"font-size\", Math.min(availableWidth, availableHeight) * donutRatio * 2 / (title.length + 2) + \"px\").attr(\"dy\", \"0.35em\") // trick to vertically center text\n          .attr('transform', function (d, i) {\n            return 'translate(0, ' + titleOffset + ')';\n          });\n        }\n\n        var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n        var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n        slices.exit().remove();\n        pieLabels.exit().remove();\n        var ae = slices.enter().append('g');\n        ae.attr('class', 'nv-slice');\n        ae.on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(70).attr(\"d\", arcsOver[i]);\n          }\n\n          dispatch.elementMouseover({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n          });\n        });\n        ae.on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(50).attr(\"d\", arcs[i]);\n          }\n\n          dispatch.elementMouseout({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n        });\n        ae.on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        slices.attr('fill', function (d, i) {\n          return color(d.data, i);\n        });\n        slices.attr('stroke', function (d, i) {\n          return color(d.data, i);\n        });\n        var paths = ae.append('path').each(function (d) {\n          this._current = d;\n        });\n        slices.select('path').transition().duration(duration).attr('d', function (d, i) {\n          return arcs[i](d);\n        }).attrTween('d', arcTween);\n\n        if (showLabels) {\n          // This does the normal label\n          var labelsArc = [];\n\n          for (var i = 0; i < data[0].length; i++) {\n            labelsArc.push(arcs[i]);\n\n            if (labelsOutside) {\n              if (donut) {\n                labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n              }\n            } else if (!donut) {\n              labelsArc[i].innerRadius(0);\n            }\n          }\n\n          pieLabels.enter().append(\"g\").classed(\"nv-label\", true).each(function (d, i) {\n            var group = d3.select(this);\n            group.attr('transform', function (d, i) {\n              if (labelSunbeamLayout) {\n                d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n                d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n                var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n                if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                  rotateAngle -= 90;\n                } else {\n                  rotateAngle += 90;\n                }\n\n                return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n              } else {\n                d.outerRadius = radius + 10; // Set Outer Coordinate\n\n                d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                return 'translate(' + labelsArc[i].centroid(d) + ')';\n              }\n            });\n            group.append('rect').style('stroke', '#fff').style('fill', '#fff').attr(\"rx\", 3).attr(\"ry\", 3);\n            group.append('text').style('text-anchor', labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n            .style('fill', '#000');\n          });\n          var labelLocationHash = {};\n          var avgHeight = 14;\n          var avgWidth = 140;\n\n          var createHashKey = function createHashKey(coordinates) {\n            return Math.floor(coordinates[0] / avgWidth) * avgWidth + ',' + Math.floor(coordinates[1] / avgHeight) * avgHeight;\n          };\n\n          var getSlicePercentage = function getSlicePercentage(d) {\n            return (d.endAngle - d.startAngle) / (2 * Math.PI);\n          };\n\n          pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n            if (labelSunbeamLayout) {\n              d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n              d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n              var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n              if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                rotateAngle -= 90;\n              } else {\n                rotateAngle += 90;\n              }\n\n              return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n            } else {\n              d.outerRadius = radius + 10; // Set Outer Coordinate\n\n              d.innerRadius = radius + 15; // Set Inner Coordinate\n\n              /*\n              Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n              Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n              Adjust the label's y-position to remove the overlap.\n              */\n\n              var center = labelsArc[i].centroid(d);\n              var percent = getSlicePercentage(d);\n\n              if (d.value && percent >= labelThreshold) {\n                var hashKey = createHashKey(center);\n\n                if (labelLocationHash[hashKey]) {\n                  center[1] -= avgHeight;\n                }\n\n                labelLocationHash[createHashKey(center)] = true;\n              }\n\n              return 'translate(' + center + ')';\n            }\n          });\n          pieLabels.select(\".nv-label text\").style('text-anchor', function (d, i) {\n            //center the text on it's origin or begin/end if orthogonal aligned\n            return labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle';\n          }).text(function (d, i) {\n            var percent = getSlicePercentage(d);\n            var label = '';\n            if (!d.value || percent < labelThreshold) return '';\n\n            if (typeof labelType === 'function') {\n              label = labelType(d, i, {\n                'key': getX(d.data),\n                'value': getY(d.data),\n                'percent': valueFormat(percent)\n              });\n            } else {\n              switch (labelType) {\n                case 'key':\n                  label = getX(d.data);\n                  break;\n\n                case 'value':\n                  label = valueFormat(getY(d.data));\n                  break;\n\n                case 'percent':\n                  label = d3.format('%')(percent);\n                  break;\n              }\n            }\n\n            return label;\n          });\n\n          if (hideOverlapLabels) {\n            pieLabels.each(function (d, i) {\n              if (!this.getBBox) return;\n              var bb = this.getBBox(),\n                  center = labelsArc[i].centroid(d);\n              var topLeft = {\n                x: center[0] + bb.x,\n                y: center[1] + bb.y\n              };\n              var topRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y\n              };\n              var bottomLeft = {\n                x: topLeft.x,\n                y: topLeft.y + bb.height\n              };\n              var bottomRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y + bb.height\n              };\n              d.visible = nv.utils.pointIsInArc(topLeft, d, arc) && nv.utils.pointIsInArc(topRight, d, arc) && nv.utils.pointIsInArc(bottomLeft, d, arc) && nv.utils.pointIsInArc(bottomRight, d, arc);\n            }).style('display', function (d) {\n              return d.visible ? null : 'none';\n            });\n          }\n        } // Computes the angle of an arc, converting from radians to degrees.\n\n\n        function angle(d) {\n          var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n          return a > 90 ? a - 180 : a;\n        }\n\n        function arcTween(a, idx) {\n          a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n          a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n          if (!donut) a.innerRadius = 0;\n          var i = d3.interpolate(this._current, a);\n          this._current = i(0);\n          return function (t) {\n            return arcs[idx](i(t));\n          };\n        }\n      });\n      renderWatch.renderEnd('pie immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      arcsRadius: {\n        get: function get() {\n          return arcsRadius;\n        },\n        set: function set(_) {\n          arcsRadius = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      title: {\n        get: function get() {\n          return title;\n        },\n        set: function set(_) {\n          title = _;\n        }\n      },\n      titleOffset: {\n        get: function get() {\n          return titleOffset;\n        },\n        set: function set(_) {\n          titleOffset = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      hideOverlapLabels: {\n        get: function get() {\n          return hideOverlapLabels;\n        },\n        set: function set(_) {\n          hideOverlapLabels = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      endAngle: {\n        get: function get() {\n          return endAngle;\n        },\n        set: function set(_) {\n          endAngle = _;\n        }\n      },\n      startAngle: {\n        get: function get() {\n          return startAngle;\n        },\n        set: function set(_) {\n          startAngle = _;\n        }\n      },\n      padAngle: {\n        get: function get() {\n          return padAngle;\n        },\n        set: function set(_) {\n          padAngle = _;\n        }\n      },\n      cornerRadius: {\n        get: function get() {\n          return cornerRadius;\n        },\n        set: function set(_) {\n          cornerRadius = _;\n        }\n      },\n      donutRatio: {\n        get: function get() {\n          return donutRatio;\n        },\n        set: function set(_) {\n          donutRatio = _;\n        }\n      },\n      labelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n        }\n      },\n      labelSunbeamLayout: {\n        get: function get() {\n          return labelSunbeamLayout;\n        },\n        set: function set(_) {\n          labelSunbeamLayout = _;\n        }\n      },\n      donut: {\n        get: function get() {\n          return donut;\n        },\n        set: function set(_) {\n          donut = _;\n        }\n      },\n      growOnHover: {\n        get: function get() {\n          return growOnHover;\n        },\n        set: function set(_) {\n          growOnHover = _;\n        }\n      },\n      // depreciated after 1.7.1\n      pieLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // depreciated after 1.7.1\n      donutLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // deprecated after 1.7.1\n      labelFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n          nv.deprecated('labelFormat', 'use valueFormat instead');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n          margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n          margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n          margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      labelType: {\n        get: function get() {\n          return labelType;\n        },\n        set: function set(_) {\n          labelType = _ || 'key';\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pieChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showTooltipPercent = false,\n        showLegend = true,\n        legendPosition = \"top\",\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return pie.valueFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    }; //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(pie);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-pieWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === \"top\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          } else if (legendPosition === \"right\") {\n            var legendWidth = nv.models.legend().width();\n\n            if (availableWidth / 2 < legendWidth) {\n              legendWidth = availableWidth / 2;\n            }\n\n            legend.height(availableHeight).key(pie.x());\n            legend.width(legendWidth);\n            availableWidth -= legend.width();\n            wrap.select('.nv-legendWrap').datum(data).call(legend).attr('transform', 'translate(' + availableWidth + ',0)');\n          } else if (legendPosition === \"bottom\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + availableHeight + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        pie.width(availableWidth).height(availableHeight);\n        var pieWrap = g.select('.nv-pieWrap').datum([data]);\n        d3.transition(pieWrap).call(pie); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('pieChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    pie.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    pie.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    pie.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          legend.color(color);\n          pie.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          pie.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sankey = function () {\n    'use strict'; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function layout(iterations) {\n      computeNodeLinks();\n      computeNodeValues();\n      computeNodeBreadths();\n      computeNodeDepths(iterations);\n    };\n\n    var relayout = function relayout() {\n      computeLinkDepths();\n    }; // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n\n\n    var link = function link() {\n      var curvature = .5;\n\n      function link(d) {\n        var x0 = d.source.x + d.source.dx,\n            x1 = d.target.x,\n            xi = d3.interpolateNumber(x0, x1),\n            x2 = xi(curvature),\n            x3 = xi(1 - curvature),\n            y0 = d.source.y + d.sy + d.dy / 2,\n            y1 = d.target.y + d.ty + d.dy / 2;\n        var linkPath = 'M' + x0 + ',' + y0 + 'C' + x2 + ',' + y0 + ' ' + x3 + ',' + y1 + ' ' + x1 + ',' + y1;\n        return linkPath;\n      }\n\n      link.curvature = function (_) {\n        if (!arguments.length) return curvature;\n        curvature = +_;\n        return link;\n      };\n\n      return link;\n    }; // Y-position of the middle of a node.\n\n\n    var center = function center(node) {\n      return node.y + node.dy / 2;\n    }; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n\n\n    function computeNodeLinks() {\n      nodes.forEach(function (node) {\n        // Links that have this node as source.\n        node.sourceLinks = []; // Links that have this node as target.\n\n        node.targetLinks = [];\n      });\n      links.forEach(function (link) {\n        var source = link.source,\n            target = link.target;\n        if (typeof source === 'number') source = link.source = nodes[link.source];\n        if (typeof target === 'number') target = link.target = nodes[link.target];\n        source.sourceLinks.push(link);\n        target.targetLinks.push(link);\n      });\n    } // Compute the value (size) of each node by summing the associated links.\n\n\n    function computeNodeValues() {\n      nodes.forEach(function (node) {\n        node.value = Math.max(d3.sum(node.sourceLinks, value), d3.sum(node.targetLinks, value));\n      });\n    } // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n\n\n    function computeNodeBreadths() {\n      //\n      var remainingNodes = nodes,\n          nextNodes,\n          x = 0; // Work from left to right.\n      // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n      //\n\n      while (remainingNodes.length && x < nodes.length) {\n        nextNodes = [];\n        remainingNodes.forEach(function (node) {\n          node.x = x;\n          node.dx = nodeWidth;\n          node.sourceLinks.forEach(function (link) {\n            if (nextNodes.indexOf(link.target) < 0) {\n              nextNodes.push(link.target);\n            }\n          });\n        });\n        remainingNodes = nextNodes;\n        ++x; //\n      } // Optionally move pure sinks always to the right.\n\n\n      if (sinksRight) {\n        moveSinksRight(x);\n      }\n\n      scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n      nodes.forEach(function (node) {\n        if (!node.targetLinks.length) {\n          node.x = d3.min(node.sourceLinks, function (d) {\n            return d.target.x;\n          }) - 1;\n        }\n      });\n    }\n\n    function moveSinksRight(x) {\n      nodes.forEach(function (node) {\n        if (!node.sourceLinks.length) {\n          node.x = x - 1;\n        }\n      });\n    }\n\n    function scaleNodeBreadths(kx) {\n      nodes.forEach(function (node) {\n        node.x *= kx;\n      });\n    } // Compute the depth (y-position) for each node.\n\n\n    function computeNodeDepths(iterations) {\n      // Group nodes by breath.\n      var nodesByBreadth = d3.nest().key(function (d) {\n        return d.x;\n      }).sortKeys(d3.ascending).entries(nodes).map(function (d) {\n        return d.values;\n      }); //\n\n      initializeNodeDepth();\n      resolveCollisions();\n      computeLinkDepths();\n\n      for (var alpha = 1; iterations > 0; --iterations) {\n        relaxRightToLeft(alpha *= .99);\n        resolveCollisions();\n        computeLinkDepths();\n        relaxLeftToRight(alpha);\n        resolveCollisions();\n        computeLinkDepths();\n      }\n\n      function initializeNodeDepth() {\n        // Calculate vertical scaling factor.\n        var ky = d3.min(nodesByBreadth, function (nodes) {\n          return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n        });\n        nodesByBreadth.forEach(function (nodes) {\n          nodes.forEach(function (node, i) {\n            node.y = i;\n            node.dy = node.value * ky;\n          });\n        });\n        links.forEach(function (link) {\n          link.dy = link.value * ky;\n        });\n      }\n\n      function relaxLeftToRight(alpha) {\n        nodesByBreadth.forEach(function (nodes, breadth) {\n          nodes.forEach(function (node) {\n            if (node.targetLinks.length) {\n              // Value-weighted average of the y-position of source node centers linked to this node.\n              var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedSource(link) {\n          return (link.source.y + link.sy + link.dy / 2) * link.value;\n        }\n      }\n\n      function relaxRightToLeft(alpha) {\n        nodesByBreadth.slice().reverse().forEach(function (nodes) {\n          nodes.forEach(function (node) {\n            if (node.sourceLinks.length) {\n              // Value-weighted average of the y-positions of target nodes linked to this node.\n              var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedTarget(link) {\n          return (link.target.y + link.ty + link.dy / 2) * link.value;\n        }\n      }\n\n      function resolveCollisions() {\n        nodesByBreadth.forEach(function (nodes) {\n          var node,\n              dy,\n              y0 = 0,\n              n = nodes.length,\n              i; // Push any overlapping nodes down.\n\n          nodes.sort(ascendingDepth);\n\n          for (i = 0; i < n; ++i) {\n            node = nodes[i];\n            dy = y0 - node.y;\n            if (dy > 0) node.y += dy;\n            y0 = node.y + node.dy + nodePadding;\n          } // If the bottommost node goes outside the bounds, push it back up.\n\n\n          dy = y0 - nodePadding - size[1];\n\n          if (dy > 0) {\n            y0 = node.y -= dy; // Push any overlapping nodes back up.\n\n            for (i = n - 2; i >= 0; --i) {\n              node = nodes[i];\n              dy = node.y + node.dy + nodePadding - y0;\n              if (dy > 0) node.y -= dy;\n              y0 = node.y;\n            }\n          }\n        });\n      }\n\n      function ascendingDepth(a, b) {\n        return a.y - b.y;\n      }\n    } // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n\n\n    function computeLinkDepths() {\n      nodes.forEach(function (node) {\n        node.sourceLinks.sort(ascendingTargetDepth);\n        node.targetLinks.sort(ascendingSourceDepth);\n      });\n      nodes.forEach(function (node) {\n        var sy = 0,\n            ty = 0;\n        node.sourceLinks.forEach(function (link) {\n          link.sy = sy;\n          sy += link.dy;\n        });\n        node.targetLinks.forEach(function (link) {\n          link.ty = ty;\n          ty += link.dy;\n        });\n      });\n\n      function ascendingSourceDepth(a, b) {\n        return a.source.y - b.source.y;\n      }\n\n      function ascendingTargetDepth(a, b) {\n        return a.target.y - b.target.y;\n      }\n    } // Value property accessor.\n\n\n    function value(x) {\n      return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = +_;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      nodes: {\n        get: function get() {\n          return nodes;\n        },\n        set: function set(_) {\n          nodes = _;\n        }\n      },\n      links: {\n        get: function get() {\n          return links;\n        },\n        set: function set(_) {\n          links = _;\n        }\n      },\n      size: {\n        get: function get() {\n          return size;\n        },\n        set: function set(_) {\n          size = _;\n        }\n      },\n      sinksRight: {\n        get: function get() {\n          return sinksRight;\n        },\n        set: function set(_) {\n          sinksRight = _;\n        }\n      },\n      layout: {\n        get: function get() {\n          layout(32);\n        },\n        set: function set(_) {\n          layout(_);\n        }\n      },\n      relayout: {\n        get: function get() {\n          relayout();\n        },\n        set: function set(_) {}\n      },\n      center: {\n        get: function get() {\n          return center();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            center = _;\n          }\n        }\n      },\n      link: {\n        get: function get() {\n          return link();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            link = _;\n          }\n\n          return link();\n        }\n      }\n    });\n    nv.utils.initOptions(sankey);\n    return sankey;\n  };\n\n  nv.models.sankeyChart = function () {\n    \"use strict\"; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        sankey = nv.models.sankey(),\n        width = 600,\n        height = 400,\n        nodeWidth = 36,\n        nodePadding = 40,\n        units = 'units',\n        center = undefined; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f'); // zero decimal places\n\n    var format = function format(d) {\n      return formatNumber(d) + ' ' + units;\n    };\n\n    var color = d3.scale.category20();\n\n    var linkTitle = function linkTitle(d) {\n      return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n\n    var nodeFillColor = function nodeFillColor(d) {\n      return d.color = color(d.name.replace(/ .*/, ''));\n    };\n\n    var nodeStrokeColor = function nodeStrokeColor(d) {\n      return d3.rgb(d.color).darker(2);\n    };\n\n    var nodeTitle = function nodeTitle(d) {\n      return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function showError(element, message) {\n      element.append('text').attr('x', 0).attr('y', 0).attr('class', 'nvd3-sankey-chart-error').attr('text-anchor', 'middle').text(message);\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var testData = {\n          nodes: [{\n            'node': 1,\n            'name': 'Test 1'\n          }, {\n            'node': 2,\n            'name': 'Test 2'\n          }, {\n            'node': 3,\n            'name': 'Test 3'\n          }, {\n            'node': 4,\n            'name': 'Test 4'\n          }, {\n            'node': 5,\n            'name': 'Test 5'\n          }, {\n            'node': 6,\n            'name': 'Test 6'\n          }],\n          links: [{\n            'source': 0,\n            'target': 1,\n            'value': 2295\n          }, {\n            'source': 0,\n            'target': 5,\n            'value': 1199\n          }, {\n            'source': 1,\n            'target': 2,\n            'value': 1119\n          }, {\n            'source': 1,\n            'target': 5,\n            'value': 1176\n          }, {\n            'source': 2,\n            'target': 3,\n            'value': 487\n          }, {\n            'source': 2,\n            'target': 5,\n            'value': 632\n          }, {\n            'source': 3,\n            'target': 4,\n            'value': 301\n          }, {\n            'source': 3,\n            'target': 5,\n            'value': 186\n          }]\n        }; // Error handling\n\n        var isDataValid = false;\n        var dataAvailable = false; // check if data is valid\n\n        if ((typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 && (typeof data['links'] === 'object' && data['links'].length) >= 0) {\n          isDataValid = true;\n        } // check if data is available\n\n\n        if (data['nodes'] && data['nodes'].length > 0 && data['links'] && data['links'].length > 0) {\n          dataAvailable = true;\n        } // show error\n\n\n        if (!isDataValid) {\n          console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n          console.info('Valid data format is: ', testData, JSON.stringify(testData));\n          showError(selection, 'Error loading chart, data is invalid');\n          return false;\n        } // TODO use nv.utils.noData\n\n\n        if (!dataAvailable) {\n          showError(selection, 'No data available');\n          return false;\n        } // No errors, continue\n        // append the svg canvas to the page\n\n\n        var svg = selection.append('svg').attr('width', width).attr('height', height).append('g').attr('class', 'nvd3 nv-wrap nv-sankeyChart'); // Set the sankey diagram properties\n\n        sankey.nodeWidth(nodeWidth).nodePadding(nodePadding).size([width, height]);\n        var path = sankey.link();\n        sankey.nodes(data.nodes).links(data.links).layout(32).center(center); // add in the links\n\n        var link = svg.append('g').selectAll('.link').data(data.links).enter().append('path').attr('class', 'link').attr('d', path).style('stroke-width', function (d) {\n          return Math.max(1, d.dy);\n        }).sort(function (a, b) {\n          return b.dy - a.dy;\n        }); // add the link titles\n\n        link.append('title').text(linkTitle); // add in the nodes\n\n        var node = svg.append('g').selectAll('.node').data(data.nodes).enter().append('g').attr('class', 'node').attr('transform', function (d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        }).call(d3.behavior.drag().origin(function (d) {\n          return d;\n        }).on('dragstart', function () {\n          this.parentNode.appendChild(this);\n        }).on('drag', dragmove)); // add the rectangles for the nodes\n\n        node.append('rect').attr('height', function (d) {\n          return d.dy;\n        }).attr('width', sankey.nodeWidth()).style('fill', nodeFillColor).style('stroke', nodeStrokeColor).append('title').text(nodeTitle); // add in the title for the nodes\n\n        node.append('text').attr('x', -6).attr('y', function (d) {\n          return d.dy / 2;\n        }).attr('dy', '.35em').attr('text-anchor', 'end').attr('transform', null).text(function (d) {\n          return d.name;\n        }).filter(function (d) {\n          return d.x < width / 2;\n        }).attr('x', 6 + sankey.nodeWidth()).attr('text-anchor', 'start'); // the function for moving the nodes\n\n        function dragmove(d) {\n          d3.select(this).attr('transform', 'translate(' + d.x + ',' + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ')');\n          sankey.relayout();\n          link.attr('d', path);\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      units: {\n        get: function get() {\n          return units;\n        },\n        set: function set(_) {\n          units = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      format: {\n        get: function get() {\n          return format;\n        },\n        set: function set(_) {\n          format = _;\n        }\n      },\n      linkTitle: {\n        get: function get() {\n          return linkTitle;\n        },\n        set: function set(_) {\n          linkTitle = _;\n        }\n      },\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = _;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      center: {\n        get: function get() {\n          return center;\n        },\n        set: function set(_) {\n          center = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      nodeStyle: {\n        get: function get() {\n          return {};\n        },\n        set: function set(_) {\n          nodeFillColor = _.fillColor !== undefined ? _.fillColor : nodeFillColor;\n          nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n          nodeTitle = _.title !== undefined ? _.title : nodeTitle;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatter = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor() // chooses color\n    ,\n        pointBorderColor = null,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        z = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value\n    ,\n        getSize = function getSize(d) {\n      return d.size || 1;\n    } // accessor to get the point size\n    ,\n        getShape = function getShape(d) {\n      return d.shape || 'circle';\n    } // accessor to get point shape\n    ,\n        forceX = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        forceY = [] // List of numbers to Force into the Y scale\n    ,\n        forceSize = [] // List of numbers to Force into the Size scale\n    ,\n        interactive = true // If true, plots a voronoi overlay for advanced point intersection\n    ,\n        pointActive = function pointActive(d) {\n      return !d.notActive;\n    } // any points that return false will be filtered out\n    ,\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n    ,\n        clipEdge = false // if true, masks points within x and y scale\n    ,\n        clipVoronoi = true // if true, masks each point with a circle... can turn off to slightly increase performance\n    ,\n        showVoronoi = false // display the voronoi areas\n    ,\n        clipRadius = function clipRadius() {\n      return 25;\n    } // function to get the radius for voronoi point clips\n    ,\n        xDomain = null // Override x domain (skips the calculation from data)\n    ,\n        yDomain = null // Override y domain\n    ,\n        xRange = null // Override x range\n    ,\n        yRange = null // Override y range\n    ,\n        sizeDomain = null // Override point size domain\n    ,\n        sizeRange = null,\n        singlePoint = false,\n        dispatch = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd'),\n        useVoronoi = true,\n        duration = 250,\n        interactiveUpdateDelay = 300,\n        showLabels = false; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0,\n        z0 // used to store previous scales\n    ,\n        xDom,\n        yDom // used to store previous domains\n    ,\n        width0,\n        height0,\n        timeoutID,\n        needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        _sizeRange_def = [16, 256],\n        _cache = {}; //============================================================\n    // Diff and Cache Utilities\n    //------------------------------------------------------------\n    // getDiffs is used to filter unchanged points from the update\n    // selection. It implicitly updates it's cache when called and\n    // therefor the diff is based upon the previous invocation NOT\n    // the previous update.\n    //\n    // getDiffs takes a point as its first argument followed by n\n    // key getter pairs (d, [key, get... key, get]) this approach\n    // was chosen for efficiency. (The filter will call it a LOT).\n    //\n    // It is important to call delCache on point exit to prevent a\n    // memory leak. It is also needed to prevent invalid caches if\n    // a new point uses the same series and point id key.\n    //\n    // Argument Performance Concerns:\n    // - Object property lists for key getter pairs would be very\n    // expensive (points * objects for the GC every update).\n    // - ES6 function names for implicit keys would be nice but\n    // they are not guaranteed to be unique.\n    // - function.toString to obtain implicit keys is possible\n    // but long object keys are not free (internal hash).\n    // - Explicit key without objects are the most efficient.\n\n    function getCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      val = _cache[key] = _cache[key] || {};\n      return val;\n    }\n\n    function delCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      delete _cache[key];\n    }\n\n    function getDiffs(d) {\n      var i,\n          key,\n          val,\n          cache = getCache(d),\n          diffs = false;\n\n      for (i = 1; i < arguments.length; i += 2) {\n        key = arguments[i];\n        val = arguments[i + 1](d[0], d[1]);\n\n        if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n          cache[key] = val;\n          diffs = true;\n        }\n      }\n\n      return diffs;\n    }\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n\n        var logScale = typeof chart.yScale().base === \"function\"; // Only log scale has a method \"base()\"\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain && sizeDomain ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n        d3.merge(data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              size: getSize(d, i)\n            };\n          });\n        }));\n        x.domain(xDomain || d3.extent(seriesData.map(function (d) {\n          return d.x;\n        }).concat(forceX)));\n        if (padData && data[0]) x.range(xRange || [(availableWidth * padDataOuter + availableWidth) / (2 * data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)]); //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n        else x.range(xRange || [0, availableWidth]);\n\n        if (logScale) {\n          var min = d3.min(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;\n          }));\n          y.clamp(true).domain(yDomain || d3.extent(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;else return min * 0.1;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        } else {\n          y.domain(yDomain || d3.extent(seriesData.map(function (d) {\n            return d.y;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        }\n\n        z.domain(sizeDomain || d3.extent(seriesData.map(function (d) {\n          return d.size;\n        }).concat(forceSize))).range(sizeRange || _sizeRange_def); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n\n        if (isNaN(x.domain()[0])) {\n          x.domain([-1, 1]);\n        }\n\n        if (isNaN(y.domain()[0])) {\n          y.domain([-1, 1]);\n        }\n\n        x0 = x0 || x;\n        y0 = y0 || y;\n        z0 = z0 || z;\n        var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n        width0 = width0 || width;\n        height0 = height0 || height;\n        var sizeDiff = width0 !== width || height0 !== height; // Domain Diffs\n\n        xDom = xDom || [];\n        var domainDiff = xDom[0] !== x.domain()[0] || xDom[1] !== x.domain()[1];\n        xDom = x.domain();\n        yDom = yDom || [];\n        domainDiff = domainDiff || yDom[0] !== y.domain()[0] || yDom[1] !== y.domain()[1];\n        yDom = y.domain(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.classed('nv-single-point', singlePoint);\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-point-paths');\n        wrapEnter.append('g').attr('class', 'nv-point-clips');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect').attr('transform', 'translate( -10, -10)');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth + 20).attr('height', availableHeight > 0 ? availableHeight + 20 : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n        function updateInteractiveLayer() {\n          // Always clear needs-update flag regardless of whether or not\n          // we will actually do anything (avoids needless invocations).\n          needsUpdate = false;\n          if (!interactive) return false; // inject series and point index for reference into voronoi\n\n          if (useVoronoi === true) {\n            // nuke all voronoi paths on reload and recreate them\n            wrap.select('.nv-point-paths').selectAll('path').remove();\n            var vertices = d3.merge(data.map(function (group, groupIndex) {\n              return group.values.map(function (point, pointIndex) {\n                // *Adding noise to make duplicates very unlikely\n                // *Injecting series and point index for reference\n                // *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                var pX = getX(point, pointIndex);\n                var pY = getY(point, pointIndex);\n                return [nv.utils.NaNtoZero(x(pX)) + Math.random() * 1e-4, nv.utils.NaNtoZero(y(pY)) + Math.random() * 1e-4, groupIndex, pointIndex, point];\n              }).filter(function (pointArray, pointIndex) {\n                return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n              });\n            }));\n            if (vertices.length == 0) return false; // No active points, we're done\n\n            if (vertices.length < 3) {\n              // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n              vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n              vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n            } // keep voronoi sections from going more than 10 outside of graph\n            // to avoid overlap with other things like legend etc\n\n\n            var bounds = d3.geom.polygon([[-10, -10], [-10, height + 10], [width + 10, height + 10], [width + 10, -10]]); // delete duplicates from vertices - essential assumption for d3.geom.voronoi\n\n            var epsilon = 1e-4; // Uses 1e-4 to determine equivalence.\n\n            vertices = vertices.sort(function (a, b) {\n              return a[0] - b[0] || a[1] - b[1];\n            });\n\n            for (var i = 0; i < vertices.length - 1;) {\n              if (Math.abs(vertices[i][0] - vertices[i + 1][0]) < epsilon && Math.abs(vertices[i][1] - vertices[i + 1][1]) < epsilon) {\n                vertices.splice(i + 1, 1);\n              } else {\n                i++;\n              }\n            }\n\n            var voronoi = d3.geom.voronoi(vertices).map(function (d, i) {\n              return {\n                'data': bounds.clip(d),\n                'series': vertices[i][2],\n                'point': vertices[i][3]\n              };\n            });\n            var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n            var vPointPaths = pointPaths.enter().append(\"svg:path\").attr(\"d\", function (d) {\n              if (!d || !d.data || d.data.length === 0) return 'M 0 0';else return \"M\" + d.data.join(\",\") + \"Z\";\n            }).attr(\"id\", function (d, i) {\n              return \"nv-path-\" + i;\n            }).attr(\"clip-path\", function (d, i) {\n              return \"url(#nv-clip-\" + id + \"-\" + i + \")\";\n            }); // good for debugging point hover issues\n\n            if (showVoronoi) {\n              vPointPaths.style(\"fill\", d3.rgb(230, 230, 230)).style('fill-opacity', 0.4).style('stroke-opacity', 1).style(\"stroke\", d3.rgb(200, 200, 200));\n            }\n\n            if (clipVoronoi) {\n              // voronoi sections are already set to clip,\n              // just create the circles with the IDs they expect\n              wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\n              var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n              var vPointClips = pointClips.enter().append(\"svg:clipPath\").attr(\"id\", function (d, i) {\n                return \"nv-clip-\" + id + \"-\" + i;\n              }).append(\"svg:circle\").attr('cx', function (d) {\n                return d[0];\n              }).attr('cy', function (d) {\n                return d[1];\n              }).attr('r', clipRadius);\n            }\n\n            var mouseEventCallback = function mouseEventCallback(el, d, mDispatch) {\n              if (needsUpdate) return 0;\n              var series = data[d.series];\n              if (series === undefined) return;\n              var point = series.values[d.point];\n              point['color'] = color(series, d.series); // standardize attributes for tooltip.\n\n              point['x'] = getX(point);\n              point['y'] = getY(point); // can't just get box of event node since it's actually a voronoi polygon\n\n              var box = container.node().getBoundingClientRect();\n              var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n              var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n              var pos = {\n                left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n              };\n              mDispatch({\n                point: point,\n                series: series,\n                pos: pos,\n                relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: d.point,\n                event: d3.event,\n                element: el\n              });\n            };\n\n            pointPaths.on('click', function (d) {\n              mouseEventCallback(this, d, dispatch.elementClick);\n            }).on('dblclick', function (d) {\n              mouseEventCallback(this, d, dispatch.elementDblClick);\n            }).on('mouseover', function (d) {\n              mouseEventCallback(this, d, dispatch.elementMouseover);\n            }).on('mouseout', function (d, i) {\n              mouseEventCallback(this, d, dispatch.elementMouseout);\n            });\n          } else {\n            // add event handlers to points instead voronoi paths\n            wrap.select('.nv-groups').selectAll('.nv-group').selectAll('.nv-point') //.data(dataWithPoints)\n            //.style('pointer-events', 'auto') // recativate events, disabled by css\n            .on('click', function (d, i) {\n              //nv.log('test', d, i);\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              var element = this;\n              dispatch.elementClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                event: d3.event,\n                element: element\n              });\n            }).on('dblclick', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementDblClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i\n              });\n            }).on('mouseover', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseover({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            }).on('mouseout', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseout({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            });\n          }\n        }\n\n        needsUpdate = true;\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('nv-noninteractive', !interactive).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'scatter: groups').style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.pointBorderColor || pointBorderColor || color(d, i);\n        }).style('stroke-opacity', 1).style('fill-opacity', .5); // create the points, maintaining their IDs from the original data set\n\n        var points = groups.selectAll('path.nv-point').data(function (d) {\n          return d.values.map(function (point, pointIndex) {\n            return [point, pointIndex];\n          }).filter(function (pointArray, pointIndex) {\n            return pointActive(pointArray[0], pointIndex);\n          });\n        });\n        points.enter().append('path').attr('class', function (d) {\n          return 'nv-point nv-point-' + d[1];\n        }).style('fill', function (d) {\n          return d.color;\n        }).style('stroke', function (d) {\n          return d.color;\n        }).attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n        }).attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        }));\n        points.exit().each(delCache).remove();\n        groups.exit().selectAll('path.nv-point').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }).remove(); //============================================================\n        // Point Update Optimisation Notes\n        //------------------------------------------------------------\n        // The following update selections are filtered with getDiffs\n        // (defined at the top of this file) this brings a performance\n        // benefit for charts with large data sets that accumulate a\n        // subset of changes or additions over time.\n        //\n        // Uneccesary and expensive DOM calls are avoided by culling\n        // unchanged points from the selection in exchange for the\n        // cheaper overhead of caching and diffing each point first.\n        //\n        // Due to the way D3 and NVD3 work, other global changes need\n        // to be considered in addition to local point properties.\n        // This is a potential source of bugs (if any of the global\n        // changes that possibly affect points are missed).\n        // Update Point Positions [x, y]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'x', getX, 'y', getY) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }); // Update Point Appearance [shape, size]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'shape', getShape, 'size', getSize) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        })); // add label a label to scatter chart\n\n        if (showLabels) {\n          var titles = groups.selectAll('.nv-label').data(function (d) {\n            return d.values.map(function (point, pointIndex) {\n              return [point, pointIndex];\n            }).filter(function (pointArray, pointIndex) {\n              return pointActive(pointArray[0], pointIndex);\n            });\n          });\n          titles.enter().append('text').style('fill', function (d, i) {\n            return d.color;\n          }).style('stroke-opacity', 0).style('fill-opacity', 1).attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n          }).text(function (d, i) {\n            return d[0].label;\n          });\n          titles.exit().remove();\n          groups.exit().selectAll('path.nv-label').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          }).remove();\n          titles.each(function (d) {\n            d3.select(this).classed('nv-label', true).classed('nv-label-' + d[1], false).classed('hover', false);\n          });\n          titles.watchTransition(renderWatch, 'scatter labels').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          });\n        } // Delay updating the invisible interactive layer for smoother animation\n\n\n        if (interactiveUpdateDelay) {\n          clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\n          timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay);\n        } else {\n          updateInteractiveLayer();\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy();\n        z0 = z.copy();\n        width0 = width;\n        height0 = height;\n      });\n      renderWatch.renderEnd('scatter immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart); // utility function calls provided by this chart\n\n    chart._calls = new function () {\n      this.clearHighlights = function () {\n        nv.dom.write(function () {\n          container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n        });\n        return null;\n      };\n\n      this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n        nv.dom.write(function () {\n          container.select('.nv-groups').selectAll(\".nv-series-\" + seriesIndex).selectAll(\".nv-point-\" + pointIndex).classed(\"hover\", isHoverOver);\n        });\n      };\n    }(); // trigger calls from events too\n\n    dispatch.on('elementMouseover.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, true);\n    });\n    dispatch.on('elementMouseout.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, false);\n    });\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      pointScale: {\n        get: function get() {\n          return z;\n        },\n        set: function set(_) {\n          z = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      pointDomain: {\n        get: function get() {\n          return sizeDomain;\n        },\n        set: function set(_) {\n          sizeDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      pointRange: {\n        get: function get() {\n          return sizeRange;\n        },\n        set: function set(_) {\n          sizeRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      forcePoint: {\n        get: function get() {\n          return forceSize;\n        },\n        set: function set(_) {\n          forceSize = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      pointActive: {\n        get: function get() {\n          return pointActive;\n        },\n        set: function set(_) {\n          pointActive = _;\n        }\n      },\n      padDataOuter: {\n        get: function get() {\n          return padDataOuter;\n        },\n        set: function set(_) {\n          padDataOuter = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      clipVoronoi: {\n        get: function get() {\n          return clipVoronoi;\n        },\n        set: function set(_) {\n          clipVoronoi = _;\n        }\n      },\n      clipRadius: {\n        get: function get() {\n          return clipRadius;\n        },\n        set: function set(_) {\n          clipRadius = _;\n        }\n      },\n      showVoronoi: {\n        get: function get() {\n          return showVoronoi;\n        },\n        set: function set(_) {\n          showVoronoi = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactiveUpdateDelay: {\n        get: function get() {\n          return interactiveUpdateDelay;\n        },\n        set: function set(_) {\n          interactiveUpdateDelay = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      pointBorderColor: {\n        get: function get() {\n          return pointBorderColor;\n        },\n        set: function set(_) {\n          pointBorderColor = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      pointSize: {\n        get: function get() {\n          return getSize;\n        },\n        set: function set(_) {\n          getSize = d3.functor(_);\n        }\n      },\n      pointShape: {\n        get: function get() {\n          return getShape;\n        },\n        set: function set(_) {\n          getShape = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n\n          if (useVoronoi === false) {\n            clipVoronoi = false;\n          }\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatterChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        distX = nv.models.distribution(),\n        distY = nv.models.distribution(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 75\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        container = null,\n        color = nv.utils.defaultColor(),\n        x = scatter.xScale(),\n        y = scatter.yScale(),\n        showDistX = false,\n        showDistY = false,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        noData = null,\n        duration = 250,\n        showLabels = false;\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickPadding(10);\n    distX.axis('x');\n    distY.axis('y');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      if (showDistX) renderWatch.models(distX);\n      if (showDistY) renderWatch.models(distY);\n      selection.each(function (data) {\n        var that = this;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          renderWatch.renderEnd('scatter immediate');\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = scatter.xScale();\n        y = scatter.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g'); // background for pointer events\n\n        gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n        gEnter.append('g').attr('class', 'nv-distWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Legend\n\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = availableWidth;\n          legend.width(legendWidth);\n          wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0' + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        scatter.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          d.color = d.color || color(d, i);\n          return d.color;\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        })).showLabels(showLabels);\n        wrap.select('.nv-scatterWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })).call(scatter);\n        wrap.select('.nv-regressionLinesWrap').attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n        var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines').data(function (d) {\n          return d;\n        });\n        regWrap.enter().append('g').attr('class', 'nv-regLines');\n        var regLine = regWrap.selectAll('.nv-regLine').data(function (d) {\n          return [d];\n        });\n        regLine.enter().append('line').attr('class', 'nv-regLine').style('stroke-opacity', 0); // don't add lines unless we have slope and intercept to use\n\n        regLine.filter(function (d) {\n          return d.intercept && d.slope;\n        }).watchTransition(renderWatch, 'scatterPlusLineChart: regline').attr('x1', x.range()[0]).attr('x2', x.range()[1]).attr('y1', function (d, i) {\n          return y(x.domain()[0] * d.slope + d.intercept);\n        }).attr('y2', function (d, i) {\n          return y(x.domain()[1] * d.slope + d.intercept);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j);\n        }).style('stroke-opacity', function (d, i) {\n          return d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined' ? 0 : 1;\n        }); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Setup Distribution\n\n\n        if (showDistX) {\n          distX.getData(scatter.x()).scale(x).width(availableWidth).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionX');\n          g.select('.nv-distributionX').attr('transform', 'translate(0,' + y.range()[0] + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distX);\n        }\n\n        if (showDistY) {\n          distY.getData(scatter.y()).scale(y).width(availableHeight).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionY');\n          g.select('.nv-distributionY').attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size()) + ',0)').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distY);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\n        scatter.dispatch.on('elementMouseout.tooltip', function (evt) {\n          tooltip.hidden(true);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', 0);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', distY.size());\n        });\n        scatter.dispatch.on('elementMouseover.tooltip', function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.relativePos[1] - availableHeight);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.relativePos[0] + distX.size());\n          tooltip.data(evt).hidden(false);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('scatter with line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      container: {\n        get: function get() {\n          return container;\n        },\n        set: function set(_) {\n          container = _;\n        }\n      },\n      showDistX: {\n        get: function get() {\n          return showDistX;\n        },\n        set: function set(_) {\n          showDistX = _;\n        }\n      },\n      showDistY: {\n        get: function get() {\n          return showDistY;\n        },\n        set: function set(_) {\n          showDistY = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          distX.color(color);\n          distY.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparkline = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        animate = true,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.getColor(['#000']),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        showMinMaxPoints = true,\n        showCurrentPoint = true,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data, getX)).range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data, getY)).range(yRange || [availableHeight, 0]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var paths = wrap.selectAll('path').data(function (d) {\n          return [d];\n        });\n        paths.enter().append('path');\n        paths.exit().remove();\n        paths.style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).attr('d', d3.svg.line().x(function (d, i) {\n          return x(getX(d, i));\n        }).y(function (d, i) {\n          return y(getY(d, i));\n        })); // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\n        var points = wrap.selectAll('circle.nv-point').data(function (data) {\n          var yValues = data.map(function (d, i) {\n            return getY(d, i);\n          });\n\n          function pointIndex(index) {\n            if (index != -1) {\n              var result = data[index];\n              result.pointIndex = index;\n              return result;\n            } else {\n              return null;\n            }\n          }\n\n          var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n              minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n              currentPoint = pointIndex(yValues.length - 1);\n          return [showMinMaxPoints ? minPoint : null, showMinMaxPoints ? maxPoint : null, showCurrentPoint ? currentPoint : null].filter(function (d) {\n            return d != null;\n          });\n        });\n        points.enter().append('circle');\n        points.exit().remove();\n        points.attr('cx', function (d, i) {\n          return x(getX(d, d.pointIndex));\n        }).attr('cy', function (d, i) {\n          return y(getY(d, d.pointIndex));\n        }).attr('r', 2).attr('class', function (d, i) {\n          return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' : getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue';\n        });\n      });\n      renderWatch.renderEnd('sparkline immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      animate: {\n        get: function get() {\n          return animate;\n        },\n        set: function set(_) {\n          animate = _;\n        }\n      },\n      showMinMaxPoints: {\n        get: function get() {\n          return showMinMaxPoints;\n        },\n        set: function set(_) {\n          showMinMaxPoints = _;\n        }\n      },\n      showCurrentPoint: {\n        get: function get() {\n          return showCurrentPoint;\n        },\n        set: function set(_) {\n          showCurrentPoint = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparklinePlus = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n    var margin = {\n      top: 15,\n      right: 100,\n      bottom: 10,\n      left: 50\n    },\n        width = null,\n        height = null,\n        x,\n        y,\n        index = [],\n        paused = false,\n        xTickFormat = d3.format(',r'),\n        yTickFormat = d3.format(',.2f'),\n        showLastValue = true,\n        alignValue = true,\n        rightAlignValue = false,\n        noData = null,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sparkline);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var currentValue = sparkline.y()(data[data.length - 1], data.length - 1); // Setup Scales\n\n        x = sparkline.xScale();\n        y = sparkline.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-sparklineWrap');\n        gEnter.append('g').attr('class', 'nv-valueWrap');\n        gEnter.append('g').attr('class', 'nv-hoverArea');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        var sparklineWrap = g.select('.nv-sparklineWrap');\n        sparkline.width(availableWidth).height(availableHeight);\n        sparklineWrap.call(sparkline);\n\n        if (showLastValue) {\n          var valueWrap = g.select('.nv-valueWrap');\n          var value = valueWrap.selectAll('.nv-currentValue').data([currentValue]);\n          value.enter().append('text').attr('class', 'nv-currentValue').attr('dx', rightAlignValue ? -8 : 8).attr('dy', '.9em').style('text-anchor', rightAlignValue ? 'end' : 'start');\n          value.attr('x', availableWidth + (rightAlignValue ? margin.right : 0)).attr('y', alignValue ? function (d) {\n            return y(d);\n          } : 0).style('fill', sparkline.color()(data[data.length - 1], data.length - 1)).text(yTickFormat(currentValue));\n        }\n\n        gEnter.select('.nv-hoverArea').append('rect').on('mousemove', sparklineHover).on('click', function () {\n          paused = !paused;\n        }).on('mouseout', function () {\n          index = [];\n          updateValueLine();\n        });\n        g.select('.nv-hoverArea rect').attr('transform', function (d) {\n          return 'translate(' + -margin.left + ',' + -margin.top + ')';\n        }).attr('width', availableWidth + margin.left + margin.right).attr('height', availableHeight + margin.top); //index is currently global (within the chart), may or may not keep it that way\n\n        function updateValueLine() {\n          if (paused) return;\n          var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n          var hoverEnter = hoverValue.enter().append('g').attr('class', 'nv-hoverValue').style('stroke-opacity', 0).style('fill-opacity', 0);\n          hoverValue.exit().transition().duration(250).style('stroke-opacity', 0).style('fill-opacity', 0).remove();\n          hoverValue.attr('transform', function (d) {\n            return 'translate(' + x(sparkline.x()(data[d], d)) + ',0)';\n          }).transition().duration(250).style('stroke-opacity', 1).style('fill-opacity', 1);\n          if (!index.length) return;\n          hoverEnter.append('line').attr('x1', 0).attr('y1', -margin.top).attr('x2', 0).attr('y2', availableHeight);\n          hoverEnter.append('text').attr('class', 'nv-xValue').attr('x', -6).attr('y', -margin.top).attr('text-anchor', 'end').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-xValue').text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n          hoverEnter.append('text').attr('class', 'nv-yValue').attr('x', 6).attr('y', -margin.top).attr('text-anchor', 'start').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-yValue').text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n        }\n\n        function sparklineHover() {\n          if (paused) return;\n          var pos = d3.mouse(this)[0] - margin.left;\n\n          function getClosestIndex(data, x) {\n            var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n            var closestIndex = 0;\n\n            for (var i = 0; i < data.length; i++) {\n              if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                distance = Math.abs(sparkline.x()(data[i], i) - x);\n                closestIndex = i;\n              }\n            }\n\n            return closestIndex;\n          }\n\n          index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n          updateValueLine();\n        }\n      });\n      renderWatch.renderEnd('sparklinePlus immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xTickFormat;\n        },\n        set: function set(_) {\n          xTickFormat = _;\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yTickFormat;\n        },\n        set: function set(_) {\n          yTickFormat = _;\n        }\n      },\n      showLastValue: {\n        get: function get() {\n          return showLastValue;\n        },\n        set: function set(_) {\n          showLastValue = _;\n        }\n      },\n      alignValue: {\n        get: function get() {\n          return alignValue;\n        },\n        set: function set(_) {\n          alignValue = _;\n        }\n      },\n      rightAlignValue: {\n        get: function get() {\n          return rightAlignValue;\n        },\n        set: function set(_) {\n          rightAlignValue = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedArea = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        color = nv.utils.defaultColor() // a function that computes the color\n    ,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        style = 'stack',\n        offset = 'zero',\n        order = 'default',\n        interpolate = 'linear' // controls the line interpolation\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        scatter = nv.models.scatter(),\n        duration = 250,\n        dispatch = d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout', 'renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout');\n\n    scatter.pointSize(2.2) // default size\n    .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        var dataRaw = data; // Injecting point index into each point because d3.layout.stack().out does not give index\n\n        data.forEach(function (aseries, i) {\n          aseries.seriesIndex = i;\n          aseries.values = aseries.values.map(function (d, j) {\n            d.index = j;\n            d.seriesIndex = i;\n            return d;\n          });\n        });\n        var dataFiltered = data.filter(function (series) {\n          return !series.disabled;\n        });\n        data = d3.layout.stack().order(order).offset(offset).values(function (d) {\n          return d.values;\n        }) //TODO: make values customizeable in EVERY model in this fashion\n        .x(getX).y(getY).out(function (d, y0, y) {\n          d.display = {\n            y: y,\n            y0: y0\n          };\n        })(dataFiltered); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-areaWrap');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // If the user has not specified forceY, make sure 0 is included in the domain\n        // Otherwise, use user-specified values for forceY\n\n        if (scatter.forceY().length == 0) {\n          scatter.forceY().push(0);\n        }\n\n        scatter.width(availableWidth).height(availableHeight).x(getX).y(function (d) {\n          if (d.display !== undefined) {\n            return d.display.y + d.display.y0;\n          }\n        }).color(data.map(function (d, i) {\n          d.color = d.color || color(d, d.seriesIndex);\n          return d.color;\n        }));\n        var scatterWrap = g.select('.nv-scatterWrap').datum(data);\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var area = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y + d.display.y0);\n        }).interpolate(interpolate);\n        var zeroArea = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y0);\n        });\n        var path = g.select('.nv-areaWrap').selectAll('path.nv-area').data(function (d) {\n          return d;\n        });\n        path.enter().append('path').attr('class', function (d, i) {\n          return 'nv-area nv-area-' + i;\n        }).attr('d', function (d, i) {\n          return zeroArea(d.values, d.seriesIndex);\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.areaMouseover({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaMouseout({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('click', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaClick({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        });\n        path.exit().remove();\n        path.style('fill', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        });\n        path.watchTransition(renderWatch, 'stackedArea path').attr('d', function (d, i) {\n          return area(d.values, i);\n        }); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        scatter.dispatch.on('elementMouseover.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n        });\n        scatter.dispatch.on('elementMouseout.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n        }); //Special offset functions\n\n        chart.d3_stackedOffset_stackPercent = function (stackData) {\n          var n = stackData.length,\n              //How many series\n          m = stackData[0].length,\n              //how many points per series\n          i,\n              j,\n              o,\n              y0 = [];\n\n          for (j = 0; j < m; ++j) {\n            //Looping through all points\n            for (i = 0, o = 0; i < dataRaw.length; i++) {\n              //looping through all series\n              o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n            }\n\n            if (o) for (i = 0; i < n; i++) {\n              //(total y value of all series at point in time i) != 0\n              stackData[i][j][1] /= o;\n            } else {\n              //(total y value of all series at point in time i) == 0\n              for (i = 0; i < n; i++) {\n                stackData[i][j][1] = 0;\n              }\n            }\n          }\n\n          for (j = 0; j < m; ++j) {\n            y0[j] = 0;\n          }\n\n          return y0;\n        };\n      });\n      renderWatch.renderEnd('stackedArea immediate');\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n\n    chart.interpolate = function (_) {\n      if (!arguments.length) return interpolate;\n      interpolate = _;\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      scatter.duration(duration);\n      return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      offset: {\n        get: function get() {\n          return offset;\n        },\n        set: function set(_) {\n          offset = _;\n        }\n      },\n      order: {\n        get: function get() {\n          return order;\n        },\n        set: function set(_) {\n          order = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      style: {\n        get: function get() {\n          return style;\n        },\n        set: function set(_) {\n          style = _;\n\n          switch (style) {\n            case 'stack':\n              chart.offset('zero');\n              chart.order('default');\n              break;\n\n            case 'stream':\n              chart.offset('wiggle');\n              chart.order('inside-out');\n              break;\n\n            case 'stream-center':\n              chart.offset('silhouette');\n              chart.order('inside-out');\n              break;\n\n            case 'expand':\n              chart.offset('expand');\n              chart.order('default');\n              break;\n\n            case 'stack_percent':\n              chart.offset(chart.d3_stackedOffset_stackPercent);\n              chart.order('default');\n              break;\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.stackedArea());\n    var margin = {\n      top: 10,\n      right: 25,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        focusEnable = false,\n        useInteractiveGuideline = false,\n        showTotalInTooltip = true,\n        totalLabel = 'TOTAL',\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = 250,\n        controlOptions = ['Stacked', 'Stream', 'Expanded'],\n        controlLabels = {},\n        duration = 250;\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    });\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          style: stacked.style()\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.style !== undefined) style = state.style;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(stacked);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = stacked.xScale();\n        y = stacked.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-stackedWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive'); // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = showControls && legendPosition === 'top' ? availableWidth - controlWidth : availableWidth;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            // constant from axis.js, plus some margin for better layout\n            var xAxisHeight = (showXAxis ? 12 : 0) + 10;\n            margin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            var legendTop = availableHeight + xAxisHeight;\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + legendTop + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && margin.top != legend.height()) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + (availableWidth - legendWidth) + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.stacked || 'Stacked',\n            metaKey: 'Stacked',\n            disabled: stacked.style() != 'stack',\n            style: 'stack'\n          }, {\n            key: controlLabels.stream || 'Stream',\n            metaKey: 'Stream',\n            disabled: stacked.style() != 'stream',\n            style: 'stream'\n          }, {\n            key: controlLabels.expanded || 'Expanded',\n            metaKey: 'Expanded',\n            disabled: stacked.style() != 'expand',\n            style: 'expand'\n          }, {\n            key: controlLabels.stack_percent || 'Stack %',\n            metaKey: 'Stack_Percent',\n            disabled: stacked.style() != 'stack_percent',\n            style: 'stack_percent'\n          }];\n          controlWidth = controlOptions.length / 3 * 260;\n          controlsData = controlsData.filter(function (d) {\n            return controlOptions.indexOf(d.metaKey) !== -1;\n          });\n          controls.width(controlWidth).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).call(controls);\n          var requiredTop = Math.max(controls.height(), showLegend && legendPosition === 'top' ? legend.height() : 0);\n\n          if (margin.top != requiredTop) {\n            margin.top = requiredTop;\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n          }\n\n          g.select('.nv-controlsWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        stacked.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          var ticks;\n\n          if (stacked.offset() === 'wiggle') {\n            ticks = 0;\n          } else {\n            ticks = nv.utils.calcTicksY(availableHeight / 36, data);\n          }\n\n          yAxis.scale(y)._ticks(ticks).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n              var currentFormat = yAxis.tickFormat();\n              if (!oldYTickFormat || currentFormat !== percentFormatter) oldYTickFormat = currentFormat; //Forces the yAxis to use percentage in 'expand' mode.\n\n              yAxis.tickFormat(percentFormatter);\n            } else {\n              if (oldYTickFormat) {\n                yAxis.tickFormat(oldYTickFormat);\n                oldYTickFormat = null;\n              }\n            }\n\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(0).call(yAxis);\n          }\n        } //============================================================\n        // Update Focus\n        //============================================================\n\n\n        if (!focusEnable) {\n          stackedWrap.transition().call(stacked);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        stacked.dispatch.on('areaClick.toggle', function (e) {\n          if (data.filter(function (d) {\n            return !d.disabled;\n          }).length === 1) data.forEach(function (d) {\n            d.disabled = false;\n          });else data.forEach(function (d, i) {\n            d.disabled = i != e.seriesIndex;\n          });\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n          stacked.style(d.style);\n          state.style = stacked.style();\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          stacked.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [],\n              valueSum = 0,\n              allNullValues = true,\n              atleastOnePoint = false;\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue != null && pointYValue > 0) {\n              stacked.highlightPoint(i, pointIndex, true);\n              atleastOnePoint = true;\n            } // Draw at least one point if all values are zero.\n\n\n            if (i === data.length - 1 && !atleastOnePoint) {\n              stacked.highlightPoint(i, pointIndex, true);\n            }\n\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\n            var tooltipValue = stacked.style() == 'expand' ? point.display.y : chart.y()(point, pointIndex);\n            allData.push({\n              key: series.key,\n              value: tooltipValue,\n              color: color(series, series.seriesIndex),\n              point: point\n            });\n\n            if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n              valueSum += tooltipValue;\n              allNullValues = false;\n            }\n\n            ;\n          });\n          allData.reverse(); //Highlight the tooltip entry based on which stack the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var yDistMax = Infinity,\n                indexToHighlight = null;\n            allData.forEach(function (series, i) {\n              //To handle situation where the stacked area chart is negative, we need to use absolute values\n              //when checking if the mouse Y value is within the stack area.\n              yValue = Math.abs(yValue);\n              var stackedY0 = Math.abs(series.point.display.y0);\n              var stackedY = Math.abs(series.point.display.y);\n\n              if (yValue >= stackedY0 && yValue <= stackedY + stackedY0) {\n                indexToHighlight = i;\n                return;\n              }\n            });\n            if (indexToHighlight != null) allData[indexToHighlight].highlight = true;\n          } //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\n\n          if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n            allData.push({\n              key: totalLabel,\n              value: valueSum,\n              total: true\n            });\n          }\n\n          var xValue = chart.x()(singlePoint, pointIndex);\n          var valueFormatter = interactiveLayer.tooltip.valueFormatter(); // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\n          if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n            if (!oldValueFormatter) {\n              oldValueFormatter = valueFormatter;\n            } //Forces the tooltip to use percentage in 'expand' mode.\n\n\n            valueFormatter = d3.format(\".1%\");\n          } else {\n            if (oldValueFormatter) {\n              valueFormatter = oldValueFormatter;\n              oldValueFormatter = null;\n            }\n          }\n\n          interactiveLayer.tooltip.valueFormatter(valueFormatter).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          stacked.clearHighlights();\n        });\n        /* Update `main' graph on brush update. */\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.style !== 'undefined') {\n            stacked.style(e.style);\n            style = e.style;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return stacked.x()(d, i) >= extent[0] && stacked.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          stackedWrap.transition().duration(duration).call(stacked); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('stacked Area chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    stacked.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.point['x'] = stacked.x()(evt.point);\n      evt.point['y'] = stacked.y()(evt.point);\n      tooltip.data(evt).hidden(false);\n    });\n    stacked.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      controlOptions: {\n        get: function get() {\n          return controlOptions;\n        },\n        set: function set(_) {\n          controlOptions = _;\n        }\n      },\n      showTotalInTooltip: {\n        get: function get() {\n          return showTotalInTooltip;\n        },\n        set: function set(_) {\n          showTotalInTooltip = _;\n        }\n      },\n      totalLabel: {\n        get: function get() {\n          return totalLabel;\n        },\n        set: function set(_) {\n          totalLabel = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          focus.margin.top = _.top !== undefined ? _.top : focus.margin.top;\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          stacked.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          stacked.color(color);\n          focus.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return stacked.x();\n        },\n        set: function set(_) {\n          stacked.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return stacked.y();\n        },\n        set: function set(_) {\n          stacked.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = !!_;\n          chart.interactive(!_);\n          chart.useVoronoi(!_);\n          stacked.scatter.interactive(!_);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaWithFocusChart = function () {\n    return nv.models.stackedAreaChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  }; // based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\n\n  nv.models.sunburst = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 600,\n        height = 600,\n        mode = \"count\",\n        modes = {\n      count: function count(d) {\n        return 1;\n      },\n      value: function value(d) {\n        return d.value || d.size;\n      },\n      size: function size(d) {\n        return d.value || d.size;\n      }\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        showLabels = false,\n        labelFormat = function labelFormat(d) {\n      if (mode === 'count') {\n        return d.name + ' #' + d.value;\n      } else {\n        return d.name + ' ' + (d.value || d.size);\n      }\n    },\n        labelThreshold = 0.02,\n        sort = function sort(d1, d2) {\n      return d1.name > d2.name;\n    },\n        key = function key(d, i) {\n      if (d.parent !== undefined) {\n        return d.name + '-' + d.parent.name + '-' + i;\n      } else {\n        return d.name;\n      }\n    },\n        groupColorByParent = true,\n        duration = 500,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd'); //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n    var partition = d3.layout.partition().sort(sort);\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n    var arc = d3.svg.arc().startAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n    }).endAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n    }).innerRadius(function (d) {\n      return Math.max(0, y(d.y));\n    }).outerRadius(function (d) {\n      return Math.max(0, y(d.y + d.dy));\n    });\n\n    function rotationToAvoidUpsideDown(d) {\n      var centerAngle = computeCenterAngle(d);\n\n      if (centerAngle > 90) {\n        return 180;\n      } else {\n        return 0;\n      }\n    }\n\n    function computeCenterAngle(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var centerAngle = (startAngle + endAngle) / 2 * (180 / Math.PI) - 90;\n      return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var size = endAngle - startAngle;\n      return size > labelThreshold;\n    } // When zooming: interpolate the scales.\n\n\n    function arcTweenZoom(e, i) {\n      var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n          yd = d3.interpolate(y.domain(), [node.y, 1]),\n          yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n      if (i === 0) {\n        return function () {\n          return arc(e);\n        };\n      } else {\n        return function (t) {\n          x.domain(xd(t));\n          y.domain(yd(t)).range(yr(t));\n          return arc(e);\n        };\n      }\n\n      ;\n    }\n\n    function arcTweenUpdate(d) {\n      var ipo = d3.interpolate({\n        x: d.x0,\n        dx: d.dx0,\n        y: d.y0,\n        dy: d.dy0\n      }, d);\n      return function (t) {\n        var b = ipo(t);\n        d.x0 = b.x;\n        d.dx0 = b.dx;\n        d.y0 = b.y;\n        d.dy0 = b.dy;\n        return arc(b);\n      };\n    }\n\n    function updatePrevPosition(node) {\n      var k = key(node);\n      if (!prevPositions[k]) prevPositions[k] = {};\n      var pP = prevPositions[k];\n      pP.dx = node.dx;\n      pP.x = node.x;\n      pP.dy = node.dy;\n      pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n      nodes.forEach(function (n) {\n        var k = key(n);\n        var pP = prevPositions[k]; //console.log(k,n,pP);\n\n        if (pP) {\n          n.dx0 = pP.dx;\n          n.x0 = pP.x;\n          n.dy0 = pP.dy;\n          n.y0 = pP.y;\n        } else {\n          n.dx0 = n.dx;\n          n.x0 = n.x;\n          n.dy0 = n.dy;\n          n.y0 = n.y;\n        }\n\n        updatePrevPosition(n);\n      });\n    }\n\n    function zoomClick(d) {\n      var labels = container.selectAll('text');\n      var path = container.selectAll('path'); // fade out all text elements\n\n      labels.transition().attr(\"opacity\", 0); // to allow reference to the new center node\n\n      node = d;\n      path.transition().duration(duration).attrTween(\"d\", arcTweenZoom).each('end', function (e) {\n        // partially taken from here: http://bl.ocks.org/metmajer/5480307\n        // check if the animated element's data e lies within the visible angle span given in d\n        if (e.x >= d.x && e.x < d.x + d.dx) {\n          if (e.depth >= d.depth) {\n            // get a selection of the associated text element\n            var parentNode = d3.select(this.parentNode);\n            var arcText = parentNode.select('text'); // fade in the text element and recalculate positions\n\n            arcText.transition().duration(duration).text(function (e) {\n              return labelFormat(e);\n            }).attr(\"opacity\", function (d) {\n              if (labelThresholdMatched(d)) {\n                return 1;\n              } else {\n                return 0;\n              }\n            }).attr(\"transform\", function () {\n              var width = this.getBBox().width;\n              if (e.depth === 0) return \"translate(\" + width / 2 * -1 + \",0)\";else if (e.depth === d.depth) {\n                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n              } else {\n                var centerAngle = computeCenterAngle(e);\n                var rotation = rotationToAvoidUpsideDown(e);\n\n                if (rotation === 0) {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + 5) + ',0)';\n                } else {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                }\n              }\n            });\n          }\n        }\n      });\n    } //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        radius = Math.min(availableWidth, availableHeight) / 2;\n        y.range([0, radius]); // Setup containers and skeleton of chart\n\n        var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\n        if (!wrap[0][0]) {\n          wrap = container.append('g').attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id).attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        } else {\n          wrap.attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        }\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        partition.value(modes[mode] || modes[\"count\"]); //reverse the drawing order so that the labels of inner\n        //arcs are drawn on top of the outer arcs.\n\n        var nodes = partition.nodes(data[0]).reverse();\n        storeRetrievePrevPositions(nodes);\n        var cG = wrap.selectAll('.arc-container').data(nodes, key); //handle new datapoints\n\n        var cGE = cG.enter().append(\"g\").attr(\"class\", 'arc-container');\n        cGE.append(\"path\").attr(\"d\", arc).style(\"fill\", function (d) {\n          if (d.color) {\n            return d.color;\n          } else if (groupColorByParent) {\n            return color((d.children ? d : d.parent).name);\n          } else {\n            return color(d.name);\n          }\n        }).style(\"stroke\", \"#FFF\").on(\"click\", function (d, i) {\n          zoomClick(d);\n          dispatch.elementClick({\n            data: d,\n            index: i\n          });\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true).style('opacity', 0.8);\n          dispatch.elementMouseover({\n            data: d,\n            color: d3.select(this).style(\"fill\"),\n            percent: computeNodePercentage(d)\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false).style('opacity', 1);\n          dispatch.elementMouseout({\n            data: d\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d\n          });\n        }); ///Iterating via each and selecting based on the this\n        ///makes it work ... a cG.selectAll('path') doesn't.\n        ///Without iteration the data (in the element) didn't update.\n\n        cG.each(function (d) {\n          d3.select(this).select('path').transition().duration(duration).attrTween('d', arcTweenUpdate);\n        });\n\n        if (showLabels) {\n          //remove labels first and add them back\n          cG.selectAll('text').remove(); //this way labels are on top of newly added arcs\n\n          cG.append('text').text(function (e) {\n            return labelFormat(e);\n          }).transition().duration(duration).attr(\"opacity\", function (d) {\n            if (labelThresholdMatched(d)) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }).attr(\"transform\", function (d) {\n            var width = this.getBBox().width;\n\n            if (d.depth === 0) {\n              return \"rotate(0)translate(\" + width / 2 * -1 + \",0)\";\n            } else {\n              var centerAngle = computeCenterAngle(d);\n              var rotation = rotationToAvoidUpsideDown(d);\n\n              if (rotation === 0) {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + 5) + ',0)';\n              } else {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n              }\n            }\n          });\n        } //zoom out to the center when the data is updated.\n\n\n        zoomClick(nodes[nodes.length - 1]); //remove unmatched elements ...\n\n        cG.exit().transition().duration(duration).attr('opacity', 0).each('end', function (d) {\n          var k = key(d);\n          prevPositions[k] = undefined;\n        }).remove();\n      });\n      renderWatch.renderEnd('sunburst immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(_) {\n          mode = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      groupColorByParent: {\n        get: function get() {\n          return groupColorByParent;\n        },\n        set: function set(_) {\n          groupColorByParent = !!_;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = !!_;\n        }\n      },\n      labelFormat: {\n        get: function get() {\n          return labelFormat;\n        },\n        set: function set(_) {\n          labelFormat = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      sort: {\n        get: function get() {\n          return sort;\n        },\n        set: function set(_) {\n          sort = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return key;\n        },\n        set: function set(_) {\n          key = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sunburstChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showTooltipPercent = false,\n        id = Math.round(Math.random() * 100000),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d) {\n      return d;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sunburst);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin);\n        var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = container; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        sunburst.width(availableWidth).height(availableHeight).margin(margin);\n        container.call(sunburst);\n      });\n      renderWatch.renderEnd('sunburstChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.series = {\n        key: evt.data.name,\n        value: evt.data.value || evt.data.size,\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    sunburst.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    sunburst.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          sunburst.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          sunburst.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n          sunburst.margin(margin);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.version = \"1.8.6\";\n})();"],"sourceRoot":""}